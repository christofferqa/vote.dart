// Generated by dart2js, the Dart to JavaScript compiler.
// The code supports the following hooks:
// dartPrint(message)   - if this function is defined it is called
//                        instead of the Dart [print] method.
// dartMainRunner(main) - if this function is defined, the Dart [main]
//                        method will not be invoked directly.
//                        Instead, a closure that will invoke [main] is
//                        passed to [dartMainRunner].
function Isolate() {}
init();

var $$ = {};
var $ = Isolate.$isolateProperties;
$$.ExceptionImplementation = {"":
 ["message?"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.message;
  return t1 == null ? 'Exception' : 'Exception: ' + $.S(t1);
},
 is$Exception: true
};

$$.FutureImpl = {"":
 ["_isComplete", "_lib0_value?", "_exception", "_stackTrace", "_exceptionHandled", "_successListeners", "_exceptionHandlers", "_completionListeners"],
 "super": "Object",
 get$value: function() {
  if (this.get$isComplete() !== true)
    throw $.$$throw($.FutureNotCompleteException$());
  var t1 = this._exception;
  if (!(t1 == null))
    throw $.$$throw(t1);
  return this._lib0_value;
},
 get$exception: function() {
  if (this.get$isComplete() !== true)
    throw $.$$throw($.FutureNotCompleteException$());
  return this._exception;
},
 get$stackTrace: function() {
  if (this.get$isComplete() !== true)
    throw $.$$throw($.FutureNotCompleteException$());
  return this._stackTrace;
},
 get$isComplete: function() {
  return this._isComplete;
},
 get$hasValue: function() {
  return this.get$isComplete() === true && this._exception == null;
},
 then$1: function(onSuccess) {
  if (this.get$hasValue() === true)
    onSuccess.call$1(this.get$value());
  else if (this.get$isComplete() !== true)
    this._successListeners.push(onSuccess);
  else if (this._exceptionHandled !== true)
    throw $.$$throw(this._exception);
},
 handleException$1: function(onException) {
  if (this._exceptionHandled === true)
    return;
  if (this._isComplete) {
    var t1 = this._exception;
    if (!(t1 == null))
      this._exceptionHandled = onException.call$1(t1);
  } else
    this._exceptionHandlers.push(onException);
},
 _complete$0: function() {
  this._isComplete = true;
  try {
    if (!(this._exception == null))
      for (var t1 = $.iterator(this._exceptionHandlers); t1.hasNext$0() === true;) {
        var handler = t1.next$0();
        if ($.eqB(handler.call$1(this._exception), true)) {
          this._exceptionHandled = true;
          break;
        }
      }
    if (this.get$hasValue() === true)
      for (t1 = $.iterator(this._successListeners); t1.hasNext$0() === true;) {
        var listener = t1.next$0();
        listener.call$1(this.get$value());
      }
    else if (this._exceptionHandled !== true && this._successListeners.length > 0)
      throw $.$$throw(this._exception);
  } finally {
    for (t1 = $.iterator(this._completionListeners); t1.hasNext$0() === true;) {
      var listener0 = t1.next$0();
      try {
        listener0.call$1(this);
      } catch (exception) {
        $.unwrapException(exception);
      }

    }
  }
},
 _setValue$1: function(value) {
  if (this._isComplete)
    throw $.$$throw($.FutureAlreadyCompleteException$());
  this._lib0_value = value;
  this._complete$0();
},
 _setException$2: function(exception, stackTrace) {
  if (exception == null)
    throw $.$$throw($.ArgumentError$(null));
  if (this._isComplete)
    throw $.$$throw($.FutureAlreadyCompleteException$());
  this._exception = exception;
  this._stackTrace = stackTrace;
  this._complete$0();
}
};

$$.CompleterImpl = {"":
 ["_futureImpl"],
 "super": "Object",
 get$future: function() {
  return this._futureImpl;
},
 complete$1: function(value) {
  this._futureImpl._setValue$1(value);
},
 completeException$2: function(exception, stackTrace) {
  this._futureImpl._setException$2(exception, stackTrace);
},
 completeException$1: function(exception) {
  return this.completeException$2(exception,null)
}
};

$$.HashMapImplementation = {"":
 ["_keys", "_values", "_loadLimit", "_numberOfEntries", "_numberOfDeleted"],
 "super": "Object",
 _probeForAdding$1: function(key) {
  if (key == null)
    throw $.$$throw($.CTC0);
  var t1 = $.hashCode(key);
  if (t1 !== (t1 | 0))
    return this._probeForAdding$1$bailout(1, key, t1);
  var hash = (t1 & this._keys.length - 1) >>> 0;
  for (var numberOfProbes = 1, insertionIndex = -1; true;) {
    t1 = this._keys;
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    var existingKey = t1[hash];
    if (existingKey == null) {
      if (insertionIndex < 0)
        return hash;
      return insertionIndex;
    } else if ($.eqB(existingKey, key))
      return hash;
    else if (insertionIndex < 0 && $.CTC14 === existingKey)
      insertionIndex = hash;
    var numberOfProbes0 = numberOfProbes + 1;
    hash = $.HashMapImplementation__nextProbe(hash, numberOfProbes, this._keys.length);
    numberOfProbes = numberOfProbes0;
  }
},
 _probeForAdding$1$bailout: function(state0, key, t1) {
  var hash = $.and(t1, this._keys.length - 1);
  for (var numberOfProbes = 1, insertionIndex = -1; true;) {
    t1 = this._keys;
    if (hash !== (hash | 0))
      throw $.iae(hash);
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    var existingKey = t1[hash];
    if (existingKey == null) {
      if (insertionIndex < 0)
        return hash;
      return insertionIndex;
    } else if ($.eqB(existingKey, key))
      return hash;
    else if (insertionIndex < 0 && $.CTC14 === existingKey)
      insertionIndex = hash;
    var numberOfProbes0 = numberOfProbes + 1;
    hash = $.HashMapImplementation__nextProbe(hash, numberOfProbes, this._keys.length);
    numberOfProbes = numberOfProbes0;
  }
},
 _probeForLookup$1: function(key) {
  if (key == null)
    throw $.$$throw($.CTC0);
  var hash = $.and($.hashCode(key), this._keys.length - 1);
  if (hash !== (hash | 0))
    return this._probeForLookup$1$bailout(1, key, hash);
  for (var numberOfProbes = 1; true;) {
    var t1 = this._keys;
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    var existingKey = t1[hash];
    if (existingKey == null)
      return -1;
    if ($.eqB(existingKey, key))
      return hash;
    var numberOfProbes0 = numberOfProbes + 1;
    hash = $.HashMapImplementation__nextProbe(hash, numberOfProbes, this._keys.length);
    numberOfProbes = numberOfProbes0;
  }
},
 _probeForLookup$1$bailout: function(state0, key, hash) {
  for (var numberOfProbes = 1; true;) {
    var t1 = this._keys;
    if (hash !== (hash | 0))
      throw $.iae(hash);
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    var existingKey = t1[hash];
    if (existingKey == null)
      return -1;
    if ($.eqB(existingKey, key))
      return hash;
    var numberOfProbes0 = numberOfProbes + 1;
    hash = $.HashMapImplementation__nextProbe(hash, numberOfProbes, this._keys.length);
    numberOfProbes = numberOfProbes0;
  }
},
 _ensureCapacity$0: function() {
  var newNumberOfEntries = this._numberOfEntries + 1;
  if ($.geB(newNumberOfEntries, this._loadLimit)) {
    this._grow$1(this._keys.length * 2);
    return;
  }
  var capacity = this._keys.length;
  var numberOfFreeOrDeleted = capacity - newNumberOfEntries;
  var t1 = this._numberOfDeleted;
  if (t1 > numberOfFreeOrDeleted - t1)
    this._grow$1(capacity);
},
 _grow$1: function(newCapacity) {
  var capacity = this._keys.length;
  this._loadLimit = $.tdiv(newCapacity * 3, 4);
  var oldKeys = this._keys;
  var oldValues = this._values;
  this._keys = $.ListImplementation_List(newCapacity);
  this._values = $.ListImplementation_List(newCapacity);
  for (var t1 = oldKeys.length, t2 = oldValues.length, i = 0; i < capacity; ++i) {
    if (i >= t1)
      throw $.ioore(i);
    var key = oldKeys[i];
    if (key == null || key === $.CTC14)
      continue;
    if (i >= t2)
      throw $.ioore(i);
    var value = oldValues[i];
    var newIndex = this._probeForAdding$1(key);
    var t3 = this._keys;
    if (newIndex !== (newIndex | 0))
      throw $.iae(newIndex);
    if (newIndex < 0 || newIndex >= t3.length)
      throw $.ioore(newIndex);
    t3[newIndex] = key;
    t3 = this._values;
    if (newIndex >= t3.length)
      throw $.ioore(newIndex);
    t3[newIndex] = value;
  }
  this._numberOfDeleted = 0;
},
 clear$0: function() {
  this._numberOfEntries = 0;
  this._numberOfDeleted = 0;
  var t1 = this._keys;
  var length$ = t1.length;
  for (var t2 = this._values, t3 = t2.length, i = 0; i < length$; ++i) {
    t1[i] = null;
    if (i >= t3)
      throw $.ioore(i);
    t2[i] = null;
  }
},
 operator$indexSet$2: function(key, value) {
  this._ensureCapacity$0();
  var index = this._probeForAdding$1(key);
  var t1 = this._keys;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  t1 = t1[index];
  if (t1 == null || t1 === $.CTC14)
    this._numberOfEntries = this._numberOfEntries + 1;
  t1 = this._keys;
  if (index >= t1.length)
    throw $.ioore(index);
  t1[index] = key;
  t1 = this._values;
  if (index >= t1.length)
    throw $.ioore(index);
  t1[index] = value;
},
 operator$index$1: function(key) {
  var index = this._probeForLookup$1(key);
  if ($.ltB(index, 0))
    return;
  var t1 = this._values;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  return t1[index];
},
 putIfAbsent$2: function(key, ifAbsent) {
  var index = this._probeForLookup$1(key);
  if (typeof index !== 'number')
    return this.putIfAbsent$2$bailout(1, key, ifAbsent, index);
  if (index >= 0) {
    var t1 = this._values;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  }
  var value = ifAbsent.call$0();
  this.operator$indexSet$2(key, value);
  return value;
},
 putIfAbsent$2$bailout: function(state0, key, ifAbsent, index) {
  if ($.geB(index, 0)) {
    var t1 = this._values;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  }
  var value = ifAbsent.call$0();
  this.operator$indexSet$2(key, value);
  return value;
},
 remove$1: function(key) {
  var index = this._probeForLookup$1(key);
  if ($.geB(index, 0)) {
    this._numberOfEntries = this._numberOfEntries - 1;
    var t1 = this._values;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    var value = t1[index];
    t1[index] = null;
    t1 = this._keys;
    if (index >= t1.length)
      throw $.ioore(index);
    t1[index] = $.CTC14;
    this._numberOfDeleted = this._numberOfDeleted + 1;
    return value;
  }
  return;
},
 isEmpty$0: function() {
  return this._numberOfEntries === 0;
},
 get$length: function() {
  return this._numberOfEntries;
},
 forEach$1: function(f) {
  var length$ = this._keys.length;
  for (var i = 0; i < length$; ++i) {
    var t1 = this._keys;
    if (i >= t1.length)
      throw $.ioore(i);
    var key = t1[i];
    if (!(key == null) && !(key === $.CTC14)) {
      t1 = this._values;
      if (i >= t1.length)
        throw $.ioore(i);
      f.call$2(key, t1[i]);
    }
  }
},
 getKeys$0: function() {
  var t1 = {};
  var list = $.ListImplementation_List($.get$length(this));
  t1.i_10 = 0;
  this.forEach$1(new $.HashMapImplementation_getKeys__(list, t1));
  return list;
},
 getValues$0: function() {
  var t1 = {};
  var list = $.ListImplementation_List($.get$length(this));
  t1.i_1 = 0;
  this.forEach$1(new $.HashMapImplementation_getValues__(list, t1));
  return list;
},
 containsKey$1: function(key) {
  return !$.eqB(this._probeForLookup$1(key), -1);
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 HashMapImplementation$0: function() {
  this._numberOfEntries = 0;
  this._numberOfDeleted = 0;
  this._loadLimit = $.HashMapImplementation__computeLoadLimit(8);
  this._keys = $.ListImplementation_List(8);
  this._values = $.ListImplementation_List(8);
},
 is$Map: function() { return true; }
};

$$.HashSetImplementation = {"":
 ["_backingMap"],
 "super": "Object",
 clear$0: function() {
  this._backingMap.clear$0();
},
 add$1: function(value) {
  this._backingMap.operator$indexSet$2(value, value);
},
 contains$1: function(value) {
  return this._backingMap.containsKey$1(value);
},
 remove$1: function(value) {
  if (this._backingMap.containsKey$1(value) !== true)
    return false;
  this._backingMap.remove$1(value);
  return true;
},
 addAll$1: function(collection) {
  $.forEach(collection, new $.HashSetImplementation_addAll__(this));
},
 forEach$1: function(f) {
  this._backingMap.forEach$1(new $.HashSetImplementation_forEach__(f));
},
 map$1: function(f) {
  var result = $.Set_Set();
  this._backingMap.forEach$1(new $.HashSetImplementation_map__(f, result));
  return result;
},
 filter$1: function(f) {
  var result = $.Set_Set();
  this._backingMap.forEach$1(new $.HashSetImplementation_filter__(f, result));
  return result;
},
 every$1: function(f) {
  return $.every(this._backingMap.getKeys$0(), f);
},
 isEmpty$0: function() {
  return this._backingMap.isEmpty$0();
},
 get$length: function() {
  return $.get$length(this._backingMap);
},
 iterator$0: function() {
  return $.HashSetIterator$(this);
},
 toString$0: function() {
  return $.Collections_collectionToString(this);
},
 HashSetImplementation$0: function() {
  this._backingMap = $.HashMapImplementation$();
},
 is$Collection: function() { return true; }
};

$$.HashSetIterator = {"":
 ["_entries", "_nextValidIndex"],
 "super": "Object",
 hasNext$0: function() {
  var t1 = this._nextValidIndex;
  var t2 = this._entries;
  var t3 = t2.length;
  if (t1 >= t3)
    return false;
  if (t1 < 0)
    throw $.ioore(t1);
  if (t2[t1] === $.CTC14)
    this._advance$0();
  return this._nextValidIndex < t3;
},
 next$0: function() {
  if (this.hasNext$0() !== true)
    throw $.$$throw($.CTC11);
  var t1 = this._entries;
  var t2 = this._nextValidIndex;
  if (t2 < 0 || t2 >= t1.length)
    throw $.ioore(t2);
  var res = t1[t2];
  this._advance$0();
  return res;
},
 _advance$0: function() {
  var t1 = this._entries;
  var length$ = t1.length;
  var entry = null;
  do {
    var t2 = this._nextValidIndex + 1;
    this._nextValidIndex = t2;
    if (t2 >= length$)
      break;
    t2 = this._nextValidIndex;
    if (t2 < 0 || t2 >= length$)
      throw $.ioore(t2);
    entry = t1[t2];
  } while (entry == null || entry === $.CTC14);
},
 HashSetIterator$1: function(set_) {
  this._advance$0();
}
};

$$._DeletedKeySentinel = {"":
 [],
 "super": "Object"
};

$$.KeyValuePair = {"":
 ["key?", "value="],
 "super": "Object"
};

$$.LinkedHashMapImplementation = {"":
 ["_lib0_list", "_map"],
 "super": "Object",
 operator$indexSet$2: function(key, value) {
  if (this._map.containsKey$1(key) === true)
    this._map.operator$index$1(key).get$element().set$value(value);
  else {
    this._lib0_list.addLast$1($.KeyValuePair$(key, value));
    this._map.operator$indexSet$2(key, this._lib0_list.lastEntry$0());
  }
},
 operator$index$1: function(key) {
  var entry = this._map.operator$index$1(key);
  if (entry == null)
    return;
  return entry.get$element().get$value();
},
 remove$1: function(key) {
  var entry = this._map.remove$1(key);
  if (entry == null)
    return;
  entry.remove$0();
  return entry.get$element().get$value();
},
 putIfAbsent$2: function(key, ifAbsent) {
  var value = this.operator$index$1(key);
  if (this.operator$index$1(key) == null && this.containsKey$1(key) !== true) {
    value = ifAbsent.call$0();
    this.operator$indexSet$2(key, value);
  }
  return value;
},
 getKeys$0: function() {
  var t1 = {};
  var list = $.ListImplementation_List($.get$length(this));
  t1.index_10 = 0;
  this._lib0_list.forEach$1(new $.LinkedHashMapImplementation_getKeys__(list, t1));
  return list;
},
 getValues$0: function() {
  var t1 = {};
  var list = $.ListImplementation_List($.get$length(this));
  t1.index_1 = 0;
  this._lib0_list.forEach$1(new $.LinkedHashMapImplementation_getValues__(list, t1));
  return list;
},
 forEach$1: function(f) {
  this._lib0_list.forEach$1(new $.LinkedHashMapImplementation_forEach__(f));
},
 containsKey$1: function(key) {
  return this._map.containsKey$1(key);
},
 get$length: function() {
  return $.get$length(this._map);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 clear$0: function() {
  this._map.clear$0();
  this._lib0_list.clear$0();
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 LinkedHashMapImplementation$0: function() {
  this._map = $.HashMapImplementation$();
  this._lib0_list = $.DoubleLinkedQueue$();
},
 is$Map: function() { return true; }
};

$$.DoubleLinkedQueueEntry = {"":
 ["_previous!", "_next=", "_lib0_element?"],
 "super": "Object",
 _link$2: function(p, n) {
  this._next = n;
  this._previous = p;
  p.set$_next(this);
  n.set$_previous(this);
},
 prepend$1: function(e) {
  $.DoubleLinkedQueueEntry$(e)._link$2(this._previous, this);
},
 remove$0: function() {
  var t1 = this._next;
  this._previous.set$_next(t1);
  t1 = this._previous;
  this._next.set$_previous(t1);
  this._next = null;
  this._previous = null;
  return this._lib0_element;
},
 _asNonSentinelEntry$0: function() {
  return this;
},
 previousEntry$0: function() {
  return this._previous._asNonSentinelEntry$0();
},
 get$element: function() {
  return this._lib0_element;
},
 DoubleLinkedQueueEntry$1: function(e) {
  this._lib0_element = e;
}
};

$$._DoubleLinkedQueueEntrySentinel = {"":
 ["_previous", "_next", "_lib0_element"],
 "super": "DoubleLinkedQueueEntry",
 remove$0: function() {
  throw $.$$throw($.CTC15);
},
 _asNonSentinelEntry$0: function() {
  return;
},
 get$element: function() {
  throw $.$$throw($.CTC15);
},
 _DoubleLinkedQueueEntrySentinel$0: function() {
  this._link$2(this, this);
}
};

$$.DoubleLinkedQueue = {"":
 ["_sentinel"],
 "super": "Object",
 addLast$1: function(value) {
  this._sentinel.prepend$1(value);
},
 add$1: function(value) {
  this.addLast$1(value);
},
 addAll$1: function(collection) {
  for (var t1 = $.iterator(collection); t1.hasNext$0() === true;)
    this.add$1(t1.next$0());
},
 removeLast$0: function() {
  return this._sentinel._previous.remove$0();
},
 removeFirst$0: function() {
  return this._sentinel._next.remove$0();
},
 first$0: function() {
  return this._sentinel._next.get$element();
},
 last$0: function() {
  return this._sentinel._previous.get$element();
},
 lastEntry$0: function() {
  return this._sentinel.previousEntry$0();
},
 get$length: function() {
  var t1 = {};
  t1.counter_1 = 0;
  this.forEach$1(new $.DoubleLinkedQueue_length__(t1));
  return t1.counter_1;
},
 isEmpty$0: function() {
  var t1 = this._sentinel;
  return t1._next === t1;
},
 clear$0: function() {
  var t1 = this._sentinel;
  t1._next = t1;
  t1 = this._sentinel;
  t1._previous = t1;
},
 forEach$1: function(f) {
  var entry = this._sentinel._next;
  for (; !(entry === this._sentinel);) {
    var nextEntry = entry.get$_next();
    f.call$1(entry.get$_lib0_element());
    entry = nextEntry;
  }
},
 every$1: function(f) {
  var entry = this._sentinel._next;
  for (; !(entry === this._sentinel);) {
    var nextEntry = entry.get$_next();
    if (f.call$1(entry.get$_lib0_element()) !== true)
      return false;
    entry = nextEntry;
  }
  return true;
},
 map$1: function(f) {
  var other = $.Queue_Queue();
  var entry = this._sentinel._next;
  for (; !(entry === this._sentinel);) {
    var nextEntry = entry.get$_next();
    $.addLast(other, f.call$1(entry.get$_lib0_element()));
    entry = nextEntry;
  }
  return other;
},
 filter$1: function(f) {
  var other = $.Queue_Queue();
  var entry = this._sentinel._next;
  for (; !(entry === this._sentinel);) {
    var nextEntry = entry.get$_next();
    if (f.call$1(entry.get$_lib0_element()) === true)
      $.addLast(other, entry.get$_lib0_element());
    entry = nextEntry;
  }
  return other;
},
 iterator$0: function() {
  return $._DoubleLinkedQueueIterator$(this._sentinel);
},
 toString$0: function() {
  return $.Collections_collectionToString(this);
},
 DoubleLinkedQueue$0: function() {
  this._sentinel = $._DoubleLinkedQueueEntrySentinel$();
},
 is$Collection: function() { return true; }
};

$$._DoubleLinkedQueueIterator = {"":
 ["_sentinel", "_currentEntry"],
 "super": "Object",
 hasNext$0: function() {
  return !(this._currentEntry.get$_next() === this._sentinel);
},
 next$0: function() {
  if (this.hasNext$0() !== true)
    throw $.$$throw($.CTC11);
  this._currentEntry = this._currentEntry.get$_next();
  return this._currentEntry.get$element();
},
 _DoubleLinkedQueueIterator$1: function(_sentinel) {
  this._currentEntry = this._sentinel;
}
};

$$.JSSyntaxRegExp = {"":
 ["_lib0_pattern", "_multiLine", "_ignoreCase"],
 "super": "Object",
 firstMatch$1: function(str) {
  var m = $.regExpExec(this, $.checkString(str));
  if (m == null)
    return;
  var matchStart = $.regExpMatchStart(m);
  var t1 = $.get$length($.index(m, 0));
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  var matchEnd = matchStart + t1;
  return $._MatchImplementation$(this.get$pattern(), str, matchStart, matchEnd, m);
},
 allMatches$1: function(str) {
  $.checkString(str);
  return $._AllMatchesIterable$(this, str);
},
 hasMatch$1: function(str) {
  return $.regExpTest(this, $.checkString(str));
},
 get$pattern: function() {
  return this._lib0_pattern;
},
 get$multiLine: function() {
  return this._multiLine;
},
 get$ignoreCase: function() {
  return this._ignoreCase;
},
 is$JSSyntaxRegExp: true,
 is$RegExp: true
};

$$.StringBufferImpl = {"":
 ["_buffer", "_length"],
 "super": "Object",
 get$length: function() {
  return this._length;
},
 isEmpty$0: function() {
  return this._length === 0;
},
 add$1: function(obj) {
  var str = $.toString(obj);
  if (str == null || $.isEmpty(str) === true)
    return this;
  $.add$1(this._buffer, str);
  this._length = $.add(this._length, $.get$length(str));
  return this;
},
 addAll$1: function(objects) {
  for (var t1 = $.iterator(objects); t1.hasNext$0() === true;)
    this.add$1(t1.next$0());
  return this;
},
 clear$0: function() {
  this._buffer = $.ListImplementation_List(null);
  this._length = 0;
  return this;
},
 toString$0: function() {
  if ($.get$length(this._buffer) === 0)
    return '';
  if ($.get$length(this._buffer) === 1)
    return $.index(this._buffer, 0);
  var result = $.StringImplementation_concatAll(this._buffer);
  $.clear(this._buffer);
  $.add$1(this._buffer, result);
  return result;
},
 StringBufferImpl$1: function(content$) {
  this.clear$0();
  this.add$1(content$);
}
};

$$._MatchImplementation = {"":
 ["pattern", "str", "_start", "_end", "_groups"],
 "super": "Object",
 group$1: function(index) {
  return $.index(this._groups, index);
},
 operator$index$1: function(index) {
  return this.group$1(index);
}
};

$$._AllMatchesIterable = {"":
 ["_re", "_str"],
 "super": "Object",
 iterator$0: function() {
  return $._AllMatchesIterator$(this._re, this._str);
}
};

$$._AllMatchesIterator = {"":
 ["_re", "_str", "_next=", "_done"],
 "super": "Object",
 next$0: function() {
  if (this.hasNext$0() !== true)
    throw $.$$throw($.CTC11);
  var next = this._next;
  this._next = null;
  return next;
},
 hasNext$0: function() {
  if (this._done)
    return false;
  else if (!(this._next == null))
    return true;
  this._next = this._re.firstMatch$1(this._str);
  if (this._next == null) {
    this._done = true;
    return false;
  } else
    return true;
}
};

$$.ArgumentError = {"":
 ["message?"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.message;
  if (!(t1 == null))
    return 'Illegal argument(s): ' + $.S(t1);
  return 'Illegal argument(s)';
}
};

$$.IllegalArgumentException = {"":
 ["message"],
 "super": "ArgumentError"
};

$$.NoSuchMethodError = {"":
 ["_receiver", "_functionName", "_arguments", "_existingArgumentNames"],
 "super": "Object",
 toString$0: function() {
  var sb = $.StringBuffer_StringBuffer('');
  for (var t1 = this._arguments, i = 0; i < t1.length; ++i) {
    if (i > 0)
      $.add$1(sb, ', ');
    if (i >= t1.length)
      throw $.ioore(i);
    $.add$1(sb, $.NoSuchMethodError_safeToString(t1[i]));
  }
  t1 = this._existingArgumentNames;
  if (t1 == null)
    return 'NoSuchMethodError : method not found: \'' + $.S(this._functionName) + '\'\n' + 'Receiver: ' + $.S($.NoSuchMethodError_safeToString(this._receiver)) + '\n' + 'Arguments: [' + $.S(sb) + ']';
  else {
    var actualParameters = $.toString(sb);
    sb = $.StringBuffer_StringBuffer('');
    for (i = 0; $.ltB(i, $.get$length(t1)); ++i) {
      if (i > 0)
        $.add$1(sb, ', ');
      $.add$1(sb, $.index(t1, i));
    }
    var formalParameters = $.toString(sb);
    t1 = this._functionName;
    return 'NoSuchMethodError: incorrect number of arguments passed to method named \'' + $.S(t1) + '\'\n' + 'Receiver: ' + $.S($.NoSuchMethodError_safeToString(this._receiver)) + '\n' + 'Tried calling: ' + $.S(t1) + '(' + $.S(actualParameters) + ')\n' + 'Found: ' + $.S(t1) + '(' + $.S(formalParameters) + ')';
  }
}
};

$$.IndexOutOfRangeException = {"":
 ["_value?"],
 "super": "Object",
 toString$0: function() {
  return 'IndexOutOfRangeException: ' + $.S(this._value);
},
 is$Exception: true
};

$$.IllegalAccessException = {"":
 [],
 "super": "Object",
 toString$0: function() {
  return 'Attempt to modify an immutable object';
},
 is$Exception: true
};

$$.ObjectNotClosureException = {"":
 [],
 "super": "Object",
 toString$0: function() {
  return 'Object is not closure';
},
 is$Exception: true
};

$$.StackOverflowException = {"":
 [],
 "super": "Object",
 toString$0: function() {
  return 'Stack Overflow';
},
 is$Exception: true
};

$$.FormatException = {"":
 ["message?"],
 "super": "Object",
 toString$0: function() {
  return 'FormatException: ' + $.S(this.message);
},
 is$Exception: true
};

$$.NullPointerException = {"":
 ["functionName", "arguments"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.functionName;
  if (t1 == null)
    return this.get$exceptionName();
  else
    return $.S(this.get$exceptionName()) + ' : method: \'' + $.S(t1) + '\'\n' + 'Receiver: null\n' + 'Arguments: ' + $.S(this.arguments);
},
 get$exceptionName: function() {
  return 'NullPointerException';
},
 is$Exception: true
};

$$.NoMoreElementsException = {"":
 [],
 "super": "Object",
 toString$0: function() {
  return 'NoMoreElementsException';
},
 is$Exception: true
};

$$.EmptyQueueException = {"":
 [],
 "super": "Object",
 toString$0: function() {
  return 'EmptyQueueException';
},
 is$Exception: true
};

$$.UnsupportedOperationException = {"":
 ["_message"],
 "super": "Object",
 toString$0: function() {
  return 'UnsupportedOperationException: ' + this._message;
},
 is$Exception: true
};

$$.NotImplementedException = {"":
 ["_message"],
 "super": "Object",
 toString$0: function() {
  var t1 = this._message;
  return !(t1 == null) ? 'NotImplementedException: ' + $.S(t1) : 'NotImplementedException';
},
 is$Exception: true
};

$$.IllegalJSRegExpException = {"":
 ["_pattern", "_errmsg"],
 "super": "Object",
 toString$0: function() {
  return 'IllegalJSRegExpException: \'' + $.S(this._pattern) + '\' \'' + this._errmsg + '\'';
},
 is$Exception: true
};

$$.RuntimeError = {"":
 ["message?"],
 "super": "Object",
 toString$0: function() {
  return 'RuntimeError: ' + this.message;
},
 is$Exception: true
};

$$.FutureNotCompleteException = {"":
 [],
 "super": "Object",
 toString$0: function() {
  return 'Exception: future has not been completed';
},
 is$Exception: true
};

$$.FutureAlreadyCompleteException = {"":
 [],
 "super": "Object",
 toString$0: function() {
  return 'Exception: future already completed';
},
 is$Exception: true
};

$$.Object = {"":
 [],
 "super": "",
 operator$eq$1: function(other) {
  return this === other;
},
 hashCode$0: function() {
  return $.Primitives_objectHashCode(this);
},
 toString$0: function() {
  return $.Primitives_objectToString(this);
}
};

$$.ListIterator = {"":
 ["i", "list"],
 "super": "Object",
 hasNext$0: function() {
  return this.i < this.list.length;
},
 next$0: function() {
  if (this.hasNext$0() !== true)
    throw $.$$throw($.NoMoreElementsException$());
  var value = this.list[this.i];
  this.i = this.i + 1;
  return value;
}
};

$$.StackTrace = {"":
 ["stack"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.stack;
  return !(t1 == null) ? t1 : '';
}
};

$$.Closure = {"":
 [],
 "super": "Object",
 toString$0: function() {
  return 'Closure';
}
};

$$.ConstantMap = {"":
 ["length?", "_jsObject", "_lib6_keys"],
 "super": "Object",
 containsKey$1: function(key) {
  if ($.eqB(key, '__proto__'))
    return false;
  return $.jsHasOwnProperty(this._jsObject, key);
},
 operator$index$1: function(key) {
  if (this.containsKey$1(key) !== true)
    return;
  return this._jsObject[key];
},
 forEach$1: function(f) {
  $.forEach(this._lib6_keys, new $.ConstantMap_forEach_anon(this, f));
},
 getKeys$0: function() {
  return this._lib6_keys;
},
 getValues$0: function() {
  var result = [];
  $.forEach(this._lib6_keys, new $.ConstantMap_getValues_anon(this, result));
  return result;
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 _throwImmutable$0: function() {
  throw $.$$throw($.CTC32);
},
 operator$indexSet$2: function(key, val) {
  return this._throwImmutable$0();
},
 putIfAbsent$2: function(key, ifAbsent) {
  return this._throwImmutable$0();
},
 remove$1: function(key) {
  return this._throwImmutable$0();
},
 clear$0: function() {
  return this._throwImmutable$0();
},
 is$Map: function() { return true; }
};

$$.MetaInfo = {"":
 ["_tag?", "_tags", "_lib6_set?"],
 "super": "Object",
 _lib6_set$2: function(arg0, arg1) { return this._lib6_set.call$2(arg0, arg1); }
};

$$.StringMatch = {"":
 ["_lib6_start", "str", "pattern"],
 "super": "Object",
 operator$index$1: function(g) {
  return this.group$1(g);
},
 group$1: function(group_) {
  if (!$.eqB(group_, 0))
    throw $.$$throw($.IndexOutOfRangeException$(group_));
  return this.pattern;
}
};

$$.VoteDemo = {"":
 ["_canvas", "_stage", "_dragger", "_calcEngine?", "_rootMapElement", "_playerHues", "_condorcetView?", "_irvView?", "_distanceView", "_pluralityView", "_canManView", "_candidateHues", "_mouseLocation", "_overCandidate", "_dragCandidate", "_frameRequested"],
 "super": "Object",
 _updateHighlightCandidates$1: function(candidates) {
  this._calcEngine.set$hoverPair(candidates);
  this._rootMapElement.set$showOnlyPlayers(candidates);
},
 _locationDataUpdated$1: function(args) {
  var locData = this._calcEngine.get$locationData();
  this._rootMapElement.set$locationData(locData);
  var t1 = locData.get$candidates();
  this._canManView.set$candidates(t1);
},
 get$_locationDataUpdated: function() { return new $.BoundClosure(this, '_locationDataUpdated$1'); },
 _distanceElectionUpdated$1: function(args) {
  var t1 = this._calcEngine.get$distanceElection();
  this._distanceView.set$election(t1);
  this._requestFrame$0();
},
 get$_distanceElectionUpdated: function() { return new $.BoundClosure(this, '_distanceElectionUpdated$1'); },
 _pluralityElectionUpdated$1: function(args) {
  var t1 = this._calcEngine.get$pluralityElection();
  this._pluralityView.set$election(t1);
  this._requestFrame$0();
},
 get$_pluralityElectionUpdated: function() { return new $.BoundClosure(this, '_pluralityElectionUpdated$1'); },
 _condorcetElectionUpdated$1: function(args) {
  var t1 = this._calcEngine.get$condorcetElection();
  this._condorcetView.set$election(t1);
  this._requestFrame$0();
},
 get$_condorcetElectionUpdated: function() { return new $.BoundClosure(this, '_condorcetElectionUpdated$1'); },
 _irvElectionUpdated$1: function(args) {
  var t1 = this._calcEngine.get$irvElection();
  this._irvView.set$election(t1);
  this._requestFrame$0();
},
 get$_irvElectionUpdated: function() { return new $.BoundClosure(this, '_irvElectionUpdated$1'); },
 _voterHexMapperUpdated$1: function(args) {
  var t1 = this._calcEngine.get$voterHexMap();
  this._rootMapElement.set$voterHexMap(t1);
  this._requestFrame$0();
},
 get$_voterHexMapperUpdated: function() { return new $.BoundClosure(this, '_voterHexMapperUpdated$1'); },
 _requestFrame$0: function() {
  if (!this._frameRequested) {
    this._frameRequested = true;
    $.window().requestAnimationFrame$1(this.get$_onFrame());
  }
},
 _onDrag$1: function(delta) {
  this._rootMapElement.dragCandidate$2(this._dragCandidate, delta);
  this._requestFrame$0();
},
 get$_onDrag: function() { return new $.BoundClosure(this, '_onDrag$1'); },
 _onDragStart$1: function(e) {
  var t1 = this._overCandidate;
  if (t1 == null)
    e.cancel$0();
  else
    this._dragCandidate = t1;
},
 get$_onDragStart: function() { return new $.BoundClosure(this, '_onDragStart$1'); },
 _onFrame$1: function(highResTime) {
  this._stage.draw$0();
  this._condorcetView.draw$0();
  this._irvView.draw$0();
  this._pluralityView.draw$0();
  this._distanceView.draw$0();
  this._canManView.draw$0();
  this._frameRequested = false;
},
 get$_onFrame: function() { return new $.BoundClosure(this, '_onFrame$1'); },
 _canvas_mouseMove$1: function(e) {
  this._setMouse$1($.getMouseEventCoordinate(e));
},
 get$_canvas_mouseMove: function() { return new $.BoundClosure(this, '_canvas_mouseMove$1'); },
 _canvas_mouseOut$1: function(e) {
  this._setMouse$1(null);
},
 get$_canvas_mouseOut: function() { return new $.BoundClosure(this, '_canvas_mouseOut$1'); },
 _setMouse$1: function(value) {
  this._mouseLocation = value;
  var hits = $.Mouse_markMouseOver(this._stage, this._mouseLocation);
  if (!(hits == null))
    if ($.gtB($.get$length(hits), 0)) {
      var t1 = $.index(hits, 0);
      t1 = typeof t1 === 'object' && t1 !== null && !!t1.is$CandidateElement;
    } else
      t1 = false;
  else
    t1 = false;
  if (t1) {
    this._canvas.get$style().set$cursor('pointer');
    this._overCandidate = $.index(hits, 0).get$player();
  } else
    this._overCandidate = null;
  t1 = !(this._overCandidate == null) || !(this._dragCandidate == null);
  var t2 = this._canvas;
  if (t1)
    t2.get$style().set$cursor('pointer');
  else
    t2.get$style().set$cursor('auto');
},
 VoteDemo$_internal$9: function(_canvas, _stage, _dragger, _rootMapElement, _condorcetView, _pluralityView, _distanceView, _canManView, _irvView) {
  var t1 = this._dragger;
  $.add$1(t1.get$dragDelta(), this.get$_onDrag());
  $.add$1(t1.get$dragStart(), this.get$_onDragStart());
  var t2 = this._canvas;
  $.add$1(t2.get$on().get$mouseMove(), this.get$_canvas_mouseMove());
  $.add$1(t2.get$on().get$mouseOut(), this.get$_canvas_mouseOut());
  var t3 = this._calcEngine;
  $.add$1(t3.get$locationDataChanged(), this.get$_locationDataUpdated());
  $.add$1(t3.get$distanceElectionChanged(), this.get$_distanceElectionUpdated());
  $.add$1(t3.get$pluralityElectionChanged(), this.get$_pluralityElectionUpdated());
  $.add$1(t3.get$condorcetElectionChanged(), this.get$_condorcetElectionUpdated());
  $.add$1(t3.get$irvElectionChanged(), this.get$_irvElectionUpdated());
  $.add$1(t3.get$voterHueMapperChanged(), this.get$_voterHexMapperUpdated());
  $.add$1(this._rootMapElement.get$candidatesMoved(), new $.anon5(this));
  $.add$1(this._stage.get$invalidated(), new $.anon6(this));
  var t4 = this._canManView;
  $.add$1(t4.get$candidateRemoveRequest(), new $.anon7(this));
  $.add$1(t4.get$newCandidateRequest(), new $.anon8(this));
  $.add$1(this._condorcetView.get$hoverChanged(), new $.anon9(this));
  $.add$1(this._irvView.get$hoverChanged(), new $.anon10(this));
  t3.set$locationData($.LocationData_LocationData$random());
}
};

$$._AbstractWorkerEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._AudioContextEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$complete: function() {
  return this.operator$index$1('complete');
},
 complete$1: function(arg0) { return this.get$complete().call$1(arg0); }
};

$$._BatteryManagerEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._BodyElementEventsImpl = {"":
 ["_ptr"],
 "super": "_ElementEventsImpl",
 get$blur: function() {
  return this.operator$index$1('blur');
},
 get$message: function() {
  return this.operator$index$1('message');
}
};

$$._DOMApplicationCacheEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._DedicatedWorkerContextEventsImpl = {"":
 ["_ptr"],
 "super": "_WorkerContextEventsImpl",
 get$message: function() {
  return this.operator$index$1('message');
}
};

$$._FilteredElementList = {"":
 ["_lib_node", "_childNodes"],
 "super": "Object",
 get$_filtered: function() {
  return $.ListImplementation_List$from($.filter(this._childNodes, new $._FilteredElementList__filtered_anon()));
},
 forEach$1: function(f) {
  $.forEach(this.get$_filtered(), f);
},
 operator$indexSet$2: function(index, value) {
  this.operator$index$1(index).replaceWith$1(value);
},
 set$length: function(newLength) {
  var len = $.get$length(this);
  if ($.geB(newLength, len))
    return;
  else if ($.ltB(newLength, 0))
    throw $.$$throw($.CTC36);
  this.removeRange$2($.sub(newLength, 1), $.sub(len, newLength));
},
 add$1: function(value) {
  $.add$1(this._childNodes, value);
},
 get$add: function() { return new $.BoundClosure(this, 'add$1'); },
 addAll$1: function(collection) {
  $.forEach(collection, this.get$add());
},
 addLast$1: function(value) {
  this.add$1(value);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC34);
},
 removeRange$2: function(start, rangeLength) {
  $.forEach($.getRange(this.get$_filtered(), start, rangeLength), new $._FilteredElementList_removeRange_anon());
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC33);
},
 clear$0: function() {
  $.clear(this._childNodes);
},
 removeLast$0: function() {
  var result = this.last$0();
  if (!(result == null))
    result.remove$0();
  return result;
},
 map$1: function(f) {
  return $.map(this.get$_filtered(), f);
},
 filter$1: function(f) {
  return $.filter(this.get$_filtered(), f);
},
 every$1: function(f) {
  return $.every(this.get$_filtered(), f);
},
 isEmpty$0: function() {
  return $.isEmpty(this.get$_filtered());
},
 get$length: function() {
  return $.get$length(this.get$_filtered());
},
 operator$index$1: function(index) {
  return $.index(this.get$_filtered(), index);
},
 iterator$0: function() {
  return $.iterator(this.get$_filtered());
},
 getRange$2: function(start, rangeLength) {
  return $.getRange(this.get$_filtered(), start, rangeLength);
},
 indexOf$2: function(element, start) {
  return $.indexOf$2(this.get$_filtered(), element, start);
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub($.get$length(this), 1);
  return $.lastIndexOf$2(this.get$_filtered(), element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 last$0: function() {
  return $.last(this.get$_filtered());
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$.EmptyElementRect = {"":
 ["client", "offset", "scroll", "bounding", "clientRects"],
 "super": "Object"
};

$$._FrozenCSSClassSet = {"":
 ["_lib_element"],
 "super": "_CssClassSet",
 _write$1: function(s) {
  throw $.$$throw($.CTC30);
},
 _read$0: function() {
  return $.Set_Set();
}
};

$$._DocumentEventsImpl = {"":
 ["_ptr"],
 "super": "_ElementEventsImpl",
 get$blur: function() {
  return this.operator$index$1('blur');
},
 get$click: function() {
  return this.operator$index$1('click');
},
 get$mouseDown: function() {
  return this.operator$index$1('mousedown');
},
 get$mouseMove: function() {
  return this.operator$index$1('mousemove');
},
 get$mouseOut: function() {
  return this.operator$index$1('mouseout');
},
 get$mouseUp: function() {
  return this.operator$index$1('mouseup');
},
 get$reset: function() {
  return this.operator$index$1('reset');
},
 reset$0: function() { return this.get$reset().call$0(); }
};

$$._ChildrenElementList = {"":
 ["_lib_element?", "_childElements"],
 "super": "Object",
 _toList$0: function() {
  var t1 = this._childElements;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this._toList$0$bailout(1, t1);
  var t3 = t1.length;
  var output = $.ListImplementation_List(t3);
  for (var len = t1.length, i = 0; i < len; ++i) {
    var t2 = t1[i];
    if (i >= t3)
      throw $.ioore(i);
    output[i] = t2;
  }
  return output;
},
 _toList$0$bailout: function(state0, t1) {
  var output = $.ListImplementation_List($.get$length(t1));
  for (var len = $.get$length(t1), i = 0; $.ltB(i, len); ++i) {
    var t2 = $.index(t1, i);
    if (i >= output.length)
      throw $.ioore(i);
    output[i] = t2;
  }
  return output;
},
 forEach$1: function(f) {
  for (var t1 = $.iterator(this._childElements); t1.hasNext$0() === true;)
    f.call$1(t1.next$0());
},
 filter$1: function(f) {
  var output = [];
  this.forEach$1(new $._ChildrenElementList_filter_anon(f, output));
  return $._FrozenElementList$_wrap(output);
},
 every$1: function(f) {
  for (var t1 = $.iterator(this); t1.hasNext$0() === true;)
    if (f.call$1(t1.next$0()) !== true)
      return false;
  return true;
},
 map$1: function(f) {
  var out = [];
  for (var t1 = $.iterator(this); t1.hasNext$0() === true;)
    out.push(f.call$1(t1.next$0()));
  return out;
},
 isEmpty$0: function() {
  return this._lib_element.get$$$dom_firstElementChild() == null;
},
 get$length: function() {
  return $.get$length(this._childElements);
},
 operator$index$1: function(index) {
  return $.index(this._childElements, index);
},
 operator$indexSet$2: function(index, value) {
  this._lib_element.$dom_replaceChild$2(value, $.index(this._childElements, index));
},
 set$length: function(newLength) {
  throw $.$$throw($.CTC35);
},
 add$1: function(value) {
  this._lib_element.$dom_appendChild$1(value);
  return value;
},
 addLast$1: function(value) {
  return this.add$1(value);
},
 iterator$0: function() {
  return $.iterator(this._toList$0());
},
 addAll$1: function(collection) {
  for (var t1 = $.iterator(collection), t2 = this._lib_element; t1.hasNext$0() === true;)
    t2.$dom_appendChild$1(t1.next$0());
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC34);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC33);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC33);
},
 getRange$2: function(start, rangeLength) {
  return $._FrozenElementList$_wrap($._Lists_getRange(this, start, rangeLength, []));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub($.get$length(this), 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 clear$0: function() {
  this._lib_element.set$text('');
},
 removeLast$0: function() {
  var result = this.last$0();
  if (!(result == null))
    this._lib_element.$dom_removeChild$1(result);
  return result;
},
 last$0: function() {
  return this._lib_element.get$$$dom_lastElementChild();
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._FrozenElementList = {"":
 ["_nodeList"],
 "super": "Object",
 get$first: function() {
  var t1 = this._nodeList;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.get$first$bailout(1, t1);
  if (0 >= t1.length)
    throw $.ioore(0);
  return t1[0];
},
 get$first$bailout: function(state0, t1) {
  return $.index(t1, 0);
},
 first$0: function() { return this.get$first().call$0(); },
 forEach$1: function(f) {
  for (var t1 = $.iterator(this); t1.hasNext$0() === true;)
    f.call$1(t1.next$0());
},
 map$1: function(f) {
  var out = [];
  for (var t1 = $.iterator(this); t1.hasNext$0() === true;)
    out.push(f.call$1(t1.next$0()));
  return out;
},
 filter$1: function(f) {
  var out = [];
  for (var t1 = $.iterator(this); t1.hasNext$0() === true;) {
    var t2 = t1.next$0();
    if (f.call$1(t2) === true)
      out.push(t2);
  }
  return out;
},
 every$1: function(f) {
  for (var t1 = $.iterator(this); t1.hasNext$0() === true;)
    if (f.call$1(t1.next$0()) !== true)
      return false;
  return true;
},
 isEmpty$0: function() {
  return $.isEmpty(this._nodeList);
},
 get$length: function() {
  return $.get$length(this._nodeList);
},
 operator$index$1: function(index) {
  return $.index(this._nodeList, index);
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.CTC35);
},
 set$length: function(newLength) {
  $.set$length(this._nodeList, newLength);
},
 add$1: function(value) {
  throw $.$$throw($.CTC35);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC35);
},
 iterator$0: function() {
  return $._FrozenElementListIterator$(this);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC35);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC35);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC35);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC35);
},
 getRange$2: function(start, rangeLength) {
  return $._FrozenElementList$_wrap($.getRange(this._nodeList, start, rangeLength));
},
 indexOf$2: function(element, start) {
  return $.indexOf$2(this._nodeList, element, start);
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 lastIndexOf$2: function(element, start) {
  return $.lastIndexOf$2(this._nodeList, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 clear$0: function() {
  throw $.$$throw($.CTC35);
},
 removeLast$0: function() {
  throw $.$$throw($.CTC35);
},
 last$0: function() {
  return $.last(this._nodeList);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._FrozenElementListIterator = {"":
 ["_list", "_lib_index"],
 "super": "Object",
 next$0: function() {
  if (this.hasNext$0() !== true)
    throw $.$$throw($.CTC11);
  var t1 = this._list;
  var t2 = this._lib_index;
  this._lib_index = t2 + 1;
  return t1.operator$index$1(t2);
},
 hasNext$0: function() {
  var t1 = this._lib_index;
  var t2 = $.get$length(this._list);
  if (typeof t2 !== 'number')
    return this.hasNext$0$bailout(1, t1, t2);
  return t1 < t2;
},
 hasNext$0$bailout: function(state0, t1, t2) {
  return $.lt(t1, t2);
}
};

$$._ElementAttributeMap = {"":
 ["_lib_element?"],
 "super": "Object",
 containsKey$1: function(key) {
  return this._lib_element.$dom_hasAttribute$1(key);
},
 operator$index$1: function(key) {
  return this._lib_element.$dom_getAttribute$1(key);
},
 operator$indexSet$2: function(key, value) {
  this._lib_element.$dom_setAttribute$2(key, $.S(value));
},
 putIfAbsent$2: function(key, ifAbsent) {
  if (this.containsKey$1(key) !== true)
    this.operator$indexSet$2(key, ifAbsent.call$0());
  return this.operator$index$1(key);
},
 remove$1: function(key) {
  var t1 = this._lib_element;
  var value = t1.$dom_getAttribute$1(key);
  t1.$dom_removeAttribute$1(key);
  return value;
},
 clear$0: function() {
  var attributes = this._lib_element.get$$$dom_attributes();
  if (typeof attributes !== 'string' && (typeof attributes !== 'object' || attributes === null || attributes.constructor !== Array && !attributes.is$JavaScriptIndexingBehavior()))
    return this.clear$0$bailout(1, attributes);
  for (var i = attributes.length - 1; i >= 0; --i) {
    if (i >= attributes.length)
      throw $.ioore(i);
    this.remove$1(attributes[i].get$name());
  }
},
 clear$0$bailout: function(state0, attributes) {
  for (var i = $.sub($.get$length(attributes), 1); $.geB(i, 0); i = $.sub(i, 1))
    this.remove$1($.index(attributes, i).get$name());
},
 forEach$1: function(f) {
  var attributes = this._lib_element.get$$$dom_attributes();
  if (typeof attributes !== 'string' && (typeof attributes !== 'object' || attributes === null || attributes.constructor !== Array && !attributes.is$JavaScriptIndexingBehavior()))
    return this.forEach$1$bailout(1, f, attributes);
  for (var len = attributes.length, i = 0; i < len; ++i) {
    if (i >= attributes.length)
      throw $.ioore(i);
    var item = attributes[i];
    f.call$2(item.get$name(), item.get$value());
  }
},
 forEach$1$bailout: function(state0, f, attributes) {
  for (var len = $.get$length(attributes), i = 0; $.ltB(i, len); ++i) {
    var item = $.index(attributes, i);
    f.call$2(item.get$name(), item.get$value());
  }
},
 getKeys$0: function() {
  var attributes = this._lib_element.get$$$dom_attributes();
  if (typeof attributes !== 'string' && (typeof attributes !== 'object' || attributes === null || attributes.constructor !== Array && !attributes.is$JavaScriptIndexingBehavior()))
    return this.getKeys$0$bailout(1, attributes);
  var t2 = attributes.length;
  var keys = $.ListImplementation_List(t2);
  for (var len = attributes.length, i = 0; i < len; ++i) {
    if (i >= attributes.length)
      throw $.ioore(i);
    var t1 = attributes[i].get$name();
    if (i >= t2)
      throw $.ioore(i);
    keys[i] = t1;
  }
  return keys;
},
 getKeys$0$bailout: function(state0, attributes) {
  var keys = $.ListImplementation_List($.get$length(attributes));
  for (var len = $.get$length(attributes), i = 0; $.ltB(i, len); ++i) {
    var t1 = $.index(attributes, i).get$name();
    if (i >= keys.length)
      throw $.ioore(i);
    keys[i] = t1;
  }
  return keys;
},
 getValues$0: function() {
  var attributes = this._lib_element.get$$$dom_attributes();
  if (typeof attributes !== 'string' && (typeof attributes !== 'object' || attributes === null || attributes.constructor !== Array && !attributes.is$JavaScriptIndexingBehavior()))
    return this.getValues$0$bailout(1, attributes);
  var t2 = attributes.length;
  var values = $.ListImplementation_List(t2);
  for (var len = attributes.length, i = 0; i < len; ++i) {
    if (i >= attributes.length)
      throw $.ioore(i);
    var t1 = attributes[i].get$value();
    if (i >= t2)
      throw $.ioore(i);
    values[i] = t1;
  }
  return values;
},
 getValues$0$bailout: function(state0, attributes) {
  var values = $.ListImplementation_List($.get$length(attributes));
  for (var len = $.get$length(attributes), i = 0; $.ltB(i, len); ++i) {
    var t1 = $.index(attributes, i).get$value();
    if (i >= values.length)
      throw $.ioore(i);
    values[i] = t1;
  }
  return values;
},
 get$length: function() {
  return $.get$length(this._lib_element.get$$$dom_attributes());
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 is$Map: function() { return true; }
};

$$._DataAttributeMap = {"":
 ["$$dom_attributes"],
 "super": "Object",
 containsKey$1: function(key) {
  return this.$$dom_attributes.containsKey$1(this._attr$1(key));
},
 operator$index$1: function(key) {
  return $.index(this.$$dom_attributes, this._attr$1(key));
},
 operator$indexSet$2: function(key, value) {
  $.indexSet(this.$$dom_attributes, this._attr$1(key), $.S(value));
},
 putIfAbsent$2: function(key, ifAbsent) {
  return this.$$dom_attributes.putIfAbsent$2(this._attr$1(key), ifAbsent);
},
 remove$1: function(key) {
  return this.$$dom_attributes.remove$1(this._attr$1(key));
},
 clear$0: function() {
  for (var t1 = $.iterator(this.getKeys$0()); t1.hasNext$0() === true;)
    this.remove$1(t1.next$0());
},
 forEach$1: function(f) {
  $.forEach(this.$$dom_attributes, new $._DataAttributeMap_forEach_anon(this, f));
},
 getKeys$0: function() {
  var keys = $.ListImplementation_List(null);
  $.forEach(this.$$dom_attributes, new $._DataAttributeMap_getKeys_anon(this, keys));
  return keys;
},
 getValues$0: function() {
  var values = $.ListImplementation_List(null);
  $.forEach(this.$$dom_attributes, new $._DataAttributeMap_getValues_anon(this, values));
  return values;
},
 get$length: function() {
  return $.get$length(this.getKeys$0());
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 _attr$1: function(key) {
  return 'data-' + $.S(key);
},
 _matches$1: function(key) {
  return $.startsWith(key, 'data-');
},
 _strip$1: function(key) {
  return $.substring$1(key, 5);
},
 is$Map: function() { return true; }
};

$$._CssClassSet = {"":
 ["_lib_element?"],
 "super": "Object",
 toString$0: function() {
  return this._formatSet$1(this._read$0());
},
 iterator$0: function() {
  return $.iterator(this._read$0());
},
 forEach$1: function(f) {
  $.forEach(this._read$0(), f);
},
 map$1: function(f) {
  return $.map(this._read$0(), f);
},
 filter$1: function(f) {
  return $.filter(this._read$0(), f);
},
 every$1: function(f) {
  return $.every(this._read$0(), f);
},
 isEmpty$0: function() {
  return $.isEmpty(this._read$0());
},
 get$length: function() {
  return $.get$length(this._read$0());
},
 contains$1: function(value) {
  return $.contains$1(this._read$0(), value);
},
 add$1: function(value) {
  this._modify$1(new $._CssClassSet_add_anon(value));
},
 remove$1: function(value) {
  var s = this._read$0();
  var result = s.remove$1(value);
  this._write$1(s);
  return result;
},
 addAll$1: function(collection) {
  this._modify$1(new $._CssClassSet_addAll_anon(collection));
},
 clear$0: function() {
  this._modify$1(new $._CssClassSet_clear_anon());
},
 _modify$1: function(f) {
  var s = this._read$0();
  f.call$1(s);
  this._write$1(s);
},
 _read$0: function() {
  var s = $.Set_Set();
  for (var t1 = $.iterator($.split(this._classname$0(), ' ')); t1.hasNext$0() === true;) {
    var trimmed = $.trim(t1.next$0());
    if ($.isEmpty(trimmed) !== true)
      $.add$1(s, trimmed);
  }
  return s;
},
 _classname$0: function() {
  return this._lib_element.get$$$dom_className();
},
 _write$1: function(s) {
  var t1 = this._formatSet$1(s);
  this._lib_element.set$$$dom_className(t1);
},
 _formatSet$1: function(s) {
  return $.Strings_join($.ListImplementation_List$from(s), ' ');
},
 is$Collection: function() { return true; }
};

$$._SimpleClientRect = {"":
 ["left?", "top?", "width?", "height?"],
 "super": "Object",
 operator$eq$1: function(other) {
  return !(other == null) && $.eqB(this.left, other.get$left()) && $.eqB(this.top, other.get$top()) && $.eqB(this.width, other.get$width()) && $.eqB(this.height, other.get$height());
},
 toString$0: function() {
  return '(' + $.S(this.left) + ', ' + $.S(this.top) + ', ' + $.S(this.width) + ', ' + $.S(this.height) + ')';
}
};

$$._ElementRectImpl = {"":
 ["client", "offset", "scroll", "_boundingClientRect", "_clientRects"],
 "super": "Object"
};

$$._ElementEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$blur: function() {
  return this.operator$index$1('blur');
},
 get$click: function() {
  return this.operator$index$1('click');
},
 get$mouseDown: function() {
  return this.operator$index$1('mousedown');
},
 get$mouseMove: function() {
  return this.operator$index$1('mousemove');
},
 get$mouseOut: function() {
  return this.operator$index$1('mouseout');
},
 get$mouseUp: function() {
  return this.operator$index$1('mouseup');
},
 get$reset: function() {
  return this.operator$index$1('reset');
},
 reset$0: function() { return this.get$reset().call$0(); }
};

$$._EventSourceEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$message: function() {
  return this.operator$index$1('message');
}
};

$$._EventsImpl = {"":
 ["_ptr?"],
 "super": "Object",
 operator$index$1: function(type) {
  return $._EventListenerListImpl$(this._ptr, type);
}
};

$$._EventListenerListImpl = {"":
 ["_ptr?", "_type"],
 "super": "Object",
 add$2: function(listener, useCapture) {
  this._add$2(listener, useCapture);
  return this;
},
 add$1: function(listener) {
  return this.add$2(listener,false)
},
 remove$2: function(listener, useCapture) {
  this._remove$2(listener, useCapture);
  return this;
},
 remove$1: function(listener) {
  return this.remove$2(listener,false)
},
 _add$2: function(listener, useCapture) {
  this._ptr.$dom_addEventListener$3(this._type, listener, useCapture);
},
 _remove$2: function(listener, useCapture) {
  this._ptr.$dom_removeEventListener$3(this._type, listener, useCapture);
}
};

$$._FileReaderEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._FileWriterEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._FrameSetElementEventsImpl = {"":
 ["_ptr"],
 "super": "_ElementEventsImpl",
 get$blur: function() {
  return this.operator$index$1('blur');
},
 get$message: function() {
  return this.operator$index$1('message');
}
};

$$._HttpRequestEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._HttpRequestUploadEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._IDBDatabaseEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._IDBOpenDBRequestEventsImpl = {"":
 ["_ptr"],
 "super": "_IDBRequestEventsImpl"
};

$$._IDBRequestEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._IDBTransactionEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$complete: function() {
  return this.operator$index$1('complete');
},
 complete$1: function(arg0) { return this.get$complete().call$1(arg0); }
};

$$._IDBVersionChangeRequestEventsImpl = {"":
 ["_ptr"],
 "super": "_IDBRequestEventsImpl"
};

$$._InputElementEventsImpl = {"":
 ["_ptr"],
 "super": "_ElementEventsImpl"
};

$$._JavaScriptAudioNodeEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._LocalWindowEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$blur: function() {
  return this.operator$index$1('blur');
},
 get$click: function() {
  return this.operator$index$1('click');
},
 get$message: function() {
  return this.operator$index$1('message');
},
 get$mouseDown: function() {
  return this.operator$index$1('mousedown');
},
 get$mouseMove: function() {
  return this.operator$index$1('mousemove');
},
 get$mouseOut: function() {
  return this.operator$index$1('mouseout');
},
 get$mouseUp: function() {
  return this.operator$index$1('mouseup');
},
 get$reset: function() {
  return this.operator$index$1('reset');
},
 reset$0: function() { return this.get$reset().call$0(); }
};

$$._MediaElementEventsImpl = {"":
 ["_ptr"],
 "super": "_ElementEventsImpl"
};

$$._MediaStreamEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._MediaStreamTrackEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._MediaStreamTrackListEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._MessagePortEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$message: function() {
  return this.operator$index$1('message');
}
};

$$._ChildNodeListLazy = {"":
 ["_this"],
 "super": "Object",
 get$first: function() {
  return this._this.firstChild;
},
 first$0: function() { return this.get$first().call$0(); },
 last$0: function() {
  return this._this.lastChild;
},
 add$1: function(value) {
  this._this.$dom_appendChild$1(value);
},
 addLast$1: function(value) {
  this._this.$dom_appendChild$1(value);
},
 addAll$1: function(collection) {
  for (var t1 = $.iterator(collection), t2 = this._this; t1.hasNext$0() === true;)
    t2.$dom_appendChild$1(t1.next$0());
},
 removeLast$0: function() {
  var result = this.last$0();
  if (!(result == null))
    this._this.$dom_removeChild$1(result);
  return result;
},
 clear$0: function() {
  this._this.set$text('');
},
 operator$indexSet$2: function(index, value) {
  this._this.$dom_replaceChild$2(value, this.operator$index$1(index));
},
 iterator$0: function() {
  return $.iterator(this._this.get$$$dom_childNodes());
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._NodeListWrapper$($._Collections_filter(this, [], f));
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 lastIndexOf$2: function(element, start) {
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,0)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot removeRange on immutable List.'));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot insertRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._NodeListWrapper$($._Lists_getRange(this, start, rangeLength, []));
},
 get$length: function() {
  return $.get$length(this._this.get$$$dom_childNodes());
},
 operator$index$1: function(index) {
  return $.index(this._this.get$$$dom_childNodes(), index);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._ListWrapper = {"":
 [],
 "super": "Object",
 iterator$0: function() {
  return $.iterator(this._list);
},
 forEach$1: function(f) {
  return $.forEach(this._list, f);
},
 map$1: function(f) {
  return $.map(this._list, f);
},
 filter$1: function(f) {
  return $.filter(this._list, f);
},
 every$1: function(f) {
  return $.every(this._list, f);
},
 isEmpty$0: function() {
  return $.isEmpty(this._list);
},
 get$length: function() {
  return $.get$length(this._list);
},
 operator$index$1: function(index) {
  return $.index(this._list, index);
},
 operator$indexSet$2: function(index, value) {
  $.indexSet(this._list, index, value);
},
 set$length: function(newLength) {
  $.set$length(this._list, newLength);
},
 add$1: function(value) {
  return $.add$1(this._list, value);
},
 addLast$1: function(value) {
  return $.addLast(this._list, value);
},
 addAll$1: function(collection) {
  return $.addAll(this._list, collection);
},
 sort$1: function(compare) {
  return $.sort(this._list, compare);
},
 indexOf$2: function(element, start) {
  return $.indexOf$2(this._list, element, start);
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 lastIndexOf$2: function(element, start) {
  return $.lastIndexOf$2(this._list, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,0)
},
 clear$0: function() {
  return $.clear(this._list);
},
 removeLast$0: function() {
  return $.removeLast(this._list);
},
 last$0: function() {
  return $.last(this._list);
},
 getRange$2: function(start, rangeLength) {
  return $.getRange(this._list, start, rangeLength);
},
 removeRange$2: function(start, rangeLength) {
  return $.removeRange(this._list, start, rangeLength);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  return $.insertRange$3(this._list, start, rangeLength, initialValue);
},
 get$first: function() {
  var t1 = this._list;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.get$first$bailout(1, t1);
  if (0 >= t1.length)
    throw $.ioore(0);
  return t1[0];
},
 get$first$bailout: function(state0, t1) {
  return $.index(t1, 0);
},
 first$0: function() { return this.get$first().call$0(); },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._NodeListWrapper = {"":
 ["_list"],
 "super": "_ListWrapper",
 filter$1: function(f) {
  return $._NodeListWrapper$($.filter(this._list, f));
},
 getRange$2: function(start, rangeLength) {
  return $._NodeListWrapper$($.getRange(this._list, start, rangeLength));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._NotificationEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$click: function() {
  return this.operator$index$1('click');
},
 get$close: function() {
  return this.operator$index$1('close');
},
 close$0: function() { return this.get$close().call$0(); }
};

$$._PeerConnection00EventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._RTCPeerConnectionEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._AttributeClassSet = {"":
 ["_lib_element"],
 "super": "_CssClassSet",
 $dom_className$0: function() {
  return $.index(this._lib_element.get$attributes(), 'class');
},
 get$$$dom_className: function() { return new $.BoundClosure0(this, '$dom_className$0'); },
 _write$1: function(s) {
  $.indexSet(this._lib_element.get$attributes(), 'class', this._formatSet$1(s));
}
};

$$._SVGElementInstanceEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$blur: function() {
  return this.operator$index$1('blur');
},
 get$click: function() {
  return this.operator$index$1('click');
},
 get$mouseDown: function() {
  return this.operator$index$1('mousedown');
},
 get$mouseMove: function() {
  return this.operator$index$1('mousemove');
},
 get$mouseOut: function() {
  return this.operator$index$1('mouseout');
},
 get$mouseUp: function() {
  return this.operator$index$1('mouseup');
},
 get$reset: function() {
  return this.operator$index$1('reset');
},
 reset$0: function() { return this.get$reset().call$0(); }
};

$$._SharedWorkerContextEventsImpl = {"":
 ["_ptr"],
 "super": "_WorkerContextEventsImpl"
};

$$._SpeechRecognitionEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._TextTrackCueEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._TextTrackEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._TextTrackListEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._WebSocketEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl",
 get$close: function() {
  return this.operator$index$1('close');
},
 close$0: function() { return this.get$close().call$0(); },
 get$message: function() {
  return this.operator$index$1('message');
}
};

$$._WorkerContextEventsImpl = {"":
 ["_ptr"],
 "super": "_EventsImpl"
};

$$._WorkerEventsImpl = {"":
 ["_ptr"],
 "super": "_AbstractWorkerEventsImpl",
 get$message: function() {
  return this.operator$index$1('message');
}
};

$$._MeasurementRequest = {"":
 ["computeValue", "completer?", "value=", "exception="],
 "super": "Object",
 computeValue$0: function() { return this.computeValue.call$0(); }
};

$$._MeasurementScheduler = {"":
 ["_lib_callback?"],
 "super": "Object",
 _lib_callback$0: function() { return this._lib_callback.call$0(); },
 _lib_callback$2: function(arg0, arg1) { return this._lib_callback.call$2(arg0, arg1); },
 maybeSchedule$0: function() {
  if (this._nextMeasurementFrameScheduled)
    return;
  this._nextMeasurementFrameScheduled = true;
  this._schedule$0();
},
 _schedule$0: function() {
},
 _onCallback$0: function() {
  if (!this._nextMeasurementFrameScheduled)
    return;
  this._nextMeasurementFrameScheduled = false;
  this._lib_callback$0();
}
};

$$._PostMessageScheduler = {"":
 ["_MEASUREMENT_MESSAGE", "_nextMeasurementFrameScheduled", "_lib_callback"],
 "super": "_MeasurementScheduler",
 _schedule$0: function() {
  $.window().postMessage$2(this._MEASUREMENT_MESSAGE, '*');
},
 _handleMessage$1: function(e) {
  this._onCallback$0();
},
 get$_handleMessage: function() { return new $.BoundClosure(this, '_handleMessage$1'); },
 _PostMessageScheduler$1: function(callback) {
  $.add$1($.window().get$on().get$message(), this.get$_handleMessage());
}
};

$$._MutationObserverScheduler = {"":
 ["_observer", "_dummy", "_nextMeasurementFrameScheduled", "_lib_callback"],
 "super": "_MeasurementScheduler",
 _schedule$0: function() {
  var t1 = this._dummy.get$hidden() !== true;
  this._dummy.set$hidden(t1);
},
 _handleMutation$2: function(mutations, observer) {
  this._onCallback$0();
},
 get$_handleMutation: function() { return new $.BoundClosure1(this, '_handleMutation$2'); },
 _MutationObserverScheduler$1: function(callback) {
  this._observer = $.MutationObserver_MutationObserver(this.get$_handleMutation());
  this._dummy = $.DivElement_DivElement();
  this._observer.observe$3$attributes(this._dummy, $.makeLiteralMap([]), true);
}
};

$$._DOMWindowCrossFrameImpl = {"":
 ["_window"],
 "super": "Object",
 get$location: function() {
  return $._LocationCrossFrameImpl__createSafe(this._window.location);
},
 get$top: function() {
  return $._DOMWindowCrossFrameImpl__createSafe(this._window.top);
},
 blur$0: function() {
  return this._window.blur();
},
 get$blur: function() { return new $.BoundClosure0(this, 'blur$0'); },
 close$0: function() {
  return this._window.close();
},
 postMessage$3: function(message, targetOrigin, messagePorts) {
  var t1 = messagePorts == null;
  var t2 = this._window;
  if (t1)
    t2.postMessage(message,targetOrigin);
  else
    t2.postMessage(message,targetOrigin,messagePorts);
},
 postMessage$2: function(message,targetOrigin) {
  return this.postMessage$3(message,targetOrigin,null)
}
};

$$._LocationCrossFrameImpl = {"":
 ["_location="],
 "super": "Object",
 is$Location: function() { return true; }
};

$$._LocationWrapper = {"":
 ["_ptr?"],
 "super": "Object",
 toString$0: function() {
  return $._LocationWrapper__toString(this._ptr);
},
 is$_LocationWrapper: true,
 is$Location: function() { return true; }
};

$$._FixedSizeListIterator = {"":
 ["_lib_length", "_array", "_pos"],
 "super": "_VariableSizeListIterator",
 hasNext$0: function() {
  var t1 = this._lib_length;
  if (typeof t1 !== 'number')
    return this.hasNext$0$bailout(1, t1);
  return t1 > this._pos;
},
 hasNext$0$bailout: function(state0, t1) {
  return $.gt(t1, this._pos);
}
};

$$._VariableSizeListIterator = {"":
 [],
 "super": "Object",
 hasNext$0: function() {
  var t1 = $.get$length(this._array);
  if (typeof t1 !== 'number')
    return this.hasNext$0$bailout(1, t1);
  return t1 > this._pos;
},
 hasNext$0$bailout: function(state0, t1) {
  return $.gt(t1, this._pos);
},
 next$0: function() {
  if (this.hasNext$0() !== true)
    throw $.$$throw($.CTC11);
  var t1 = this._array;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.next$0$bailout(1, t1);
  var t3 = this._pos;
  this._pos = t3 + 1;
  if (t3 < 0 || t3 >= t1.length)
    throw $.ioore(t3);
  return t1[t3];
},
 next$0$bailout: function(state0, t1) {
  var t3 = this._pos;
  this._pos = t3 + 1;
  return $.index(t1, t3);
}
};

$$._Manager = {"":
 ["nextIsolateId=", "currentManagerId=", "nextManagerId=", "currentContext=", "rootContext=", "topEventLoop?", "fromCommandLine?", "isWorker?", "supportsWorkers", "isolates?", "mainManager?", "managers?"],
 "super": "Object",
 get$useWorkers: function() {
  return this.supportsWorkers;
},
 get$needSerialization: function() {
  return this.get$useWorkers();
},
 _nativeDetectEnvironment$0: function() {
  this.isWorker = $isWorker;
  this.supportsWorkers = $supportsWorkers;
  this.fromCommandLine = typeof(window) == 'undefined';
},
 _nativeInitWorkerMessageHandler$0: function() {
  $globalThis.onmessage = function (e) {
  _IsolateNatives._processWorkerMessage(this.mainManager, e);
};
},
 maybeCloseWorker$0: function() {
  if ($.isEmpty(this.isolates) === true)
    this.mainManager.postMessage$1($._serializeMessage($.makeLiteralMap(['command', 'close'])));
},
 _Manager$0: function() {
  this._nativeDetectEnvironment$0();
  this.topEventLoop = $._EventLoop$();
  this.isolates = $.HashMapImplementation$();
  this.managers = $.HashMapImplementation$();
  if (this.isWorker === true) {
    this.mainManager = $._MainManagerStub$();
    this._nativeInitWorkerMessageHandler$0();
  }
}
};

$$._IsolateContext = {"":
 ["id=", "ports?", "isolateStatics"],
 "super": "Object",
 initGlobals$0: function() {
  $initGlobals(this);
},
 eval$1: function(code) {
  var old = $._globalState().get$currentContext();
  $._globalState().set$currentContext(this);
  this._setGlobals$0();
  var result = null;
  try {
    result = code.call$0();
  } finally {
    var t1 = old;
    $._globalState().set$currentContext(t1);
    if (!(old == null))
      old._setGlobals$0();
  }
  return result;
},
 _setGlobals$0: function() {
  $setGlobals(this);
},
 lookup$1: function(portId) {
  return $.index(this.ports, portId);
},
 register$2: function(portId, port) {
  if (this.ports.containsKey$1(portId) === true)
    throw $.$$throw($.ExceptionImplementation$('Registry: ports must be registered only once.'));
  $.indexSet(this.ports, portId, port);
  $.indexSet($._globalState().get$isolates(), this.id, this);
},
 unregister$1: function(portId) {
  this.ports.remove$1(portId);
  if ($.isEmpty(this.ports) === true)
    $._globalState().get$isolates().remove$1(this.id);
},
 _IsolateContext$0: function() {
  var t1 = $._globalState();
  var t2 = t1.get$nextIsolateId();
  t1.set$nextIsolateId($.add(t2, 1));
  this.id = t2;
  this.ports = $.HashMapImplementation$();
  this.initGlobals$0();
}
};

$$._EventLoop = {"":
 ["events"],
 "super": "Object",
 enqueue$3: function(isolate, fn, msg) {
  $.addLast(this.events, $._IsolateEvent$(isolate, fn, msg));
},
 dequeue$0: function() {
  var t1 = this.events;
  if ($.isEmpty(t1) === true)
    return;
  return t1.removeFirst$0();
},
 runIteration$0: function() {
  var event$ = this.dequeue$0();
  if (event$ == null) {
    if ($._globalState().get$isWorker() === true)
      $._globalState().maybeCloseWorker$0();
    else if (!($._globalState().get$rootContext() == null) && $._globalState().get$isolates().containsKey$1($._globalState().get$rootContext().get$id()) === true && $._globalState().get$fromCommandLine() === true && $.isEmpty($._globalState().get$rootContext().get$ports()) === true)
      throw $.$$throw($.ExceptionImplementation$('Program exited with open ReceivePorts.'));
    return false;
  }
  event$.process$0();
  return true;
},
 _runHelper$0: function() {
  if (!($._window() == null))
    new $._EventLoop__runHelper_next(this).call$0();
  else
    for (; this.runIteration$0() === true;)
      ;
},
 run$0: function() {
  if ($._globalState().get$isWorker() !== true)
    this._runHelper$0();
  else
    try {
      this._runHelper$0();
    } catch (exception) {
      var t1 = $.unwrapException(exception);
      var e = t1;
      var trace = $.getTraceFromException(exception);
      $._globalState().get$mainManager().postMessage$1($._serializeMessage($.makeLiteralMap(['command', 'error', 'msg', $.S(e) + '\n' + $.S(trace)])));
    }

}
};

$$._IsolateEvent = {"":
 ["isolate", "fn", "message?"],
 "super": "Object",
 process$0: function() {
  this.isolate.eval$1(this.fn);
}
};

$$._MainManagerStub = {"":
 [],
 "super": "Object",
 get$id: function() {
  return 0;
},
 set$id: function(i) {
  throw $.$$throw($.NotImplementedException$(null));
},
 set$onmessage: function(f) {
  throw $.$$throw($.ExceptionImplementation$('onmessage should not be set on MainManagerStub'));
},
 postMessage$1: function(msg) {
  $globalThis.postMessage(msg);
},
 terminate$0: function() {
}
};

$$._BaseSendPort = {"":
 ["_isolateId?"],
 "super": "Object",
 _checkReplyTo$1: function(replyTo) {
  if (!(replyTo == null) && !(typeof replyTo === 'object' && replyTo !== null && !!replyTo.is$_NativeJsSendPort) && !(typeof replyTo === 'object' && replyTo !== null && !!replyTo.is$_WorkerSendPort) && !(typeof replyTo === 'object' && replyTo !== null && !!replyTo.is$_BufferingSendPort))
    throw $.$$throw($.ExceptionImplementation$('SendPort.send: Illegal replyTo port type'));
},
 call$1: function(message) {
  var completer = $.Completer_Completer();
  var port = $._ReceivePortImpl$();
  this.send$2(message, port.toSendPort$0());
  port.receive$1(new $._BaseSendPort_call_anon(port, completer));
  return completer.get$future();
},
 is$SendPort: true
};

$$._NativeJsSendPort = {"":
 ["_receivePort?", "_isolateId"],
 "super": "_BaseSendPort",
 send$2: function(message, replyTo) {
  $._waitForPendingPorts([message, replyTo], new $._NativeJsSendPort_send_anon(this, message, replyTo));
},
 send$1: function(message) {
  return this.send$2(message,null)
},
 operator$eq$1: function(other) {
  return typeof other === 'object' && other !== null && !!other.is$_NativeJsSendPort && $.eqB(this._receivePort, other._receivePort);
},
 hashCode$0: function() {
  return this._receivePort.get$_id();
},
 is$_NativeJsSendPort: true,
 is$SendPort: true
};

$$._WorkerSendPort = {"":
 ["_workerId?", "_receivePortId", "_isolateId"],
 "super": "_BaseSendPort",
 send$2: function(message, replyTo) {
  $._waitForPendingPorts([message, replyTo], new $._WorkerSendPort_send_anon(this, message, replyTo));
},
 send$1: function(message) {
  return this.send$2(message,null)
},
 operator$eq$1: function(other) {
  if (typeof other === 'object' && other !== null && !!other.is$_WorkerSendPort)
    var t1 = $.eqB(this._workerId, other._workerId) && $.eqB(this._isolateId, other._isolateId) && $.eqB(this._receivePortId, other._receivePortId);
  else
    t1 = false;
  return t1;
},
 hashCode$0: function() {
  return $.xor($.xor($.shl(this._workerId, 16), $.shl(this._isolateId, 8)), this._receivePortId);
},
 is$_WorkerSendPort: true,
 is$SendPort: true
};

$$._BufferingSendPort = {"":
 ["_id?", "_port!", "_futurePort?", "pending=", "_isolateId"],
 "super": "_BaseSendPort",
 send$2: function(message, replyTo) {
  var t1 = this._port;
  if (!(t1 == null))
    t1.send$2(message, replyTo);
  else
    $.add$1(this.pending, $.makeLiteralMap(['message', message, 'replyTo', replyTo]));
},
 send$1: function(message) {
  return this.send$2(message,null)
},
 operator$eq$1: function(other) {
  return typeof other === 'object' && other !== null && !!other.is$_BufferingSendPort && $.eqB(this._id, other._id);
},
 hashCode$0: function() {
  return this._id;
},
 _BufferingSendPort$2: function(isolateId, _futurePort) {
  $._BufferingSendPort__idCount = $.add($._BufferingSendPort__idCount, 1);
  this._futurePort.then$1(new $.anon(this));
},
 is$_BufferingSendPort: true,
 is$SendPort: true
};

$$._ReceivePortImpl = {"":
 ["_id?", "_callback?"],
 "super": "Object",
 _callback$0: function() { return this._callback.call$0(); },
 _callback$2: function(arg0, arg1) { return this._callback.call$2(arg0, arg1); },
 receive$1: function(onMessage) {
  this._callback = onMessage;
},
 close$0: function() {
  this._callback = null;
  $._globalState().get$currentContext().unregister$1(this._id);
},
 toSendPort$0: function() {
  return $._NativeJsSendPort$(this, $._globalState().get$currentContext().get$id());
},
 _ReceivePortImpl$0: function() {
  $._globalState().get$currentContext().register$2(this._id, this);
}
};

$$._PendingSendPortFinder = {"":
 ["ports?", "_visited"],
 "super": "_MessageTraverser",
 visitPrimitive$1: function(x) {
},
 visitList$1: function(list) {
  if (!($.index(this._visited, list) == null))
    return;
  $.indexSet(this._visited, list, true);
  $.forEach(list, new $._PendingSendPortFinder_visitList_anon(this));
},
 visitMap$1: function(map) {
  if (!($.index(this._visited, map) == null))
    return;
  $.indexSet(this._visited, map, true);
  $.forEach(map.getValues$0(), new $._PendingSendPortFinder_visitMap_anon(this));
},
 visitSendPort$1: function(port) {
  if (!!port.is$_BufferingSendPort && port._port == null)
    this.ports.push(port.get$_futurePort());
},
 _PendingSendPortFinder$0: function() {
  this._visited = $._JsVisitedMap$();
}
};

$$._JsSerializer = {"":
 ["_nextFreeRefId", "_visited"],
 "super": "_Serializer",
 visitSendPort$1: function(x) {
  if (typeof x === 'object' && x !== null && !!x.is$_NativeJsSendPort)
    return this.visitNativeJsSendPort$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$_WorkerSendPort)
    return this.visitWorkerSendPort$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$_BufferingSendPort)
    return this.visitBufferingSendPort$1(x);
  throw $.$$throw('Illegal underlying port ' + $.S(x));
},
 visitNativeJsSendPort$1: function(port) {
  return ['sendport', $._globalState().get$currentManagerId(), port._isolateId, port._receivePort.get$_id()];
},
 visitWorkerSendPort$1: function(port) {
  return ['sendport', port._workerId, port._isolateId, port._receivePortId];
},
 visitBufferingSendPort$1: function(port) {
  var t1 = port._port;
  if (!(t1 == null))
    return this.visitSendPort$1(t1);
  else
    throw $.$$throw('internal error: must call _waitForPendingPorts to ensure all ports are resolved at this point.');
},
 _JsSerializer$0: function() {
  this._visited = $._JsVisitedMap$();
}
};

$$._JsCopier = {"":
 ["_visited"],
 "super": "_Copier",
 visitSendPort$1: function(x) {
  if (typeof x === 'object' && x !== null && !!x.is$_NativeJsSendPort)
    return this.visitNativeJsSendPort$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$_WorkerSendPort)
    return this.visitWorkerSendPort$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$_BufferingSendPort)
    return this.visitBufferingSendPort$1(x);
  throw $.$$throw('Illegal underlying port ' + $.S(this.get$p()));
},
 visitNativeJsSendPort$1: function(port) {
  return $._NativeJsSendPort$(port._receivePort, port._isolateId);
},
 visitWorkerSendPort$1: function(port) {
  return $._WorkerSendPort$(port._workerId, port._isolateId, port._receivePortId);
},
 visitBufferingSendPort$1: function(port) {
  var t1 = port._port;
  if (!(t1 == null))
    return this.visitSendPort$1(t1);
  else
    throw $.$$throw('internal error: must call _waitForPendingPorts to ensure all ports are resolved at this point.');
},
 _JsCopier$0: function() {
  this._visited = $._JsVisitedMap$();
}
};

$$._JsDeserializer = {"":
 ["_deserialized"],
 "super": "_Deserializer",
 deserializeSendPort$1: function(x) {
  var managerId = $.index(x, 1);
  var isolateId = $.index(x, 2);
  var receivePortId = $.index(x, 3);
  if ($.eqB(managerId, $._globalState().get$currentManagerId())) {
    var isolate = $.index($._globalState().get$isolates(), isolateId);
    if (isolate == null)
      return;
    return $._NativeJsSendPort$(isolate.lookup$1(receivePortId), isolateId);
  } else
    return $._WorkerSendPort$(managerId, isolateId, receivePortId);
}
};

$$._JsVisitedMap = {"":
 ["tagged"],
 "super": "Object",
 operator$index$1: function(object) {
  return this._getAttachedInfo$1(object);
},
 operator$indexSet$2: function(object, info) {
  $.add$1(this.tagged, object);
  this._setAttachedInfo$2(object, info);
},
 reset$0: function() {
  this.tagged = $.ListImplementation_List(null);
},
 cleanup$0: function() {
  var length$ = $.get$length(this.tagged);
  if (typeof length$ !== 'number')
    return this.cleanup$0$bailout(1, length$);
  var i = 0;
  for (; i < length$; ++i)
    this._clearAttachedInfo$1($.index(this.tagged, i));
  this.tagged = null;
},
 cleanup$0$bailout: function(state0, length$) {
  var i = 0;
  for (; $.ltB(i, length$); ++i)
    this._clearAttachedInfo$1($.index(this.tagged, i));
  this.tagged = null;
},
 _clearAttachedInfo$1: function(o) {
  o['__MessageTraverser__attached_info__'] = null;
},
 _setAttachedInfo$2: function(o, info) {
  o['__MessageTraverser__attached_info__'] = info;
},
 _getAttachedInfo$1: function(o) {
  return o['__MessageTraverser__attached_info__'];
}
};

$$._MessageTraverserVisitedMap = {"":
 [],
 "super": "Object",
 operator$index$1: function(object) {
  return;
},
 operator$indexSet$2: function(object, info) {
},
 reset$0: function() {
},
 cleanup$0: function() {
}
};

$$._MessageTraverser = {"":
 [],
 "super": "Object",
 traverse$1: function(x) {
  return x;
}
};

$$._Copier = {"":
 [],
 "super": "_MessageTraverser",
 visitPrimitive$1: function(x) {
  return x;
},
 visitList$1: function(list) {
  if (typeof list !== 'object' || list === null || list.constructor !== Array && !list.is$JavaScriptIndexingBehavior())
    return this.visitList$1$bailout(1, list);
  var copy = $.index(this._visited, list);
  if (!(copy == null))
    return copy;
  var len = list.length;
  copy = $.ListImplementation_List(len);
  $.indexSet(this._visited, list, copy);
  for (var i = 0; i < len; ++i) {
    if (i >= list.length)
      throw $.ioore(i);
    copy[i] = this._dispatch$1(list[i]);
  }
  return copy;
},
 visitList$1$bailout: function(state0, list) {
  var copy = $.index(this._visited, list);
  if (!(copy == null))
    return copy;
  var len = $.get$length(list);
  copy = $.ListImplementation_List(len);
  $.indexSet(this._visited, list, copy);
  for (var i = 0; $.ltB(i, len); ++i) {
    var t1 = this._dispatch$1($.index(list, i));
    if (i >= copy.length)
      throw $.ioore(i);
    copy[i] = t1;
  }
  return copy;
},
 visitMap$1: function(map) {
  var t1 = {};
  t1.copy_10 = $.index(this._visited, map);
  var t2 = t1.copy_10;
  if (!(t2 == null))
    return t2;
  t1.copy_10 = $.HashMapImplementation$();
  $.indexSet(this._visited, map, t1.copy_10);
  map.forEach$1(new $._Copier_visitMap_anon(this, t1));
  return t1.copy_10;
}
};

$$._Serializer = {"":
 [],
 "super": "_MessageTraverser",
 visitPrimitive$1: function(x) {
  return x;
},
 visitList$1: function(list) {
  var copyId = $.index(this._visited, list);
  if (!(copyId == null))
    return ['ref', copyId];
  var id = this._nextFreeRefId;
  this._nextFreeRefId = id + 1;
  $.indexSet(this._visited, list, id);
  return ['list', id, this._serializeList$1(list)];
},
 visitMap$1: function(map) {
  var copyId = $.index(this._visited, map);
  if (!(copyId == null))
    return ['ref', copyId];
  var id = this._nextFreeRefId;
  this._nextFreeRefId = id + 1;
  $.indexSet(this._visited, map, id);
  return ['map', id, this._serializeList$1(map.getKeys$0()), this._serializeList$1(map.getValues$0())];
},
 _serializeList$1: function(list) {
  if (typeof list !== 'string' && (typeof list !== 'object' || list === null || list.constructor !== Array && !list.is$JavaScriptIndexingBehavior()))
    return this._serializeList$1$bailout(1, list);
  var len = list.length;
  var result = $.ListImplementation_List(len);
  for (var i = 0; i < len; ++i) {
    if (i >= list.length)
      throw $.ioore(i);
    result[i] = this._dispatch$1(list[i]);
  }
  return result;
},
 _serializeList$1$bailout: function(state0, list) {
  var len = $.get$length(list);
  var result = $.ListImplementation_List(len);
  for (var i = 0; $.ltB(i, len); ++i) {
    var t1 = this._dispatch$1($.index(list, i));
    if (i >= result.length)
      throw $.ioore(i);
    result[i] = t1;
  }
  return result;
}
};

$$._Deserializer = {"":
 [],
 "super": "Object",
 deserialize$1: function(x) {
  if ($._Deserializer_isPrimitive(x))
    return x;
  this._deserialized = $.HashMapImplementation$();
  return this._deserializeHelper$1(x);
},
 _deserializeHelper$1: function(x) {
  if ($._Deserializer_isPrimitive(x))
    return x;
  switch ($.index(x, 0)) {
    case 'ref':
      return this._deserializeRef$1(x);
    case 'list':
      return this._deserializeList$1(x);
    case 'map':
      return this._deserializeMap$1(x);
    case 'sendport':
      return this.deserializeSendPort$1(x);
    default:
      return this.deserializeObject$1(x);
  }
},
 _deserializeRef$1: function(x) {
  var id = $.index(x, 1);
  return $.index(this._deserialized, id);
},
 _deserializeList$1: function(x) {
  var id = $.index(x, 1);
  var dartList = $.index(x, 2);
  if (typeof dartList !== 'object' || dartList === null || (dartList.constructor !== Array || !!dartList.immutable$list) && !dartList.is$JavaScriptIndexingBehavior())
    return this._deserializeList$1$bailout(1, dartList, id);
  $.indexSet(this._deserialized, id, dartList);
  var len = dartList.length;
  for (var i = 0; i < len; ++i) {
    if (i >= dartList.length)
      throw $.ioore(i);
    var t1 = this._deserializeHelper$1(dartList[i]);
    if (i >= dartList.length)
      throw $.ioore(i);
    dartList[i] = t1;
  }
  return dartList;
},
 _deserializeList$1$bailout: function(state0, dartList, id) {
  $.indexSet(this._deserialized, id, dartList);
  var len = $.get$length(dartList);
  for (var i = 0; $.ltB(i, len); ++i)
    $.indexSet(dartList, i, this._deserializeHelper$1($.index(dartList, i)));
  return dartList;
},
 _deserializeMap$1: function(x) {
  var result = $.HashMapImplementation$();
  var id = $.index(x, 1);
  $.indexSet(this._deserialized, id, result);
  var keys = $.index(x, 2);
  if (typeof keys !== 'string' && (typeof keys !== 'object' || keys === null || keys.constructor !== Array && !keys.is$JavaScriptIndexingBehavior()))
    return this._deserializeMap$1$bailout(1, x, result, keys);
  var values = $.index(x, 3);
  if (typeof values !== 'string' && (typeof values !== 'object' || values === null || values.constructor !== Array && !values.is$JavaScriptIndexingBehavior()))
    return this._deserializeMap$1$bailout(2, values, result, keys);
  var len = keys.length;
  for (var i = 0; i < len; ++i) {
    if (i >= keys.length)
      throw $.ioore(i);
    var key = this._deserializeHelper$1(keys[i]);
    if (i >= values.length)
      throw $.ioore(i);
    result.operator$indexSet$2(key, this._deserializeHelper$1(values[i]));
  }
  return result;
},
 _deserializeMap$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      var x = env0;
      result = env1;
      keys = env2;
      break;
    case 2:
      values = env0;
      result = env1;
      keys = env2;
      break;
  }
  switch (state0) {
    case 0:
      var result = $.HashMapImplementation$();
      var id = $.index(x, 1);
      $.indexSet(this._deserialized, id, result);
      var keys = $.index(x, 2);
    case 1:
      state0 = 0;
      var values = $.index(x, 3);
    case 2:
      state0 = 0;
      var len = $.get$length(keys);
      for (var i = 0; $.ltB(i, len); ++i)
        result.operator$indexSet$2(this._deserializeHelper$1($.index(keys, i)), this._deserializeHelper$1($.index(values, i)));
      return result;
  }
},
 deserializeObject$1: function(x) {
  throw $.$$throw('Unexpected serialized object');
}
};

$$._Timer = {"":
 ["_once", "_handle"],
 "super": "Object",
 cancel$0: function() {
  var t1 = this._once === true;
  var t2 = $._window;
  if (t1)
    t2().clearTimeout$1(this._handle);
  else
    t2().clearInterval$1(this._handle);
},
 _Timer$repeating$2: function(milliSeconds, callback) {
  this._handle = $._window().setInterval$2(new $.anon1(this, callback), milliSeconds);
},
 _Timer$2: function(milliSeconds, callback) {
  this._handle = $._window().setTimeout$2(new $.anon0(this, callback), milliSeconds);
}
};

$$.Uri = {"":
 ["scheme", "userInfo", "domain", "port", "path", "query", "fragment"],
 "super": "Object",
 query$1: function(arg0) { return this.query.call$1(arg0); },
 isAbsolute$0: function() {
  if ('' === this.scheme)
    return false;
  if (!('' === this.fragment))
    return false;
  return true;
},
 hasAuthority$0: function() {
  return !$.eqB(this.userInfo, '') || !$.eqB(this.domain, '') || !$.eqB(this.port, 0);
},
 toString$0: function() {
  var sb = $.StringBuffer_StringBuffer('');
  var t1 = this.scheme;
  $.Uri__addIfNonEmpty(sb, t1, t1, ':');
  if (this.hasAuthority$0() === true || $.eqB(t1, 'file')) {
    $.add$1(sb, '//');
    t1 = this.userInfo;
    $.Uri__addIfNonEmpty(sb, t1, t1, '@');
    t1 = this.domain;
    $.add$1(sb, t1 == null ? 'null' : t1);
    t1 = this.port;
    if (!$.eqB(t1, 0)) {
      $.add$1(sb, ':');
      $.add$1(sb, $.toString(t1));
    }
  }
  t1 = this.path;
  $.add$1(sb, t1 == null ? 'null' : t1);
  t1 = this.query;
  $.Uri__addIfNonEmpty(sb, t1, '?', t1);
  t1 = this.fragment;
  $.Uri__addIfNonEmpty(sb, t1, '#', t1);
  return $.toString(sb);
}
};

$$._Random = {"":
 [],
 "super": "Object",
 nextDouble$0: function() {
  return Math.random();
},
 nextBool$0: function() {
  return Math.random() < 0.5;
}
};

$$.DisposableImpl = {"":
 [],
 "super": "Object",
 validateNotDisposed$0: function() {
}
};

$$.GlobalId = {"":
 ["id?", "_hashCode"],
 "super": "Object",
 compareTo$1: function(other) {
  return $.compareTo(this.id, other.get$id());
},
 hashCode$0: function() {
  return this._hashCode;
},
 operator$eq$1: function(other) {
  return !(other == null) && $.eqB(other.get$id(), this.id);
}
};

$$.Tuple = {"":
 ["item1?", "item2?"],
 "super": "Object",
 operator$eq$1: function(other) {
  return !(other == null) && $.eqB(this.item1, other.get$item1()) && $.eqB(this.item2, other.get$item2());
},
 toString$0: function() {
  return '{item1: ' + $.S(this.item1) + ', item2: ' + $.S(this.item2) + '}';
},
 hashCode$0: function() {
  return $.Util_getHashCode([this.item1, this.item2]);
}
};

$$.Tuple3 = {"":
 ["item3?", "item1", "item2"],
 "super": "Tuple",
 operator$eq$1: function(other) {
  return !(other == null) && $.eqB(this.item1, other.get$item1()) && $.eqB(this.item2, other.get$item2()) && $.eqB(this.item3, other.get$item3());
},
 toString$0: function() {
  return '{item1: ' + $.S(this.item1) + ', item2: ' + $.S(this.item2) + ', item3: ' + $.S(this.item3) + '}';
},
 hashCode$0: function() {
  return $.Util_getHashCode([this.item1, this.item2, this.item3]);
}
};

$$.NullArgumentException = {"":
 ["arg", "message"],
 "super": "ArgumentError",
 toString$0: function() {
  return 'Null argument: ' + this.arg;
}
};

$$.InvalidOperationException = {"":
 ["message?"],
 "super": "Object",
 is$Exception: true
};

$$.DetailedIllegalArgumentException = {"":
 ["argument", "message"],
 "super": "ArgumentError",
 toString$0: function() {
  var t1 = this.message;
  var t2 = t1 == null || $.eqB($.get$length(t1), 0);
  var t3 = this.argument;
  if (t2)
    return 'Illegal argument: ' + t3;
  else
    return 'Illegal argument: ' + t3 + ' -- ' + $.S(t1);
}
};

$$.Enumerable = {"":
 [],
 "super": "Object",
 every$1: function(f) {
  $.requireArgumentNotNull(f, 'f');
  for (var t1 = $.iterator(this); t1.hasNext$0() === true;)
    if (f.call$1(t1.next$0()) !== true)
      return false;
  return true;
},
 contains$1: function(item) {
  for (var t1 = $.iterator(this); t1.hasNext$0() === true;)
    if ($.eqB(t1.next$0(), item))
      return true;
  return false;
},
 isEmpty$0: function() {
  return this.some$1(new $.Enumerable_isEmpty_anon()) !== true;
},
 some$1: function(f) {
  $.requireArgumentNotNull(f, 'f');
  for (var t1 = $.iterator(this); t1.hasNext$0() === true;)
    if (f.call$1(t1.next$0()) === true)
      return true;
  return false;
},
 count$1: function(f) {
  if (f == null)
    f = new $.Enumerable_count_anon();
  for (var t1 = $.iterator(this), c = 0; t1.hasNext$0() === true;)
    if (f.call$1(t1.next$0()) === true)
      ++c;
  return c;
},
 count$0: function() {
  return this.count$1(null)
},
 join$1: function(separator) {
  var sb = $.StringBuffer_StringBuffer('');
  for (var t1 = $.iterator(this); t1.hasNext$0() === true;) {
    var t2 = t1.next$0();
    if ($.gtB($.get$length(sb), 0))
      $.add$1(sb, separator);
    $.add$1(sb, t2);
  }
  return $.toString(sb);
},
 join$0: function() {
  return this.join$1(', ')
},
 map$1: function(f) {
  $.requireArgumentNotNull(f, 'f');
  return $._FuncEnumerable$(this, new $.Enumerable_map_anon(f));
},
 filter$1: function(f) {
  $.requireArgumentNotNull(f, 'f');
  return $._FuncEnumerable$(this, new $.Enumerable_filter_anon(f));
},
 exclude$1: function(items) {
  $.requireArgumentNotNull(items, 'items');
  return $._FuncEnumerable$(this, new $.Enumerable_exclude_anon(new $.Enumerable_exclude_anon0($.$$(items))));
},
 selectMany$1: function(f) {
  $.requireArgumentNotNull(f, 'f');
  return $._FuncEnumerable$(this, new $.Enumerable_selectMany_anon(f));
},
 first$1: function(f) {
  if (f == null)
    f = new $.Enumerable_first_anon();
  var iter = $._WhereIterator$(this.iterator$0(), f);
  if (iter.hasNext$0() !== true)
    throw $.$$throw($.CTC19);
  return iter.next$0();
},
 first$0: function() {
  return this.first$1(null)
},
 single$1: function(f) {
  if (f == null)
    f = new $.Enumerable_single_anon();
  var iter = $._WhereIterator$(this.iterator$0(), f);
  if (iter.hasNext$0() !== true)
    throw $.$$throw($.CTC19);
  var value = iter.next$0();
  if (iter.hasNext$0() === true)
    throw $.$$throw($.CTC29);
  return value;
},
 distinct$1: function(comparer) {
  var t1 = {};
  t1.comparer_1 = comparer;
  if (t1.comparer_1 == null)
    t1.comparer_1 = new $.Enumerable_distinct_anon();
  return $._FuncEnumerable$(this, new $.Enumerable_distinct_anon0(t1));
},
 distinct$0: function() {
  return this.distinct$1(null)
},
 group$1: function(keyFunc) {
  return $.Grouping$(this, keyFunc);
},
 toReadOnlyCollection$0: function() {
  return $.ReadOnlyCollection$(this);
},
 forEach$1: function(f) {
  for (var t1 = $.iterator(this); t1.hasNext$0() === true;)
    f.call$1(t1.next$0());
},
 forEachWithIndex$1: function(f) {
  for (var t1 = $.iterator(this), i = 0; t1.hasNext$0() === true;) {
    var t2 = t1.next$0();
    var i0 = i + 1;
    f.call$2(t2, i);
    i = i0;
  }
},
 toList$0: function() {
  return $.ListImplementation_List$from(this);
},
 toHashMap$2: function(valueFunc, keyFunc) {
  if (keyFunc == null)
    keyFunc = new $.Enumerable_toHashMap_anon();
  var map = $.HashMapImplementation$();
  for (var t1 = $.iterator(this); t1.hasNext$0() === true;) {
    var t2 = t1.next$0();
    var k = keyFunc.call$1(t2);
    if (map.containsKey$1(k) === true)
      throw $.$$throw($.UnsupportedOperationException$('The key \'' + $.S(k) + '\' is duplicated'));
    map.operator$indexSet$2(k, valueFunc.call$1(t2));
  }
  return map;
},
 toHashMap$1: function(valueFunc) {
  return this.toHashMap$2(valueFunc,null)
},
 selectNumbers$1: function(f) {
  $.requireArgumentNotNull(f, 'f');
  return $._FuncNumEnumerable$(this, new $.Enumerable_selectNumbers_anon(f));
},
 toString$0: function() {
  return '[' + $.S(this.join$0()) + ']';
},
 is$Enumerable: true,
 is$Collection: function() { return true; }
};

$$._SimpleEnumerable = {"":
 ["_source"],
 "super": "Enumerable",
 iterator$0: function() {
  return $.iterator(this._source);
},
 get$length: function() {
  return this.count$0();
}
};

$$._FuncEnumerable = {"":
 ["_source", "_func"],
 "super": "Enumerable",
 _func$1: function(arg0) { return this._func.call$1(arg0); },
 iterator$0: function() {
  return this._func$1(this._source.iterator$0());
},
 get$length: function() {
  return this.count$0();
}
};

$$._SelectIterator = {"":
 ["_source", "_func"],
 "super": "Object",
 _func$1: function(arg0) { return this._func.call$1(arg0); },
 hasNext$0: function() {
  return this._source.hasNext$0();
},
 next$0: function() {
  return this._func$1(this._source.next$0());
}
};

$$._WhereIterator = {"":
 ["_source", "_func", "_lib1_next=", "_current?"],
 "super": "Object",
 _func$1: function(arg0) { return this._func.call$1(arg0); },
 hasNext$0: function() {
  if (this._lib1_next == null) {
    this._lib1_next = false;
    for (var t1 = this._source; t1.hasNext$0() === true;) {
      this._current = t1.next$0();
      if (this._func$1(this._current) === true) {
        this._lib1_next = true;
        break;
      }
    }
  }
  return this._lib1_next;
},
 next$0: function() {
  if (this.hasNext$0() !== true)
    throw $.$$throw($.CTC11);
  this._lib1_next = null;
  return this._current;
}
};

$$._DistinctIterator = {"":
 ["_source", "_comparer", "_found", "_lib1_next=", "_current?"],
 "super": "Object",
 _comparer$2: function(arg0, arg1) { return this._comparer.call$2(arg0, arg1); },
 hasNext$0: function() {
  if (this._lib1_next == null) {
    this._lib1_next = false;
    for (var t1 = this._source, t2 = this._found; t1.hasNext$0() === true;) {
      this._current = t1.next$0();
      if ($.every(t2, new $._DistinctIterator_hasNext_anon(this)) === true) {
        this._lib1_next = true;
        t2.push(this._current);
        break;
      }
    }
  }
  return this._lib1_next;
},
 next$0: function() {
  if (this.hasNext$0() !== true)
    throw $.$$throw($.CTC11);
  this._lib1_next = null;
  return this._current;
}
};

$$._SelectManyIterator = {"":
 ["_sourceIterator", "_func", "_outputIterator"],
 "super": "Object",
 _func$1: function(arg0) { return this._func.call$1(arg0); },
 hasNext$0: function() {
  var t1 = this._outputIterator;
  if (!(t1 == null))
    if (t1.hasNext$0() === true)
      return true;
    else
      this._outputIterator = null;
  t1 = this._sourceIterator;
  if (t1.hasNext$0() === true) {
    this._outputIterator = $.iterator(this._func$1(t1.next$0()));
    return this._outputIterator.hasNext$0();
  }
  return false;
},
 next$0: function() {
  if (this.hasNext$0() !== true)
    throw $.$$throw($.CTC11);
  return this._outputIterator.next$0();
}
};

$$.NumberEnumerable = {"":
 [],
 "super": "Enumerable",
 sum$0: function() {
  for (var t1 = $.iterator(this), theSum = 0; t1.hasNext$0() === true;) {
    var t2 = t1.next$0();
    if (typeof t2 !== 'number')
      throw $.iae(t2);
    theSum += t2;
  }
  return theSum;
}
};

$$._FuncNumEnumerable = {"":
 ["_source", "_func"],
 "super": "NumberEnumerable",
 _func$1: function(arg0) { return this._func.call$1(arg0); },
 iterator$0: function() {
  return this._func$1(this._source.iterator$0());
},
 get$length: function() {
  return this.count$0();
}
};

$$.IndexIterator = {"":
 ["_indexer", "_lib1_length", "_lib1_pos"],
 "super": "Object",
 hasNext$0: function() {
  var t1 = this._lib1_length;
  if (typeof t1 !== 'number')
    return this.hasNext$0$bailout(1, t1);
  return t1 > this._lib1_pos;
},
 hasNext$0$bailout: function(state0, t1) {
  return $.gt(t1, this._lib1_pos);
},
 next$0: function() {
  if (this.hasNext$0() !== true)
    throw $.$$throw($.CTC11);
  var t1 = this._lib1_pos;
  this._lib1_pos = t1 + 1;
  return this._indexer$1(t1);
},
 _indexer$1: function(arg0) { return this._indexer.call$1(arg0); },
 IndexIterator$2: function(length$, indexer) {
  $.requireArgumentNotNull(this._indexer, '_indexer');
}
};

$$.ListBase = {"":
 [],
 "super": "Enumerable",
 iterator$0: function() {
  return $.IndexIterator$($.get$length(this), new $.ListBase_iterator_anon(this));
},
 forEach$1: function(f) {
  for (var i = 0; $.ltB(i, $.get$length(this)); ++i)
    f.call$1(this.operator$index$1(i));
},
 every$1: function(f) {
  for (var i = 0; $.ltB(i, $.get$length(this)); ++i)
    if (f.call$1(this.operator$index$1(i)) !== true)
      return false;
  return true;
},
 some$1: function(f) {
  for (var i = 0; $.ltB(i, $.get$length(this)); ++i)
    if (f.call$1(this.operator$index$1(i)) === true)
      return true;
  return false;
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 indexOf$2: function(element, start) {
  if (typeof start !== 'number')
    return this.indexOf$2$bailout(1, element, start);
  for (var i = start; $.ltB(i, $.get$length(this)); ++i)
    if ($.eqB(this.operator$index$1(i), element))
      return i;
  return -1;
},
 indexOf$2$bailout: function(state0, element, start) {
  for (var i = start; $.ltB(i, $.get$length(this)); i = $.add(i, 1))
    if ($.eqB(this.operator$index$1(i), element))
      return i;
  return -1;
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 lastIndexOf$2: function(element, start) {
  if (start !== (start | 0))
    return this.lastIndexOf$2$bailout(1, element, start);
  for (var i = start, lastIndex = -1; $.ltB(i, $.get$length(this)); ++i)
    lastIndex = $.eqB(this.operator$index$1(i), element) ? i : lastIndex;
  return lastIndex;
},
 lastIndexOf$2$bailout: function(state0, element, start) {
  for (var i = start, lastIndex = -1; $.ltB(i, $.get$length(this)); i = $.add(i, 1))
    lastIndex = $.eqB(this.operator$index$1(i), element) ? i : lastIndex;
  return lastIndex;
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 getRange$2: function(start, itemCount) {
  if (typeof start !== 'number')
    return this.getRange$2$bailout(1, start, itemCount);
  $.requireArgument($.ge(itemCount, 0), 'count', null);
  if (typeof itemCount !== 'number')
    throw $.iae(itemCount);
  var lastIndex = start + itemCount - 1;
  if (itemCount > 0)
    if (start < 0)
      throw $.$$throw($.IndexOutOfRangeException$(start));
    else if ($.geB(lastIndex, $.get$length(this)))
      throw $.$$throw($.IndexOutOfRangeException$(lastIndex));
  var list = $.ListImplementation_List(null);
  for (var i = start; i <= lastIndex; ++i)
    list.push(this.operator$index$1(i));
  return list;
},
 getRange$2$bailout: function(state0, start, itemCount) {
  $.requireArgument($.ge(itemCount, 0), 'count', null);
  var lastIndex = $.sub($.add(start, itemCount), 1);
  if ($.gtB(itemCount, 0))
    if ($.ltB(start, 0))
      throw $.$$throw($.IndexOutOfRangeException$(start));
    else if ($.geB(lastIndex, $.get$length(this)))
      throw $.$$throw($.IndexOutOfRangeException$(lastIndex));
  var list = $.ListImplementation_List(null);
  for (var i = start; $.leB(i, lastIndex); i = $.add(i, 1))
    list.push(this.operator$index$1(i));
  return list;
},
 set$length: function(newLength) {
  throw $.$$throw($.CTC20);
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.CTC20);
},
 add$1: function(value) {
  throw $.$$throw($.CTC20);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC20);
},
 addAll$1: function(value) {
  throw $.$$throw($.CTC20);
},
 sort$1: function(comparer) {
  throw $.$$throw($.CTC20);
},
 clear$0: function() {
  throw $.$$throw($.CTC20);
},
 removeLast$0: function() {
  throw $.$$throw($.CTC20);
},
 removeRange$2: function(start, length$) {
  throw $.$$throw($.CTC20);
},
 insertRange$3: function(start, length$, initialValue) {
  throw $.$$throw($.CTC20);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$.ReadOnlyCollection = {"":
 ["_items"],
 "super": "ListBase",
 get$length: function() {
  return $.get$length(this._items);
},
 operator$index$1: function(index) {
  var t1 = this._items;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.operator$index$1$bailout(1, t1, index);
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  return t1[index];
},
 operator$index$1$bailout: function(state0, t1, index) {
  return $.index(t1, index);
}
};

$$.Grouping = {"":
 ["_lib1_values"],
 "super": "Object",
 containsKey$1: function(key) {
  return this._lib1_values.containsKey$1(key);
},
 operator$index$1: function(key) {
  return this._lib1_values.operator$index$1(key);
},
 forEach$1: function(f) {
  return this._lib1_values.forEach$1(f);
},
 getKeys$0: function() {
  return this._lib1_values.getKeys$0();
},
 get$length: function() {
  return $.get$length(this._lib1_values);
},
 get$isEmpty: function() {
  return this._lib1_values.isEmpty$0();
},
 isEmpty$0: function() { return this.get$isEmpty().call$0(); },
 toString$0: function() {
  return this._lib1_values.toString$0();
},
 Grouping$2: function(source, keyFunc) {
  if (keyFunc == null)
    keyFunc = new $.anon2();
  for (var t1 = $.iterator(source), t2 = this._lib1_values; t1.hasNext$0() === true;) {
    var t3 = t1.next$0();
    $.add$1(t2.putIfAbsent$2(keyFunc.call$1(t3), new $.anon3()), t3);
  }
}
};

$$.EventHandle = {"":
 ["_handlers", "_disposed"],
 "super": "DisposableImpl",
 fireEvent$1: function(args) {
  var t1 = this._handlers;
  if (!(t1 == null))
    $.forEach(t1, new $.EventHandle_fireEvent_anon(args));
},
 add$1: function(handler) {
  var id = $.GlobalId_GlobalId();
  if (this._handlers == null)
    this._handlers = $.HashMapImplementation$();
  $.indexSet(this._handlers, id, handler);
  return id;
},
 remove$1: function(id) {
  var t1 = this._handlers;
  if (!(t1 == null))
    return !(t1.remove$1(id) == null);
  else
    return false;
}
};

$$.EventArgs = {"":
 [],
 "super": "Object"
};

$$.CancelableEventArgs = {"":
 ["_canceled"],
 "super": "EventArgs",
 get$isCanceled: function() {
  return this._canceled;
},
 cancel$0: function() {
  this._canceled = true;
}
};

$$.Size = {"":
 ["width?", "height?"],
 "super": "Object",
 operator$eq$1: function(other) {
  return !(other == null) && $.eqB(this.width, other.get$width()) && $.eqB(this.height, other.get$height());
},
 get$area: function() {
  return $.mul(this.width, this.height);
},
 get$aspectRatio: function() {
  return $.div(this.width, this.height);
},
 isEmpty$0: function() {
  return $.eq(this.get$area(), 0);
},
 get$isValid: function() {
  var t1 = this.width;
  if ($.isValidNumber(t1)) {
    var t2 = this.height;
    t1 = $.isValidNumber(t2) && $.geB(t1, 0) && $.geB(t2, 0);
  } else
    t1 = false;
  return t1;
},
 scale$1: function(magnitude) {
  return $.Size$($.mul(this.width, magnitude), $.mul(this.height, magnitude));
},
 operator$mul$1: function(magnitude) {
  return this.scale$1(magnitude);
},
 toString$0: function() {
  return '(' + $.S(this.width) + ' x ' + $.S(this.height) + ')';
}
};

$$.Coordinate = {"":
 ["x?", "y?"],
 "super": "Object",
 getDistance$1: function(other) {
  return $.get$length(this.operator$sub$1(other));
},
 get$isValid: function() {
  return $.isValidNumber(this.x) && $.isValidNumber(this.y);
},
 operator$sub$1: function(other) {
  return $.Coordinate_difference(this, other);
},
 operator$add$1: function(other) {
  return $.Coordinate$($.add(this.x, other.get$x()), $.add(this.y, other.get$y()));
},
 operator$eq$1: function(other) {
  return !(other == null) && $.eqB(this.x, other.get$x()) && $.eqB(this.y, other.get$y());
},
 toString$0: function() {
  return '{x:' + $.S(this.x) + ', y:' + $.S(this.y) + '}';
}
};

$$.Vector = {"":
 ["x", "y"],
 "super": "Coordinate",
 get$length: function() {
  var t1 = this.x;
  t1 = $.mul(t1, t1);
  var t2 = this.y;
  return $.sqrt($.add(t1, $.mul(t2, t2)));
},
 operator$add$1: function(other) {
  return $.Vector$($.add(this.x, other.get$x()), $.add(this.y, other.get$y()));
},
 operator$mul$1: function(magnitude) {
  return this.scale$1(magnitude);
},
 scale$1: function(magnitude) {
  return $.Vector$($.mul(this.x, magnitude), $.mul(this.y, magnitude));
}
};

$$.Box = {"":
 ["left?", "top?", "width?", "height?"],
 "super": "Object",
 get$topLeft: function() {
  return $.Coordinate$(this.left, this.top);
},
 get$size: function() {
  return $.Size$(this.width, this.height);
},
 get$isValid: function() {
  return this.get$topLeft().get$isValid() === true && this.get$size().get$isValid() === true;
},
 get$right: function() {
  var t1 = this.left;
  var t2 = this.width;
  if (typeof t2 !== 'number')
    throw $.iae(t2);
  return t1 + t2;
},
 get$bottom: function() {
  var t1 = this.top;
  var t2 = this.height;
  if (typeof t2 !== 'number')
    throw $.iae(t2);
  return t1 + t2;
},
 contains$1: function(point) {
  var t1 = point.get$x();
  var t2 = this.left;
  if ($.geB(t1, t2)) {
    t1 = point.get$x();
    var t3 = this.width;
    if (typeof t3 !== 'number')
      throw $.iae(t3);
    if ($.leB(t1, t2 + t3)) {
      t1 = point.get$y();
      t2 = this.top;
      if ($.geB(t1, t2)) {
        t1 = point.get$y();
        t3 = this.height;
        if (typeof t3 !== 'number')
          throw $.iae(t3);
        t1 = $.leB(t1, t2 + t3);
      } else
        t1 = false;
    } else
      t1 = false;
  } else
    t1 = false;
  return t1;
},
 constrain$1: function(value) {
  $.requireArgumentNotNull(value, 'value');
  $.requireArgument(value.get$isValid(), 'value', null);
  return $.Coordinate$($.min(this.get$right(), $.max(this.left, value.get$x())), $.min(this.get$bottom(), $.max(this.top, value.get$y())));
},
 operator$eq$1: function(other) {
  return !(other == null) && $.eqB(other.get$left(), this.left) && $.eqB(other.get$top(), this.top) && $.eqB(other.get$width(), this.width) && $.eqB(other.get$height(), this.height);
},
 toString$0: function() {
  return 'Location: ' + $.S(this.get$topLeft()) + ', Size: ' + $.S(this.get$size());
},
 hashCode$0: function() {
  return $.Util_getHashCode([this.left, this.top, this.width, this.height]);
}
};

$$.AffineTransform = {"":
 ["_m00?", "_m10?", "_m01?", "_m11?", "_m02?", "_m12?"],
 "super": "Object",
 get$scaleX: function() {
  return this._m00;
},
 get$scaleY: function() {
  return this._m11;
},
 get$translateX: function() {
  return this._m02;
},
 get$translateY: function() {
  return this._m12;
},
 get$shearX: function() {
  return this._m01;
},
 get$shearY: function() {
  return this._m10;
},
 get$determinant: function() {
  return $.sub($.mul(this._m00, this._m11), $.mul(this._m01, this._m10));
},
 concatenate$1: function(tx) {
  var m0 = this._m00;
  var m1 = this._m01;
  this._m00 = $.add($.mul(tx.get$_m00(), m0), $.mul(tx.get$_m10(), m1));
  this._m01 = $.add($.mul(tx.get$_m01(), m0), $.mul(tx.get$_m11(), m1));
  this._m02 = $.add(this._m02, $.add($.mul(tx.get$_m02(), m0), $.mul(tx.get$_m12(), m1)));
  var m00 = this._m10;
  var m10 = this._m11;
  this._m10 = $.add($.mul(tx.get$_m00(), m00), $.mul(tx.get$_m10(), m10));
  this._m11 = $.add($.mul(tx.get$_m01(), m00), $.mul(tx.get$_m11(), m10));
  this._m12 = $.add(this._m12, $.add($.mul(tx.get$_m02(), m00), $.mul(tx.get$_m12(), m10)));
  return this;
},
 get$concatenate: function() { return new $.BoundClosure(this, 'concatenate$1'); },
 translate$2: function(dx, dy) {
  this._m02 = $.add(this._m02, $.add($.mul(dx, this._m00), $.mul(dy, this._m01)));
  this._m12 = $.add(this._m12, $.add($.mul(dx, this._m10), $.mul(dy, this._m11)));
  return this;
},
 setToScale$2: function(sx, sy) {
  return this.setTransform$6(sx, 0, 0, sy, 0, 0);
},
 setFromTransfrom$1: function(tx) {
  $.requireArgumentNotNull(tx, 'tx');
  return this.setTransform$6(tx.get$_m00(), tx.get$_m10(), tx.get$_m01(), tx.get$_m11(), tx.get$_m02(), tx.get$_m12());
},
 setTransform$6: function(m00, m10, m01, m11, m02, m12) {
  this._m00 = m00;
  this._m10 = m10;
  this._m01 = m01;
  this._m11 = m11;
  this._m02 = m02;
  this._m12 = m12;
  return this;
},
 transformCoordinate$1: function(point) {
  return $.Coordinate$($.add($.add($.mul(point.get$x(), this._m00), $.mul(point.get$y(), this._m01)), this._m02), $.add($.add($.mul(point.get$x(), this._m10), $.mul(point.get$y(), this._m11)), this._m12));
},
 createInverse$0: function() {
  var det = this.get$determinant();
  return $.AffineTransform$($.div(this._m11, det), $.div($.neg(this._m10), det), $.div($.neg(this._m01), det), $.div(this._m00, det), $.div($.sub($.mul(this._m01, this._m12), $.mul(this._m11, this._m02)), det), $.div($.sub($.mul(this._m10, this._m02), $.mul(this._m00, this._m12)), det));
},
 operator$eq$1: function(other) {
  return !(other == null) && $.eqB(this._m00, other.get$_m00()) && $.eqB(this._m01, other.get$_m01()) && $.eqB(this._m02, other.get$_m02()) && $.eqB(this._m10, other.get$_m10()) && $.eqB(this._m11, other.get$_m11()) && $.eqB(this._m12, other.get$_m12());
},
 toString$0: function() {
  return $.Strings_join($.map($.$$([this.get$translateX(), this.get$translateY(), this.get$scaleX(), this.get$scaleY(), this.get$shearX(), this.get$shearY()]), new $.AffineTransform_toString_anon()).toList$0(), ', ');
}
};

$$.RgbColor = {"":
 ["r?", "g?", "b?"],
 "super": "Object",
 toHex$0: function() {
  var buffer = $.StringBuffer_StringBuffer('#');
  $.forEach([this.r, this.g, this.b], new $.RgbColor_toHex_anon(buffer));
  return $.toString(buffer);
},
 hashCode$0: function() {
  return $.Util_getHashCode([this.r, this.g, this.b]);
},
 operator$eq$1: function(other) {
  return !(other == null) && $.eqB(other.get$r(), this.r) && $.eqB(other.get$g(), this.g) && $.eqB(other.get$b(), this.b);
},
 toString$0: function() {
  return '{RgbColor: ' + $.S(this.r) + ', ' + $.S(this.g) + ', ' + $.S(this.b) + '}';
}
};

$$.HslColor = {"":
 ["h?", "s?", "l?"],
 "super": "Object",
 toRgb$0: function() {
  var t1 = this.h;
  if (typeof t1 !== 'number')
    return this.toRgb$0$bailout(1, t1);
  var normH = t1 / 360;
  t1 = this.s;
  if (t1 === 0) {
    var b = this.l * 255;
    var g = b;
    var r = g;
  } else {
    var t2 = this.l;
    var temp2 = t2 < 0.5 ? t2 * (1 + t1) : t2 + t1 - t1 * t2;
    var temp1 = 2 * t2 - temp2;
    r = 255 * $.HslColor__hueToRgb(temp1, temp2, normH + 0.3333333333333333);
    g = 255 * $.HslColor__hueToRgb(temp1, temp2, normH);
    b = 255 * $.HslColor__hueToRgb(temp1, temp2, normH - 0.3333333333333333);
  }
  return $.RgbColor_RgbColor($.toInt($.round(r)), $.toInt($.round(g)), $.toInt($.round(b)));
},
 toRgb$0$bailout: function(state0, t1) {
  var normH = $.div(t1, 360);
  t1 = this.s;
  if (t1 === 0) {
    var b = this.l * 255;
    var g = b;
    var r = g;
  } else {
    var t2 = this.l;
    var temp2 = t2 < 0.5 ? t2 * (1 + t1) : t2 + t1 - t1 * t2;
    var temp1 = 2 * t2 - temp2;
    r = 255 * $.HslColor__hueToRgb(temp1, temp2, $.add(normH, 0.3333333333333333));
    g = 255 * $.HslColor__hueToRgb(temp1, temp2, normH);
    b = 255 * $.HslColor__hueToRgb(temp1, temp2, $.sub(normH, 0.3333333333333333));
  }
  return $.RgbColor_RgbColor($.toInt($.round(r)), $.toInt($.round(g)), $.toInt($.round(b)));
},
 hashCode$0: function() {
  return $.Util_getHashCode([this.h, this.s, this.l]);
},
 operator$eq$1: function(other) {
  return !(other == null) && $.eqB(other.get$h(), this.h) && $.eqB(other.get$s(), this.s) && $.eqB(other.get$l(), this.l);
},
 toString$0: function() {
  return '{HslColor: ' + $.S(this.h) + ', ' + $.S(this.s) + ', ' + $.S(this.l) + '}';
}
};

$$.TarjanCycleDetect = {"":
 ["_index", "_stack", "_scc", "_lib1_list"],
 "super": "Object",
 _executeTarjan$0: function() {
  for (var t1 = $.iterator($.ListImplementation_List$from(this._lib1_list.getSourceNodeSet$0())); t1.hasNext$0() === true;) {
    var t2 = t1.next$0();
    if ($.eqB(t2.get$index(), -1))
      this._tarjan$1(t2);
  }
  return this._scc;
},
 _tarjan$1: function(v) {
  v.set$index(this._index);
  v.set$lowlink(this._index);
  var t1 = this._index;
  if (typeof t1 !== 'number')
    return this._tarjan$1$bailout(1, v, t1, 0, 0, 0);
  this._index = t1 + 1;
  var t3 = this._stack;
  $.insertRange$3(t3, 0, 1, v);
  for (t1 = $.iterator(this._lib1_list.getAdjacent$1(v)); t1.hasNext$0() === true;) {
    var t2 = t1.next$0();
    var t4 = t2.get$index();
    if (typeof t4 !== 'number')
      return this._tarjan$1$bailout(2, v, t4, t3, t1, t2);
    if (t4 === -1) {
      this._tarjan$1(t2);
      v.set$lowlink($.min(v.get$lowlink(), t2.get$lowlink()));
    } else {
      t4 = $.indexOf$1(t3, t2);
      if (typeof t4 !== 'number')
        return this._tarjan$1$bailout(3, v, t4, t3, t1, t2);
      if (t4 >= 0)
        v.set$lowlink($.min(v.get$lowlink(), t2.get$index()));
    }
  }
  if ($.eqB(v.get$lowlink(), v.get$index())) {
    var component = $.ListImplementation_List(null);
    var n = null;
    do {
      if (0 >= t3.length)
        throw $.ioore(0);
      n = t3[0];
      $.removeRange(t3, 0, 1);
      component.push(n.get$value());
    } while (!$.eqB(n, v));
    this._scc.push(component);
  }
},
 _tarjan$1$bailout: function(state0, env0, env1, env2, env3, env4) {
  switch (state0) {
    case 1:
      var v = env0;
      t1 = env1;
      break;
    case 2:
      v = env0;
      t4 = env1;
      t3 = env2;
      t1 = env3;
      t2 = env4;
      break;
    case 3:
      v = env0;
      t4 = env1;
      t3 = env2;
      t1 = env3;
      t2 = env4;
      break;
  }
  switch (state0) {
    case 0:
      v.set$index(this._index);
      v.set$lowlink(this._index);
      var t1 = this._index;
    case 1:
      state0 = 0;
      this._index = $.add(t1, 1);
      var t3 = this._stack;
      $.insertRange$3(t3, 0, 1, v);
      t1 = $.iterator(this._lib1_list.getAdjacent$1(v));
    default:
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!(t1.hasNext$0() === true))
                break L0;
              var t2 = t1.next$0();
              var t4 = t2.get$index();
            case 2:
              state0 = 0;
            case 3:
              if (state0 === 0 && $.eqB(t4, -1)) {
                this._tarjan$1(t2);
                v.set$lowlink($.min(v.get$lowlink(), t2.get$lowlink()));
              } else
                switch (state0) {
                  case 0:
                    t4 = $.indexOf$1(t3, t2);
                  case 3:
                    state0 = 0;
                    if ($.geB(t4, 0))
                      v.set$lowlink($.min(v.get$lowlink(), t2.get$index()));
                }
          }
      if ($.eqB(v.get$lowlink(), v.get$index())) {
        var component = $.ListImplementation_List(null);
        var n = null;
        do {
          if (0 >= t3.length)
            throw $.ioore(0);
          n = t3[0];
          $.removeRange(t3, 0, 1);
          component.push(n.get$value());
        } while (!$.eqB(n, v));
        this._scc.push(component);
      }
  }
}
};

$$._TarjanNode = {"":
 ["value?", "index=", "lowlink="],
 "super": "Object",
 hashCode$0: function() {
  return $.hashCode(this.value);
},
 operator$eq$1: function(other) {
  return $.eq(other.get$value(), this.value);
}
};

$$._TarjanList = {"":
 ["_nodes"],
 "super": "Object",
 getSourceNodeSet$0: function() {
  return this._nodes.getKeys$0();
},
 getAdjacent$1: function(v) {
  var nodes = this._nodes.operator$index$1(v);
  if (nodes == null)
    return [];
  else
    return nodes;
}
};

$$.Attachable = {"":
 ["name?"],
 "super": "Object"
};

$$.AttachableObject = {"":
 [],
 "super": "DisposableImpl",
 _set$2: function(key, value) {
  this.validateNotDisposed$0();
  this._propertyValues.operator$indexSet$2(key, value);
  this._fireChange$1(key);
},
 get$_set: function() { return new $.BoundClosure1(this, '_set$2'); },
 _isSet$1: function(key) {
  this.validateNotDisposed$0();
  return this._propertyValues.containsKey$1(key);
},
 _lib1_remove$1: function(key) {
  this.validateNotDisposed$0();
  if (this._isSet$1(key) === true) {
    this._propertyValues.remove$1(key);
    this._fireChange$1(key);
  }
},
 _getValueOrUndefined$3: function(key, obj, ifAbsent) {
  this.validateNotDisposed$0();
  if (this._isSet$1(key) === true)
    return this._propertyValues.operator$index$1(key);
  else if (!(ifAbsent == null)) {
    var value = ifAbsent.call$1(obj);
    this._set$2(key, value);
    return value;
  } else
    return $.CTC26;
},
 _fireChange$1: function(key) {
  this.validateNotDisposed$0();
  var handle = this._eventHandlers.operator$index$1(key);
  if (!(handle == null))
    handle.fireEvent$1(key);
}
};

$$.Property = {"":
 ["defaultValue", "name"],
 "super": "Attachable",
 get$2: function(obj, ifAbsent) {
  var coreValue = this.getCore$2(obj, ifAbsent);
  if (!$.identical(coreValue, $.CTC26))
    return coreValue;
  else
    return this.defaultValue;
},
 get$1: function(obj) {
  return this.get$2(obj,null)
},
 getCore$2: function(obj, ifAbsent) {
  return obj._getValueOrUndefined$3(this, obj, ifAbsent);
},
 set$2: function(obj, value) {
  obj._set$2(this, value);
},
 clear$1: function(obj) {
  return obj._lib1_remove$1(this);
},
 toString$0: function() {
  return 'Property \'' + this.name + '\'';
}
};

$$._UndefinedValue = {"":
 [],
 "super": "Object"
};

$$.PElement = {"":
 [],
 "super": "AttachableObject",
 clip$0: function() { return this.clip.call$0(); },
 get$width: function() {
  return this._width;
},
 set$width: function(value) {
  this._width = value;
  this.invalidateDraw$0();
},
 get$height: function() {
  return this._height;
},
 set$height: function(value) {
  this._height = value;
  this.invalidateDraw$0();
},
 get$size: function() {
  return $.Size$(this._width, this._height);
},
 get$visualChildCount: function() {
  return 0;
},
 getTransform$0: function() {
  var tx = $.AffineTransform$(1, 0, 0, 1, 0, 0);
  $.forEach(this._transforms, tx.get$concatenate());
  return tx;
},
 update$0: function() {
  this._updatedEventHandle.fireEvent$1($.CTC25);
},
 drawCore$1: function(ctx) {
  if (this.cacheEnabled)
    this._drawCached$1(ctx);
  else
    this._drawNormal$1(ctx);
},
 addTransform$0: function() {
  this.validateNotDisposed$0();
  var tx = $.AffineTransform$(1, 0, 0, 1, 0, 0);
  this._transforms.push(tx);
  return tx;
},
 invalidateDraw$0: function() {
  this.validateNotDisposed$0();
  if (!(this._lastDrawSize == null)) {
    this._lastDrawSize = null;
    this._invalidateParent$0();
  }
},
 getVisualChild$1: function(index) {
  throw $.$$throw('no children for this type');
},
 registerParent$1: function(parent$) {
  this._lib4_parent = parent$;
},
 _stageDraw$1: function(ctx) {
  this.update$0();
  var dirty = this._lastDrawSize == null;
  this.drawCore$1(ctx);
  return dirty;
},
 _drawCached$1: function(ctx) {
  if (this._cacheCanvas == null)
    this._cacheCanvas = $.CanvasElement_CanvasElement($, $);
  var t1 = this._lastDrawSize;
  var intLastDrawSize = t1 == null ? null : $.Size$($.toInt(t1.get$width()), $.toInt(this._lastDrawSize.get$height()));
  if (!$.eqB($.CanvasUtil_getCanvasSize(this._cacheCanvas), intLastDrawSize)) {
    $.indexSet(this._cacheCanvas.get$attributes(), 'width', this.get$width());
    $.indexSet(this._cacheCanvas.get$attributes(), 'height', this.get$height());
    this._drawInternal$1(this._cacheCanvas.get$context2d());
  }
  ctx.save$0();
  $.CanvasUtil_transform(ctx, this.getTransform$0());
  ctx.drawImage$3(this._cacheCanvas, 0, 0);
  ctx.restore$0();
},
 _drawNormal$1: function(ctx) {
  var tx = this.getTransform$0();
  if (this._isClipped$2(tx, ctx) === true)
    return;
  ctx.save$0();
  $.CanvasUtil_transform(ctx, tx);
  if (this.clip) {
    ctx.beginPath$0();
    ctx.rect$4(0, 0, this.get$width(), this.get$height());
    ctx.clip$0();
  }
  this._drawInternal$1(ctx);
  ctx.restore$0();
},
 _drawInternal$1: function(ctx) {
  var t1 = this._alpha;
  if (!(t1 == null))
    ctx.set$globalAlpha(t1);
  this.drawOverride$1(ctx);
  this._lastDrawSize = this.get$size();
},
 _isClipped$2: function(tx, ctx) {
  if (this.clip)
    ;
  return false;
},
 _invalidateParent$0: function() {
  this._invalidatedEventHandle.fireEvent$1($.CTC25);
  this._lib4_parent.childInvalidated$1(this);
}
};

$$.ElementParentImpl = {"":
 [],
 "super": "PElement",
 childInvalidated$1: function(child) {
  this.invalidateDraw$0();
},
 update$0: function() {
  this._forEach$1(new $.ElementParentImpl_update_anon());
  $.PElement.prototype.update$0.call(this);
},
 drawOverride$1: function(ctx) {
  this._forEach$1(new $.ElementParentImpl_drawOverride_anon(ctx));
},
 _forEach$1: function(f) {
  var length$ = this.get$visualChildCount();
  if (typeof length$ !== 'number')
    return this._forEach$1$bailout(1, f, length$);
  for (var i = 0; i < length$; ++i)
    f.call$1(this.getVisualChild$1(i));
},
 _forEach$1$bailout: function(state0, f, length$) {
  for (var i = 0; $.ltB(i, length$); ++i)
    f.call$1(this.getVisualChild$1(i));
}
};

$$.Stage = {"":
 ["_invalidatedEventHandle", "_lib4_canvas", "_lib4_element?", "_ctx", "_propertyValues", "_eventHandlers", "_disposed"],
 "super": "AttachableObject",
 get$invalidated: function() {
  return this._invalidatedEventHandle;
},
 get$rootElement: function() {
  return this._lib4_element;
},
 draw$0: function() {
  this.validateNotDisposed$0();
  var t1 = this._ctx;
  var t2 = t1 == null;
  var t3 = this._lib4_canvas;
  if (t2)
    this._ctx = t3.get$context2d();
  else
    t1.clearRect$4(0, 0, t3.get$width(), t3.get$height());
  return this._lib4_element._stageDraw$1(this._ctx);
},
 childInvalidated$1: function(child) {
  this.validateNotDisposed$0();
  this._invalidatedEventHandle.fireEvent$1($.CTC25);
},
 Stage$2: function(_canvas, _element) {
  this._lib4_element.registerParent$1(this);
}
};

$$.Dragger = {"":
 ["_element?", "_dragDeltaHandle", "_dragStartHandle", "_clientLoc"],
 "super": "Object",
 get$dragDelta: function() {
  return this._dragDeltaHandle;
},
 get$dragStart: function() {
  return this._dragStartHandle;
},
 get$isDragging: function() {
  return !(this._clientLoc == null);
},
 _onMouseDown$1: function(event$) {
  var args = $.CancelableEventArgs$();
  this._dragStartHandle.fireEvent$1(args);
  if (args.get$isCanceled() !== true) {
    event$.preventDefault$0();
    this._clientLoc = $.Coordinate$(event$.get$clientX(), event$.get$clientY());
  }
},
 get$_onMouseDown: function() { return new $.BoundClosure(this, '_onMouseDown$1'); },
 _handleMove$1: function(event$) {
  if (this.get$isDragging() === true) {
    var newLoc = $.Coordinate$(event$.get$clientX(), event$.get$clientY());
    var delta = newLoc.operator$sub$1(this._clientLoc);
    this._dragDeltaHandle.fireEvent$1(delta);
    this._clientLoc = newLoc;
  }
},
 get$_handleMove: function() { return new $.BoundClosure(this, '_handleMove$1'); },
 _endDrag$1: function(event$) {
  if (this.get$isDragging() === true)
    this._clientLoc = null;
},
 get$_endDrag: function() { return new $.BoundClosure(this, '_endDrag$1'); },
 Dragger$1: function(_element) {
  $.add$1(this._element.get$on().get$mouseDown(), this.get$_onMouseDown());
  $.add$1($.window().get$on().get$mouseMove(), this.get$_handleMove());
  $.add$1($.window().get$on().get$mouseUp(), this.get$_endDrag());
  $.add$1($.window().get$on().get$blur(), this.get$_endDrag());
}
};

$$.HtmlView = {"":
 [],
 "super": "Object",
 get$node: function() {
  return this._node;
},
 markDirty$0: function() {
  this._dirty = true;
},
 draw$0: function() {
  if (this._dirty) {
    this.updateElement$0();
    this._dirty = false;
  }
},
 HtmlView$1: function(_node) {
  $.requireArgumentNotNull(this._node, 'node');
  this._dirty = true;
}
};

$$.ElectionPlace = {"":
 ["place?", "_items"],
 "super": "ReadOnlyCollection",
 toString$0: function() {
  return 'Place: ' + $.S(this.place) + '; ' + $.S($.Enumerable.prototype.toString$0.call(this));
},
 ElectionPlace$2: function(place, candidates) {
}
};

$$.Election = {"":
 [],
 "super": "Object",
 get$candidates: function() {
},
 get$ballots: function() {
},
 get$places: function() {
}
};

$$.Ballot = {"":
 ["voter?"],
 "super": "Object",
 operator$eq$1: function(other) {
  return !(other == null) && $.eqB(other.get$voter(), this.voter);
},
 hashCode$0: function() {
  return $.hashCode(this.voter);
}
};

$$.RankedBallot = {"":
 ["rank?"],
 "super": "PluralityBallot",
 toString$0: function() {
  return '{RankedBallot for \'' + $.S(this.voter) + '\', ranked ' + $.S($.get$length(this.rank)) + ' candidates}';
}
};

$$.PluralityBallot = {"":
 ["choice?"],
 "super": "Ballot"
};

$$.PluralityElection = {"":
 ["ballots?", "_ballotGroup", "places?"],
 "super": "Election",
 get$candidates: function() {
  return this._ballotGroup.getKeys$0();
}
};

$$.PluralityElectionPlace = {"":
 ["voteCount?", "place", "_items"],
 "super": "ElectionPlace",
 toString$0: function() {
  return 'Votes: ' + $.S(this.voteCount) + '; ' + $.S($.ElectionPlace.prototype.toString$0.call(this));
},
 PluralityElectionPlace$3: function(place, candidates, voteCount) {
}
};

$$.CondorcetElection = {"":
 ["_pairs", "_profiles", "ballots?", "places?"],
 "super": "Election",
 get$candidates: function() {
  return this._profiles.getKeys$0();
},
 getPair$2: function(c1, c2) {
  var filter = $.filter(this._pairs, new $.CondorcetElection_getPair_anon(c1, c2));
  if ($.isEmpty(filter) === true)
    return;
  else
    return $.iterator(filter).next$0().flip$2(c1, c2);
}
};

$$.CondorcetPair = {"":
 ["ballots?", "firstOverSecond?", "secondOverFirst?", "item1", "item2"],
 "super": "Tuple",
 get$winner: function() {
  var t1 = this.firstOverSecond;
  var t2 = this.secondOverFirst;
  if ($.gtB(t1, t2))
    return this.item1;
  else if ($.gtB(t2, t1))
    return this.item2;
  else
    return;
},
 get$isTie: function() {
  return $.eq(this.firstOverSecond, this.secondOverFirst);
},
 matches$2: function(can1, can2) {
  $.requireArgumentNotNull(can1, 'can1');
  $.requireArgumentNotNull(can2, 'can2');
  $.requireArgument(!$.eqB(can1, can2), 'can1 and can2 must be different', null);
  if ($.gtB($.compareTo(can1, can2), 0)) {
    var t0 = can2;
    can2 = can1;
    can1 = t0;
  }
  return $.eqB(this.item1, can1) && $.eqB(this.item2, can2);
},
 flip$2: function(can1, can2) {
  var t1 = this.item1;
  var t2 = this.item2;
  if ($.gtB($.compareTo(t1, t2), 0))
    throw $.$$throw('already flipped!');
  $.requireArgumentNotNull(can1, 'can1');
  $.requireArgumentNotNull(can2, 'can2');
  $.requireArgument(!$.eqB(can1, can2), 'can1 and can2 must be different', null);
  if ($.gtB($.compareTo(can1, can2), 0)) {
    var t0 = can2;
    can2 = can1;
    can1 = t0;
    var flipped = true;
  } else
    flipped = false;
  $.requireArgument($.eq(can1, t1), 'can1', null);
  $.requireArgument($.eq(can2, t2), 'can1', null);
  if (flipped)
    return $.CondorcetPair$_internal(can2, can1, this.ballots, this.secondOverFirst, this.firstOverSecond);
  else
    return this;
}
};

$$.CondorcetCandidateProfile = {"":
 ["candidate?", "lostTo", "beat", "tied"],
 "super": "Object",
 hashCode$0: function() {
  return $.hashCode(this.candidate);
},
 toString$0: function() {
  return '[ ' + $.S(this.candidate) + ': Beat: ' + $.S($.get$length(this.beat)) + ', Tied: ' + $.S($.get$length(this.tied)) + ', Lost to: ' + $.S($.get$length(this.lostTo));
}
};

$$.IrvElection = {"":
 ["candidates?", "ballots?", "rounds?"],
 "super": "Election"
};

$$.IrvRound = {"":
 ["places?", "eliminations?"],
 "super": "Object",
 get$isFinal: function() {
  return $.eq($.get$length(this.eliminations), 0);
},
 get$eliminatedCandidates: function() {
  return $.map(this.eliminations, new $.IrvRound_eliminatedCandidates_anon());
},
 get$candidates: function() {
  return this.places.selectMany$1(new $.IrvRound_candidates_anon());
}
};

$$.IrvElimination = {"":
 ["candidate?", "_transfers", "exhausted"],
 "super": "Object",
 getTransferCount$1: function(key) {
  var list = this._transfers.operator$index$1(key);
  if (list == null)
    return 0;
  else
    return $.get$length(list);
},
 IrvElimination$3: function(candidate, _transfers, exhausted) {
}
};

$$.MapPlayer = {"":
 ["_lib3_id?", "name?", "_lib3_location="],
 "super": "Object",
 get$location: function() {
  return this._lib3_location;
},
 set$location: function(value) {
  $.requireArgumentNotNull(value, 'value');
  this._lib3_location = value;
},
 get$id: function() {
  return this._lib3_id.get$id();
},
 compareTo$1: function(other) {
  return $.compareTo(this._lib3_id, other.get$_lib3_id());
},
 hashCode$0: function() {
  return $.hashCode(this._lib3_id);
},
 operator$eq$1: function(other) {
  return !(other == null) && $.eqB(other.get$_lib3_id(), this._lib3_id);
},
 toString$0: function() {
  var t1 = this.name;
  if (t1 == null)
    return 'MapPlayer at [' + $.S($.toStringAsFixed(this._lib3_location.get$x(), 1)) + ', ' + $.S($.toStringAsFixed(this._lib3_location.get$y(), 1)) + ']';
  else
    return t1;
}
};

$$.DistanceElection = {"":
 ["candidates?", "ballots?", "places?"],
 "super": "Election"
};

$$.DistanceElectionPlace = {"":
 ["avgDistance?", "avgDistanceSquared?", "place", "_items"],
 "super": "ElectionPlace"
};

$$.DistanceBallot = {"":
 ["_distances", "rank", "choice", "voter"],
 "super": "RankedBallot",
 getDistance$1: function(candidate) {
  var t1 = this._distances;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.getDistance$1$bailout(1, t1, candidate);
  if (candidate !== (candidate | 0))
    throw $.iae(candidate);
  if (candidate < 0 || candidate >= t1.length)
    throw $.ioore(candidate);
  return t1[candidate];
},
 getDistance$1$bailout: function(state0, t1, candidate) {
  return $.index(t1, candidate);
}
};

$$.LocationData = {"":
 ["candidates?", "voters?"],
 "super": "Object",
 cloneAndRemove$1: function(mp) {
  $.requireArgumentNotNull(mp, 'mp');
  var newCans = $.filter(this.candidates, new $.LocationData_cloneAndRemove_anon(mp)).toReadOnlyCollection$0();
  return $.LocationData$(this.voters, newCans);
},
 cloneAndAddCandidate$0: function() {
  var newCans = this.candidates.toList$0();
  if (typeof newCans !== 'string' && (typeof newCans !== 'object' || newCans === null || newCans.constructor !== Array && !newCans.is$JavaScriptIndexingBehavior()))
    return this.cloneAndAddCandidate$0$bailout(1, newCans);
  for (var i = 0; i < newCans.length; ++i)
    if ($.gtB($.sub($.charCodeAt(newCans[i].get$name(), 0), 65), i))
      break;
  var newName = $.LocationData_getCandidateName(i);
  $.insertRange$3(newCans, i, 1, $.MapPlayer$($.Vector$($.rnd().nextDouble$0(), $.rnd().nextDouble$0()).scale$1(10), newName));
  return $.LocationData$(this.voters, $.ReadOnlyCollection$(newCans));
},
 cloneAndAddCandidate$0$bailout: function(state0, newCans) {
  for (var i = 0; $.ltB(i, $.get$length(newCans)); ++i)
    if ($.gtB($.sub($.charCodeAt($.index(newCans, i).get$name(), 0), 65), i))
      break;
  var newName = $.LocationData_getCandidateName(i);
  $.insertRange$3(newCans, i, 1, $.MapPlayer$($.Vector$($.rnd().nextDouble$0(), $.rnd().nextDouble$0()).scale$1(10), newName));
  return $.LocationData$(this.voters, $.ReadOnlyCollection$(newCans));
},
 LocationData$2: function(voters, candidates) {
}
};

$$.RootMapElement = {"":
 ["_voterMap", "_candidateMap", "_tx?", "_candidatesMovedHandle", "_averageCloseness", "_bounds", "_radius=", "_transforms", "cacheEnabled", "_updatedEventHandle", "_invalidatedEventHandle", "_cacheCanvas", "_width", "_height", "_alpha", "_lastDrawSize", "clip", "_lib4_parent", "_propertyValues", "_eventHandlers", "_disposed"],
 "super": "ElementParentImpl",
 get$candidatesMoved: function() {
  return this._candidatesMovedHandle;
},
 candidatesMoved$0: function() { return this.get$candidatesMoved().call$0(); },
 get$visualChildCount: function() {
  return 2;
},
 getVisualChild$1: function(index) {
  switch (index) {
    case 0:
      return this._voterMap;
    case 1:
      return this._candidateMap;
    default:
      throw $.$$throw('bad index, foo!');
  }
},
 set$locationData: function(data) {
  this.set$voters(data.get$voters());
  this.set$candidates(data.get$candidates());
  this.invalidateDraw$0();
},
 get$voters: function() {
  return this._voterMap.get$players();
},
 set$voterHexMap: function(value) {
  this._voterMap.set$playerHexMap(value);
},
 set$voters: function(value) {
  $.requireArgumentNotNull(value, 'value');
  var vals = $.Tuple$(1, $.Box$(0, 0, 10, 10));
  this._averageCloseness = vals.item1;
  this._bounds = vals.item2;
  this._radius = null;
  this._voterMap.set$players(value);
},
 set$candidates: function(value) {
  $.requireArgumentNotNull(value, 'value');
  this._candidateMap.set$players(value);
},
 set$showOnlyPlayers: function(value) {
  this._candidateMap.set$showOnlyPlayers(value);
},
 dragCandidate$2: function(candidate, delta) {
  var can = $.$$(this._candidateMap.get$players()).single$1(new $.RootMapElement_dragCandidate_anon(candidate));
  var t1 = this._tx;
  var newCanLocPix = $.add(t1.transformCoordinate$1(candidate.get$location()), delta);
  can.set$location($.CTC28.constrain$1(t1.createInverse$0().transformCoordinate$1(newCanLocPix)));
  this._candidatesMovedHandle.fireEvent$1($.CTC25);
},
 update$0: function() {
  var t1 = this._bounds;
  if (!(t1 == null) && this._radius == null) {
    var dataScale = $.Size$($.add(t1.get$width(), this._averageCloseness), $.add(this._bounds.get$height(), this._averageCloseness));
    t1 = $.gtB(dataScale.get$aspectRatio(), this.get$size().get$aspectRatio());
    var t2 = dataScale.width;
    var t3 = dataScale.height;
    if (t1) {
      var scale = $.div(this.get$width(), t2);
      var offsetY = $.div($.sub($.div(this.get$height(), scale), t3), 2);
      var offsetX = 0;
    } else {
      scale = $.div(this.get$height(), t3);
      offsetX = $.div($.sub($.div(this.get$width(), scale), t2), 2);
      offsetY = 0;
    }
    t1 = this._tx;
    t1.setToScale$2(scale, scale);
    t1.translate$2($.add($.add(this._bounds.get$left(), $.div(this._averageCloseness, 2)), offsetX), $.add($.add(this._bounds.get$top(), $.div(this._averageCloseness, 2)), offsetY));
    this._radius = $.mul(this._averageCloseness, 0.3);
  }
  $.forEach([this._voterMap, this._candidateMap], new $.RootMapElement_update_anon(this));
  $.ElementParentImpl.prototype.update$0.call(this);
},
 RootMapElement$2: function(w, h) {
  this._voterMap.registerParent$1(this);
  this._candidateMap.registerParent$1(this);
}
};

$$.VoterMapElement = {"":
 ["_players", "_tx?", "_radius=", "_lib7_map", "_transforms", "cacheEnabled", "_updatedEventHandle", "_invalidatedEventHandle", "_cacheCanvas", "_width", "_height", "_alpha", "_lastDrawSize", "clip", "_lib4_parent", "_propertyValues", "_eventHandlers", "_disposed"],
 "super": "PElement",
 setTransform$1: function(value) {
  $.requireArgumentNotNull(value, 'value');
  this._tx.setFromTransfrom$1(value);
  this.invalidateDraw$0();
},
 get$players: function() {
  return this._players;
},
 set$players: function(value) {
  $.requireArgumentNotNull(value, 'value');
  var t1 = this._players;
  $.clear(t1);
  $.addAll(t1, value);
  this.invalidateDraw$0();
},
 set$playerHexMap: function(value) {
  this._lib7_map = value;
  this.invalidateDraw$0();
},
 drawOverride$1: function(ctx) {
  for (var t1 = $.iterator(this._players); t1.hasNext$0() === true;)
    this._drawPlayer$2(ctx, t1.next$0());
},
 _drawPlayer$2: function(ctx, player) {
  var t1 = this._lib7_map;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this._drawPlayer$2$bailout(1, ctx, player, t1, 0, 0);
  if (player !== (player | 0))
    throw $.iae(player);
  if (player < 0 || player >= t1.length)
    throw $.ioore(player);
  var hex = t1[player];
  if (typeof hex !== 'string')
    return this._drawPlayer$2$bailout(2, ctx, player, hex, 0, 0);
  ctx.set$fillStyle(hex);
  t1 = this._tx;
  var txLoc = t1.transformCoordinate$1(player.get$location());
  var t2 = txLoc.get$x();
  var t3 = txLoc.get$y();
  var t4 = this._radius;
  if (typeof t4 !== 'number')
    return this._drawPlayer$2$bailout(3, ctx, t1, t4, t2, t3);
  t1 = t1.get$scaleX();
  if (typeof t1 !== 'number')
    return this._drawPlayer$2$bailout(4, ctx, t1, t4, t2, t3);
  $.CanvasUtil_centeredCircle(ctx, t2, t3, t4 * t1);
  ctx.fill$0();
},
 _drawPlayer$2$bailout: function(state0, env0, env1, env2, env3, env4) {
  switch (state0) {
    case 1:
      var ctx = env0;
      var player = env1;
      t1 = env2;
      break;
    case 2:
      ctx = env0;
      player = env1;
      hex = env2;
      break;
    case 3:
      ctx = env0;
      t1 = env1;
      t4 = env2;
      t2 = env3;
      t3 = env4;
      break;
    case 4:
      ctx = env0;
      t1 = env1;
      t4 = env2;
      t2 = env3;
      t3 = env4;
      break;
  }
  switch (state0) {
    case 0:
      var t1 = this._lib7_map;
    case 1:
      state0 = 0;
      var hex = $.index(t1, player);
    case 2:
      state0 = 0;
      ctx.set$fillStyle(hex == null ? '#999999' : hex);
      t1 = this._tx;
      var txLoc = t1.transformCoordinate$1(player.get$location());
      var t2 = txLoc.get$x();
      var t3 = txLoc.get$y();
      var t4 = this._radius;
    case 3:
      state0 = 0;
      t1 = t1.get$scaleX();
    case 4:
      state0 = 0;
      $.CanvasUtil_centeredCircle(ctx, t2, t3, $.mul(t4, t1));
      ctx.fill$0();
  }
},
 VoterMapElement$2: function(w, h) {
  this._radius = 0.3;
}
};

$$.CandidateMapElement = {"":
 ["_players", "_tx?", "_radius=", "_lib7_elements", "_showOnlyPlayers", "_transforms", "cacheEnabled", "_updatedEventHandle", "_invalidatedEventHandle", "_cacheCanvas", "_width", "_height", "_alpha", "_lastDrawSize", "clip", "_lib4_parent", "_propertyValues", "_eventHandlers", "_disposed"],
 "super": "ElementParentImpl",
 get$visualChildCount: function() {
  this._ensureElements$0();
  return $.get$length(this._lib7_elements);
},
 getVisualChild$1: function(index) {
  this._ensureElements$0();
  var t1 = this._lib7_elements;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.getVisualChild$1$bailout(1, index, t1);
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  return t1[index];
},
 getVisualChild$1$bailout: function(state0, index, t1) {
  return $.index(t1, index);
},
 setTransform$1: function(value) {
  $.requireArgumentNotNull(value, 'value');
  this._tx.setFromTransfrom$1(value);
  this.invalidateDraw$0();
},
 get$players: function() {
  return this._players;
},
 set$players: function(value) {
  $.requireArgumentNotNull(value, 'value');
  var t1 = this._players;
  $.clear(t1);
  $.addAll(t1, value);
  this._lib7_elements = null;
  this.invalidateDraw$0();
},
 set$showOnlyPlayers: function(value) {
  if (value == null)
    this._showOnlyPlayers = null;
  else
    this._showOnlyPlayers = $.$$(value).toReadOnlyCollection$0();
  if (this._lib7_elements == null)
    this.invalidateDraw$0();
  else
    this._updateCandidateElements$0();
},
 _ensureElements$0: function() {
  if (this._lib7_elements == null) {
    this._lib7_elements = $.ListImplementation_List(null);
    for (var t1 = $.iterator(this._players), t2 = this._tx; t1.hasNext$0() === true;) {
      var t3 = t1.next$0();
      var rgb = $.HslColor_HslColor($.LocationData_getHue(t3), 0.5, 0.6).toRgb$0();
      var ce = $.CandidateElement$($.mul(this._radius, 4), $.mul(this._radius, 4), rgb.toHex$0(), t3);
      ce.registerParent$1(this);
      var tempTx = ce.addTransform$0();
      tempTx.concatenate$1(t2);
      var t4 = t3.get$location().get$x();
      var t5 = this._radius;
      if (typeof t5 !== 'number')
        throw $.iae(t5);
      t4 = $.sub(t4, 2 * t5);
      var t6 = t3.get$location().get$y();
      var t7 = this._radius;
      if (typeof t7 !== 'number')
        throw $.iae(t7);
      tempTx.translate$2(t4, $.sub(t6, 2 * t7));
      $.add$1(this._lib7_elements, ce);
    }
    this._updateCandidateElements$0();
  }
},
 _updateCandidateElements$0: function() {
  for (var t1 = $.iterator(this._lib7_elements); t1.hasNext$0() === true;) {
    var t2 = t1.next$0();
    var t3 = this._showOnlyPlayers;
    t2.set$hidden(!(t3 == null) && $.ltB($.indexOf$1(t3, t2.get$player()), 0));
  }
}
};

$$.CandidateElement = {"":
 ["_color", "player?", "_text", "_tx?", "_hidden", "_transforms", "cacheEnabled", "_updatedEventHandle", "_invalidatedEventHandle", "_cacheCanvas", "_width", "_height", "_alpha", "_lastDrawSize", "clip", "_lib4_parent", "_propertyValues", "_eventHandlers", "_disposed"],
 "super": "PElement",
 get$hidden: function() {
  return this._hidden;
},
 set$hidden: function(value) {
  if (!$.eqB(value, this._hidden)) {
    this._hidden = value;
    this.invalidateDraw$0();
  }
},
 drawOverride$1: function(ctx) {
  if (this.get$hidden() === true) {
    ctx.set$globalAlpha(0.3);
    ctx.set$fillStyle('#999999');
  } else {
    var shadowDistance = $.Mouse_isMouseDirectlyOver(this) === true ? 4 : 2;
    ctx.set$shadowColor('black');
    ctx.set$shadowBlur(6);
    ctx.set$shadowOffsetX(shadowDistance);
    ctx.set$shadowOffsetY(shadowDistance);
    ctx.set$fillStyle(this._color);
  }
  $.CanvasUtil_ellipse(ctx, 0, 0, this.get$width(), this.get$height());
  ctx.fill$0();
  ctx.set$shadowColor('transparent');
  ctx.set$font('1px Helvetica');
  ctx.set$textAlign('center');
  ctx.set$textBaseline('baseline');
  ctx.set$fillStyle('black');
  ctx.fillText$3(this._text, $.mul(this.get$width(), 0.5), $.mul(this.get$height(), 0.8));
},
 CandidateElement$4: function(w, h, _color, p) {
  this._tx = this.addTransform$0();
},
 is$CandidateElement: true
};

$$.CandidateManagerView = {"":
 ["_requestRemoveCandidateHandle", "_requestNewCandidateHandle", "_candidates", "_node", "_dirty"],
 "super": "HtmlView",
 set$candidates: function(value) {
  this._candidates = value;
  this.markDirty$0();
},
 get$candidateRemoveRequest: function() {
  return this._requestRemoveCandidateHandle;
},
 get$newCandidateRequest: function() {
  return this._requestNewCandidateHandle;
},
 updateElement$0: function() {
  $.clear(this.get$node().get$elements());
  var table = $.TableElement_TableElement();
  var row = table.insertRow$1(-1);
  var cell = row.insertCell$1(-1);
  cell.set$colSpan(2);
  var addButton = $.ButtonElement_ButtonElement();
  addButton.set$text('Add Candidate');
  if ($.ltB($.get$length(this._candidates), 26))
    $.add$1(addButton.get$on().get$click(), this.get$_requestNewCandidate());
  else
    addButton.set$disabled(true);
  $.add$1(cell.get$elements(), addButton);
  var t1 = this._candidates;
  if (!(t1 == null))
    for (t1 = $.iterator(t1); t1.hasNext$0() === true;) {
      var t2 = t1.next$0();
      row = table.insertRow$1(-1);
      var hue = $.LocationData_getHue(t2);
      if (!(hue == null)) {
        var t3 = $.HslColor_HslColor(hue, 1, 0.75).toRgb$0().toHex$0();
        row.get$style().set$background(t3);
      }
      cell = row.insertCell$1(-1);
      $.add$1(cell.get$classes(), 'candidate-cell');
      cell.set$innerHTML($.toString(t2));
      cell = row.insertCell$1(-1);
      var deleteButton = $.ButtonElement_ButtonElement();
      deleteButton.set$text('Delete');
      $.indexSet(deleteButton.get$dataAttributes(), 'candidate-id', $.toString(t2.get$id()));
      if ($.gtB($.get$length(this._candidates), 1))
        $.add$1(deleteButton.get$on().get$click(), this.get$_deleteClick());
      else
        deleteButton.set$disabled(true);
      $.add$1(cell.get$elements(), deleteButton);
    }
  $.add$1(this.get$node().get$elements(), table);
},
 _requestNewCandidate$1: function(args) {
  var source = args.get$toElement();
  this._requestNewCandidateHandle.fireEvent$1($.CTC25);
  source.set$disabled(true);
},
 get$_requestNewCandidate: function() { return new $.BoundClosure(this, '_requestNewCandidate$1'); },
 _deleteClick$1: function(args) {
  var source = args.get$toElement();
  this._removeCandidateWithId$1($.parseInt($.index(source.get$dataAttributes(), 'candidate-id')));
  source.set$disabled(true);
},
 get$_deleteClick: function() { return new $.BoundClosure(this, '_deleteClick$1'); },
 _removeCandidateWithId$1: function(id) {
  var candidate = this._candidates.single$1(new $.CandidateManagerView__removeCandidateWithId_anon(id));
  this._requestRemoveCandidateHandle.fireEvent$1(candidate);
}
};

$$.PluralityView = {"":
 ["_election", "_node", "_dirty"],
 "super": "HtmlView",
 set$election: function(election) {
  this._election = election;
  this.markDirty$0();
},
 updateElement$0: function() {
  $.clear(this.get$node().get$elements());
  var table = $.TableElement_TableElement();
  var row = table.insertRow$1(-1);
  var cell = $.Element_Element$tag('th');
  $.add$1(row.get$elements(), cell);
  cell.set$innerHTML('Place');
  cell = $.Element_Element$tag('th');
  $.add$1(row.get$elements(), cell);
  cell.set$innerHTML('Candidate');
  cell = $.Element_Element$tag('th');
  $.add$1(row.get$elements(), cell);
  $.add$1(row.get$classes(), 'row-odd');
  cell.set$innerHTML('Votes');
  var t1 = this._election;
  if (!(t1 == null))
    for (var t2 = $.iterator(t1.get$places()), evenCandidateRow = true, evenPlaceRow = true; t2.hasNext$0() === true;) {
      t1 = t2.next$0();
      for (var t3 = $.iterator(t1), first = true; t3.hasNext$0() === true;) {
        var t4 = t3.next$0();
        row = table.insertRow$1(-1);
        var t5 = row.get$classes();
        $.add$1(t5, evenPlaceRow ? 'row-even' : 'row-odd');
        if (first) {
          cell = $.Element_Element$tag('th');
          $.add$1(row.get$elements(), cell);
          $.add$1(cell.get$classes(), 'place-number');
          cell.set$rowSpan($.get$length(t1));
          cell.set$innerHTML($.toString(t1.get$place()));
        }
        cell = row.insertCell$1(-1);
        $.add$1(cell.get$classes(), 'candidate-cell');
        var hue = $.LocationData_getHue(t4);
        if (!(hue == null)) {
          t5 = $.HslColor_HslColor(hue, 1, 0.75).toRgb$0().toHex$0();
          cell.get$style().set$background(t5);
        }
        cell.set$innerHTML($.toString(t4));
        if (first) {
          cell = row.insertCell$1(-1);
          cell.set$rowSpan($.get$length(t1));
          cell.set$innerHTML($.toString(t1.get$voteCount()));
          $.add$1(cell.get$classes(), 'vote-count');
          first = false;
        }
        evenCandidateRow = !evenCandidateRow;
      }
      evenPlaceRow = !evenPlaceRow;
    }
  $.add$1(this.get$node().get$elements(), table);
}
};

$$.DistanceView = {"":
 ["_election", "_node", "_dirty"],
 "super": "HtmlView",
 set$election: function(value) {
  this._election = value;
  this.markDirty$0();
},
 updateElement$0: function() {
  $.clear(this.get$node().get$elements());
  var table = $.TableElement_TableElement();
  var row = table.insertRow$1(-1);
  $.add$1(row.get$classes(), 'row-odd');
  var cell = $.Element_Element$tag('th');
  $.add$1(row.get$elements(), cell);
  cell.set$innerHTML('Place');
  cell = $.Element_Element$tag('th');
  $.add$1(row.get$elements(), cell);
  cell.set$innerHTML('Candidate');
  cell = $.Element_Element$tag('th');
  $.add$1(row.get$elements(), cell);
  cell.set$innerHTML('Avg Dist');
  cell = $.Element_Element$tag('th');
  $.add$1(row.get$elements(), cell);
  cell.set$innerHTML('Avg Dist\xb2');
  var t1 = this._election;
  if (!(t1 == null))
    for (var t2 = $.iterator(t1.get$places()), evenCandidateRow = true, evenPlaceRow = true; t2.hasNext$0() === true;) {
      t1 = t2.next$0();
      for (var t3 = $.iterator(t1), first = true; t3.hasNext$0() === true;) {
        var t4 = t3.next$0();
        row = table.insertRow$1(-1);
        var t5 = row.get$classes();
        $.add$1(t5, evenPlaceRow ? 'row-even' : 'row-odd');
        if (first) {
          cell = $.Element_Element$tag('th');
          $.add$1(row.get$elements(), cell);
          $.add$1(cell.get$classes(), 'place-number');
          cell.set$rowSpan($.get$length(t1));
          cell.set$innerHTML($.toString(t1.get$place()));
        }
        cell = row.insertCell$1(-1);
        $.add$1(cell.get$classes(), 'candidate-cell');
        var hue = $.LocationData_getHue(t4);
        if (!(hue == null)) {
          t5 = $.HslColor_HslColor(hue, 1, 0.75).toRgb$0().toHex$0();
          cell.get$style().set$background(t5);
        }
        cell.set$innerHTML($.toString(t4));
        if (first) {
          cell = row.insertCell$1(-1);
          cell.set$rowSpan($.get$length(t1));
          cell.set$innerHTML($.toStringAsFixed(t1.get$avgDistance(), 2));
          $.add$1(cell.get$classes(), 'vote-count');
          var cell0 = row.insertCell$1(-1);
          cell0.set$rowSpan($.get$length(t1));
          cell0.set$innerHTML($.toStringAsFixed(t1.get$avgDistanceSquared(), 2));
          $.add$1(cell0.get$classes(), 'vote-count');
          cell = cell0;
          first = false;
        }
        evenCandidateRow = !evenCandidateRow;
      }
      evenPlaceRow = !evenPlaceRow;
    }
  $.add$1(this.get$node().get$elements(), table);
}
};

$$.CondorcetView = {"":
 ["_hoverChangedHandle", "_election", "_candidates", "_lib5_highlightCandidates", "_node", "_dirty"],
 "super": "HtmlView",
 set$election: function(election) {
  this._election = election;
  this._candidates = null;
  this.markDirty$0();
},
 get$hoverChanged: function() {
  return this._hoverChangedHandle;
},
 get$highlightCandidates: function() {
  return this._lib5_highlightCandidates;
},
 updateElement$0: function() {
  $.clear(this.get$node().get$elements());
  var table = $.TableElement_TableElement();
  var row = table.insertRow$1(-1);
  var cell = $.Element_Element$tag('th');
  $.add$1(row.get$elements(), cell);
  $.add$1(row.get$classes(), 'row-odd');
  cell.set$innerHTML('Place');
  cell = $.Element_Element$tag('th');
  $.add$1(row.get$elements(), cell);
  cell.set$innerHTML('Candidate');
  var t1 = this._election;
  if (!(t1 == null)) {
    this._candidates = t1.get$places().selectMany$1(new $.CondorcetView_updateElement_anon()).toReadOnlyCollection$0();
    for (t1 = $.iterator(this._candidates); t1.hasNext$0() === true;) {
      var t2 = t1.next$0();
      cell = $.Element_Element$tag('th');
      $.add$1(row.get$elements(), cell);
      cell.set$innerHTML($.toString(t2));
      t2 = $.getCandidateHexColor(t2, false);
      cell.get$style().set$background(t2);
      cell.set$colSpan(3);
    }
    for (var t1 = $.iterator(this._election.get$places()), evenCandidateRow = true, evenPlaceRow = true; t1.hasNext$0() === true;) {
      t2 = t1.next$0();
      for (var t3 = $.iterator(t2), first = true; t3.hasNext$0() === true;) {
        var t4 = t3.next$0();
        row = table.insertRow$1(-1);
        var t5 = row.get$classes();
        $.add$1(t5, evenPlaceRow ? 'row-even' : 'row-odd');
        if (first) {
          cell = $.Element_Element$tag('th');
          $.add$1(row.get$elements(), cell);
          $.add$1(cell.get$classes(), 'place-number');
          cell.set$rowSpan($.get$length(t2));
          cell.set$innerHTML($.toString(t2.get$place()));
          first = false;
        }
        cell = row.insertCell$1(-1);
        $.add$1(cell.get$classes(), 'candidate-cell');
        t5 = $.getCandidateHexColor(t4, false);
        cell.get$style().set$background(t5);
        cell.set$innerHTML($.toString(t4));
        for (t5 = $.iterator(this._candidates); t5.hasNext$0() === true;) {
          var t6 = t5.next$0();
          if ($.eqB(t6, t4)) {
            cell = row.insertCell$1(-1);
            cell.get$style().set$background('#999999');
            cell.set$colSpan(3);
          } else {
            var pair = this._election.getPair$2(t4, t6);
            if ($.eqB(t4, pair.get$winner())) {
              var leftColor = $.getCandidateHexColor(t4, true);
              var rightColor = $.getCandidateHexColor(t6, true);
              var middleText = '&gt;';
              var cellClass = 'winner';
            } else if ($.eqB(t6, pair.get$winner())) {
              leftColor = $.getCandidateHexColor(t4, false);
              rightColor = $.getCandidateHexColor(t6, false);
              middleText = '&lt;';
              cellClass = 'loser';
            } else {
              leftColor = $.getCandidateHexColor(t4, true);
              rightColor = $.getCandidateHexColor(t6, true);
              middleText = '=';
              cellClass = 'tie';
            }
            var cellData = this._getPairElementName$2(t4, t6);
            cell = row.insertCell$1(-1);
            cell.set$innerHTML($.toString(pair.get$firstOverSecond()));
            cell.get$style().set$color(leftColor);
            $.add$1(cell.get$classes(), 'vote-count');
            $.add$1(cell.get$classes(), 'pair-cell');
            $.add$1(cell.get$classes(), cellData);
            $.add$1(cell.get$classes(), cellClass);
            $.add$1(cell.get$classes(), 'left_value');
            $.indexSet(cell.get$dataAttributes(), 'pair-ids', cellData);
            var cell0 = row.insertCell$1(-1);
            cell0.set$innerHTML(middleText);
            $.add$1(cell0.get$classes(), 'pair-cell');
            $.add$1(cell0.get$classes(), cellClass);
            $.add$1(cell0.get$classes(), cellData);
            $.indexSet(cell0.get$dataAttributes(), 'pair-ids', cellData);
            var cell1 = row.insertCell$1(-1);
            cell1.set$innerHTML($.toString(pair.get$secondOverFirst()));
            cell1.get$style().set$color(rightColor);
            $.add$1(cell1.get$classes(), 'vote-count');
            $.add$1(cell1.get$classes(), 'right_value');
            $.add$1(cell1.get$classes(), cellClass);
            $.add$1(cell1.get$classes(), 'pair-cell');
            $.add$1(cell1.get$classes(), cellData);
            $.indexSet(cell1.get$dataAttributes(), 'pair-ids', cellData);
            cell = cell1;
          }
        }
        evenCandidateRow = !evenCandidateRow;
      }
      evenPlaceRow = !evenPlaceRow;
    }
  }
  $.add$1(table.get$on().get$mouseMove(), this.get$_onMouseOver());
  $.add$1(table.get$on().get$mouseOut(), this.get$_onMouseOut());
  $.add$1(this.get$node().get$elements(), table);
},
 set$_thePair: function(pair) {
  if (!$.eqB(pair, this._lib5_highlightCandidates)) {
    this._lib5_highlightCandidates = pair;
    this._updateCellHoverStyle$0();
    this._hoverChangedHandle.fireEvent$1($.CTC25);
  }
},
 _updateCellHoverStyle$0: function() {
  $.forEach(this.get$node().queryAll$1('td.pair-cell.hover-pair'), new $.CondorcetView__updateCellHoverStyle_anon('hover-pair'));
  var t1 = this._lib5_highlightCandidates;
  if (!(t1 == null)) {
    var matchClass = this._getPairElementName$2($.index(t1, 0), $.index(this._lib5_highlightCandidates, 1));
    $.forEach(this.get$node().queryAll$1('td.pair-cell.' + $.S(matchClass)), new $.CondorcetView__updateCellHoverStyle_anon0('hover-pair'));
  }
},
 _onMouseOver$1: function(e) {
  var t1 = e.get$toElement();
  if (typeof t1 === 'object' && t1 !== null && t1.is$Element()) {
    var pair = $.CondorcetView__getPair(e.get$toElement());
    if (!(pair == null)) {
      this.set$_thePair([$.index(this._candidates, pair.get$item1()), $.index(this._candidates, pair.get$item2())]);
      return;
    }
  }
  this.set$_thePair(null);
},
 get$_onMouseOver: function() { return new $.BoundClosure(this, '_onMouseOver$1'); },
 _onMouseOut$1: function(args) {
  this.set$_thePair(null);
},
 get$_onMouseOut: function() { return new $.BoundClosure(this, '_onMouseOut$1'); },
 _getPairElementName$2: function(can1, can2) {
  var cIndex = $.indexOf$1(this._candidates, can1);
  var oIndex = $.indexOf$1(this._candidates, can2);
  return 'pair' + $.S($.min(cIndex, oIndex)) + '_' + $.S($.max(cIndex, oIndex));
}
};

$$.IrvView = {"":
 ["_hoverChangedHandle", "_highlightRound", "_election", "_node", "_dirty"],
 "super": "HtmlView",
 get$election: function() {
  return this._election;
},
 set$election: function(value) {
  this._election = value;
  this.markDirty$0();
},
 get$hoverChanged: function() {
  return this._hoverChangedHandle;
},
 get$highlightCandidates: function() {
  var t1 = this._highlightRound;
  if (t1 == null)
    return;
  else
    return $.index(this._election.get$rounds(), t1).get$candidates().toList$0();
},
 updateElement$0: function() {
  $.clear(this.get$node().get$elements());
  if (this.get$election() == null)
    return;
  this._election.get$rounds().first$0().get$places().selectMany$1(new $.IrvView_updateElement_anon()).toReadOnlyCollection$0();
  var table = $.TableElement_TableElement();
  for (var previousPlaces = null, row = null, cell = null, i = 0; $.ltB(i, $.get$length(this.get$election().get$rounds())); ++i) {
    var round = $.index(this.get$election().get$rounds(), i);
    if (previousPlaces == null)
      var drawPlaces = true;
    else if ($.ltB($.get$length(previousPlaces), $.get$length(round.get$places())))
      drawPlaces = true;
    else
      for (var drawPlaces = false, i0 = 0; $.ltB(i0, $.get$length(round.get$places())); ++i0) {
        var currentPlace = $.index(round.get$places(), i0);
        if (typeof currentPlace !== 'string' && (typeof currentPlace !== 'object' || currentPlace === null || currentPlace.constructor !== Array && !currentPlace.is$JavaScriptIndexingBehavior()))
          return this.updateElement$0$bailout(1, round, i, table, currentPlace, previousPlaces, drawPlaces, i0, cell, 0);
        var previousPlace = $.index(previousPlaces, i0);
        if (typeof previousPlace !== 'string' && (typeof previousPlace !== 'object' || previousPlace === null || previousPlace.constructor !== Array && !previousPlace.is$JavaScriptIndexingBehavior()))
          return this.updateElement$0$bailout(2, round, i, table, currentPlace, previousPlaces, drawPlaces, previousPlace, i0, cell);
        if (currentPlace.length !== previousPlace.length)
          drawPlaces = true;
        else
          for (var j = 0; j < currentPlace.length; ++j) {
            var t1 = currentPlace[j];
            if (j >= previousPlace.length)
              throw $.ioore(j);
            if (!$.eqB(t1, previousPlace[j])) {
              drawPlaces = true;
              break;
            }
          }
      }
    previousPlaces = round.get$places();
    if (drawPlaces) {
      row = table.insertRow$1(-1);
      row.insertCell$1(-1).set$innerHTML('&nbsp;');
      for (t1 = $.iterator(round.get$places()); t1.hasNext$0() === true;) {
        var t2 = t1.next$0();
        cell = $.Element_Element$tag('th');
        $.add$1(row.get$elements(), cell);
        cell.set$colSpan($.get$length(t2));
        cell.set$innerHTML($.toString(t2.get$place()));
        $.add$1(cell.get$classes(), 'candidate-cell');
      }
      row = table.insertRow$1(-1);
      row.insertCell$1(-1).set$innerHTML('&nbsp;');
      for (t1 = $.iterator(round.get$places()); t1.hasNext$0() === true;)
        for (t2 = $.iterator(t1.next$0()); t2.hasNext$0() === true;) {
          var t3 = t2.next$0();
          cell = $.Element_Element$tag('th');
          $.add$1(row.get$elements(), cell);
          cell.set$innerHTML($.toString(t3));
          $.add$1(cell.get$classes(), 'candidate-cell');
          t3 = $.getCandidateHexColor(t3, false);
          cell.get$style().set$background(t3);
        }
    }
    row = table.insertRow$1(-1);
    cell = $.Element_Element$tag('th');
    cell.set$innerHTML('Round ' + $.S(i + 1));
    $.add$1(cell.get$classes(), 'irv_round');
    $.indexSet(cell.get$dataAttributes(), 'roundIndex', i);
    $.add$1(row.get$elements(), cell);
    for (t1 = $.iterator(round.get$places()); t1.hasNext$0() === true;) {
      t2 = t1.next$0();
      for (t3 = $.iterator(t2); t3.hasNext$0() === true;) {
        var t4 = t3.next$0();
        cell = row.insertCell$1(-1);
        cell.set$innerHTML($.toString(t2.get$voteCount()));
        $.add$1(cell.get$classes(), 'candidate-cell');
        $.add$1(cell.get$classes(), 'vote-count');
        t4 = $.getCandidateHexColor(t4, false);
        cell.get$style().set$background(t4);
      }
    }
    var el = $.get$length(round.get$eliminations());
    if (typeof el !== 'number')
      return this.updateElement$0$bailout(3, round, el, i, cell, table, previousPlaces, row, 0, 0);
    for (var ei = 0; ei < el; ++ei) {
      var elimination = $.index(round.get$eliminations(), el - ei - 1);
      row = table.insertRow$1(-1);
      cell = row.insertCell$1(-1);
      cell.set$innerHTML($.toString(elimination.get$candidate()));
      cell.get$style().set$fontStyle('italic');
      cell.get$style().set$textAlign('right');
      for (var t1 = $.iterator(round.get$candidates()), foundSelf = false; t1.hasNext$0() === true;) {
        t2 = t1.next$0();
        cell = row.insertCell$1(-1);
        if ($.eqB(t2, elimination.get$candidate())) {
          cell.set$innerHTML('&larr;');
          foundSelf = true;
        } else {
          var transferCount = elimination.getTransferCount$1(t2);
          if ($.gtB(transferCount, 0)) {
            cell.set$innerHTML($.toString(transferCount));
            $.add$1(cell.get$classes(), 'vote-count');
          }
        }
      }
    }
  }
  $.add$1(table.get$on().get$mouseMove(), this.get$_onMouseOver());
  $.add$1(table.get$on().get$mouseOut(), this.get$_onMouseOut());
  $.add$1(this.get$node().get$elements(), table);
  this._updateHighlightedRound$1(null);
},
 updateElement$0$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8) {
  switch (state0) {
    case 1:
      round = env0;
      i = env1;
      table = env2;
      currentPlace = env3;
      previousPlaces = env4;
      drawPlaces = env5;
      i0 = env6;
      cell = env7;
      break;
    case 2:
      round = env0;
      i = env1;
      table = env2;
      currentPlace = env3;
      previousPlaces = env4;
      drawPlaces = env5;
      previousPlace = env6;
      i0 = env7;
      cell = env8;
      break;
    case 3:
      round = env0;
      el = env1;
      i = env2;
      cell = env3;
      table = env4;
      previousPlaces = env5;
      row = env6;
      break;
  }
  switch (state0) {
    case 0:
      $.clear(this.get$node().get$elements());
      if (this.get$election() == null)
        return;
      this._election.get$rounds().first$0().get$places().selectMany$1(new $.IrvView_updateElement_anon()).toReadOnlyCollection$0();
      var table = $.TableElement_TableElement();
      var previousPlaces = null;
      var row = null;
      var cell = null;
      var i = 0;
    default:
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!$.ltB(i, $.get$length(this.get$election().get$rounds())))
                break L0;
              var round = $.index(this.get$election().get$rounds(), i);
            default:
              if (state0 === 0 && previousPlaces == null)
                var drawPlaces = true;
              else
                switch (state0) {
                  case 0:
                  default:
                    if (state0 === 0 && $.ltB($.get$length(previousPlaces), $.get$length(round.get$places())))
                      drawPlaces = true;
                    else
                      switch (state0) {
                        case 0:
                          drawPlaces = false;
                          var i0 = 0;
                        default:
                          L1:
                            while (true)
                              switch (state0) {
                                case 0:
                                  if (!$.ltB(i0, $.get$length(round.get$places())))
                                    break L1;
                                  var currentPlace = $.index(round.get$places(), i0);
                                case 1:
                                  state0 = 0;
                                  var previousPlace = $.index(previousPlaces, i0);
                                case 2:
                                  state0 = 0;
                                  if (!$.eqB($.get$length(currentPlace), $.get$length(previousPlace)))
                                    drawPlaces = true;
                                  else
                                    for (var j = 0; $.ltB(j, $.get$length(currentPlace)); ++j)
                                      if (!$.eqB($.index(currentPlace, j), $.index(previousPlace, j))) {
                                        drawPlaces = true;
                                        break;
                                      }
                                  ++i0;
                              }
                      }
                }
              previousPlaces = round.get$places();
              if (drawPlaces) {
                row = table.insertRow$1(-1);
                row.insertCell$1(-1).set$innerHTML('&nbsp;');
                for (var t1 = $.iterator(round.get$places()); t1.hasNext$0() === true;) {
                  var t2 = t1.next$0();
                  cell = $.Element_Element$tag('th');
                  $.add$1(row.get$elements(), cell);
                  cell.set$colSpan($.get$length(t2));
                  cell.set$innerHTML($.toString(t2.get$place()));
                  $.add$1(cell.get$classes(), 'candidate-cell');
                }
                row = table.insertRow$1(-1);
                row.insertCell$1(-1).set$innerHTML('&nbsp;');
                for (t1 = $.iterator(round.get$places()); t1.hasNext$0() === true;)
                  for (t2 = $.iterator(t1.next$0()); t2.hasNext$0() === true;) {
                    var t3 = t2.next$0();
                    cell = $.Element_Element$tag('th');
                    $.add$1(row.get$elements(), cell);
                    cell.set$innerHTML($.toString(t3));
                    $.add$1(cell.get$classes(), 'candidate-cell');
                    t3 = $.getCandidateHexColor(t3, false);
                    cell.get$style().set$background(t3);
                  }
              }
              row = table.insertRow$1(-1);
              cell = $.Element_Element$tag('th');
              cell.set$innerHTML('Round ' + $.S(i + 1));
              $.add$1(cell.get$classes(), 'irv_round');
              $.indexSet(cell.get$dataAttributes(), 'roundIndex', i);
              $.add$1(row.get$elements(), cell);
              for (t1 = $.iterator(round.get$places()); t1.hasNext$0() === true;) {
                t2 = t1.next$0();
                for (t3 = $.iterator(t2); t3.hasNext$0() === true;) {
                  var t4 = t3.next$0();
                  cell = row.insertCell$1(-1);
                  cell.set$innerHTML($.toString(t2.get$voteCount()));
                  $.add$1(cell.get$classes(), 'candidate-cell');
                  $.add$1(cell.get$classes(), 'vote-count');
                  t4 = $.getCandidateHexColor(t4, false);
                  cell.get$style().set$background(t4);
                }
              }
              var el = $.get$length(round.get$eliminations());
            case 3:
              state0 = 0;
              for (var ei = 0; $.ltB(ei, el); ++ei) {
                var elimination = $.index(round.get$eliminations(), $.sub($.sub(el, ei), 1));
                row = table.insertRow$1(-1);
                cell = row.insertCell$1(-1);
                cell.set$innerHTML($.toString(elimination.get$candidate()));
                cell.get$style().set$fontStyle('italic');
                cell.get$style().set$textAlign('right');
                for (var t1 = $.iterator(round.get$candidates()), foundSelf = false; t1.hasNext$0() === true;) {
                  t2 = t1.next$0();
                  cell = row.insertCell$1(-1);
                  if ($.eqB(t2, elimination.get$candidate())) {
                    cell.set$innerHTML('&larr;');
                    foundSelf = true;
                  } else {
                    var transferCount = elimination.getTransferCount$1(t2);
                    if ($.gtB(transferCount, 0)) {
                      cell.set$innerHTML($.toString(transferCount));
                      $.add$1(cell.get$classes(), 'vote-count');
                    }
                  }
                }
              }
              ++i;
          }
      $.add$1(table.get$on().get$mouseMove(), this.get$_onMouseOver());
      $.add$1(table.get$on().get$mouseOut(), this.get$_onMouseOut());
      $.add$1(this.get$node().get$elements(), table);
      this._updateHighlightedRound$1(null);
  }
},
 _onMouseOver$1: function(e) {
  var t1 = e.get$toElement();
  if (typeof t1 === 'object' && t1 !== null && t1.is$Element()) {
    var elem = e.get$toElement();
    if ($.contains$1(elem.get$classes(), 'irv_round') === true) {
      this._updateHighlightedRound$1($.int_parse($.index(elem.get$dataAttributes(), 'roundIndex')));
      return;
    }
  }
  this._updateHighlightedRound$1(null);
},
 get$_onMouseOver: function() { return new $.BoundClosure(this, '_onMouseOver$1'); },
 _onMouseOut$1: function(args) {
  this._updateHighlightedRound$1(null);
},
 get$_onMouseOut: function() { return new $.BoundClosure(this, '_onMouseOut$1'); },
 _updateHighlightedRound$1: function(roundIndex) {
  if (!$.eqB(roundIndex, this._highlightRound)) {
    this._highlightRound = roundIndex;
    this._hoverChangedHandle.fireEvent$1($.CTC25);
  }
}
};

$$.CalcEngine = {"":
 ["_distanceElectionMapper", "_pluralityElectionMapper", "_condorcetElectionMapper", "_irvElectionMapper", "_voterHexMapper", "_highlightCandidates"],
 "super": "Object",
 get$locationData: function() {
  return this._distanceElectionMapper.get$input();
},
 set$locationData: function(data) {
  $.requireArgumentNotNull(data, 'data');
  this._distanceElectionMapper.set$input(data);
},
 candidatesMoved$0: function() {
  this.set$locationData(this.get$locationData());
},
 set$hoverPair: function(pair) {
  this._highlightCandidates = pair;
  this._updateVoterHexMapper$0();
},
 get$distanceElection: function() {
  return this._distanceElectionMapper.get$output();
},
 get$pluralityElection: function() {
  return this._pluralityElectionMapper.get$output();
},
 get$condorcetElection: function() {
  return this._condorcetElectionMapper.get$output();
},
 get$irvElection: function() {
  return this._irvElectionMapper.get$output();
},
 get$voterHexMap: function() {
  return this._voterHexMapper.get$output();
},
 addCandidate$0: function() {
  var newData = this.get$locationData().cloneAndAddCandidate$0();
  this._distanceElectionMapper.set$input(newData);
},
 removeCandidate$1: function(candidate) {
  var newData = this.get$locationData().cloneAndRemove$1(candidate);
  this._distanceElectionMapper.set$input(newData);
},
 get$locationDataChanged: function() {
  return this._distanceElectionMapper.get$inputChanged();
},
 get$distanceElectionChanged: function() {
  return this._distanceElectionMapper.get$outputChanged();
},
 get$pluralityElectionChanged: function() {
  return this._pluralityElectionMapper.get$outputChanged();
},
 get$condorcetElectionChanged: function() {
  return this._condorcetElectionMapper.get$outputChanged();
},
 get$irvElectionChanged: function() {
  return this._irvElectionMapper.get$outputChanged();
},
 get$voterHueMapperChanged: function() {
  return this._voterHexMapper.get$outputChanged();
},
 _distanceElectionChanged$0: function() {
  var t1 = this.get$distanceElection().get$ballots();
  this._pluralityElectionMapper.set$input(t1);
  t1 = this.get$distanceElection().get$ballots();
  this._condorcetElectionMapper.set$input(t1);
  t1 = this.get$distanceElection().get$ballots();
  this._irvElectionMapper.set$input(t1);
  this._updateVoterHexMapper$0();
},
 _updateVoterHexMapper$0: function() {
  var val = $.Tuple3$(this.get$distanceElection(), this.get$locationData(), this._highlightCandidates);
  this._voterHexMapper.set$input(val);
},
 CalcEngine$0: function() {
  $.add$1(this._distanceElectionMapper.get$outputChanged(), new $.anon4(this));
}
};

$$._DistanceElectionMapper = {"":
 ["_sendPort", "inputSerializer", "outputDeserializer", "_completer", "_innerFuture", "_input", "_future", "_output", "_pending", "_outputChangedHandle", "_inputChangedHandle", "_errorHandle"],
 "super": "SendPortValue"
};

$$._PluralityElectionMapper = {"":
 ["_sendPort", "inputSerializer", "outputDeserializer", "_completer", "_innerFuture", "_input", "_future", "_output", "_pending", "_outputChangedHandle", "_inputChangedHandle", "_errorHandle"],
 "super": "SendPortValue"
};

$$._CondorcetElectionMapper = {"":
 ["_sendPort", "inputSerializer", "outputDeserializer", "_completer", "_innerFuture", "_input", "_future", "_output", "_pending", "_outputChangedHandle", "_inputChangedHandle", "_errorHandle"],
 "super": "SendPortValue"
};

$$._IrvElectionMapper = {"":
 ["_sendPort", "inputSerializer", "outputDeserializer", "_completer", "_innerFuture", "_input", "_future", "_output", "_pending", "_outputChangedHandle", "_inputChangedHandle", "_errorHandle"],
 "super": "SendPortValue"
};

$$._VoterHexMapper = {"":
 ["_sendPort", "inputSerializer", "outputDeserializer", "_completer", "_innerFuture", "_input", "_future", "_output", "_pending", "_outputChangedHandle", "_inputChangedHandle", "_errorHandle"],
 "super": "SendPortValue"
};

$$.FutureValue = {"":
 [],
 "super": "Object",
 get$input: function() {
  return this._input;
},
 set$input: function(value) {
  this._input = value;
  if (this._future == null)
    this._startFuture$0();
  else
    this._pending = true;
  this._inputChangedHandle.fireEvent$1($.CTC25);
},
 get$output: function() {
  return this._output;
},
 get$outputChanged: function() {
  return this._outputChangedHandle;
},
 get$inputChanged: function() {
  return this._inputChangedHandle;
},
 _startFuture$0: function() {
  this._future = this.getFuture$1(this._input);
  this._future.handleException$1(this.get$_futureException());
  this._future.then$1(this.get$_futureCompleted());
},
 _futureException$1: function(exception) {
  this._future = null;
  this._errorHandle.fireEvent$1(exception);
  this._cleanup$0();
  return true;
},
 get$_futureException: function() { return new $.BoundClosure(this, '_futureException$1'); },
 _futureCompleted$1: function(value) {
  this._future = null;
  this._output = value;
  this._outputChangedHandle.fireEvent$1($.CTC25);
  this._cleanup$0();
},
 get$_futureCompleted: function() { return new $.BoundClosure(this, '_futureCompleted$1'); },
 _cleanup$0: function() {
  if (this._pending) {
    this._pending = false;
    this._startFuture$0();
  }
}
};

$$.FutureValueResult = {"":
 ["value?", "exception?", "_outputSerializer"],
 "super": "Object",
 get$isException: function() {
  return !(this.exception == null);
},
 operator$eq$1: function(other) {
  return !(other == null) && $.eqB(other.get$value(), this.value) && $.eqB(other.get$exception(), this.exception);
},
 FutureValueResult$fromException$1: function(exception) {
  $.requireArgumentNotNull(this.exception, 'exception');
}
};

$$.SendPortValue = {"":
 [],
 "super": "FutureValue",
 inputSerializer$1: function(arg0) { return this.inputSerializer.call$1(arg0); },
 outputDeserializer$1: function(arg0) { return this.outputDeserializer.call$1(arg0); },
 getFuture$1: function(value) {
  this._completer = $.Completer_Completer();
  var t1 = this.inputSerializer == null;
  var t2 = this._sendPort;
  if (t1)
    this._innerFuture = t2.call$1(value);
  else
    this._innerFuture = t2.call$1(this.inputSerializer$1(value));
  this._innerFuture.then$1(this.get$__futureCompleted());
  return this._completer.get$future();
},
 __futureCompleted$1: function(value) {
  this._innerFuture = null;
  if (typeof value === 'object' && value !== null && value.is$Map() && $.FutureValueResult_isMyMap(value))
    this._sendValueResultCompleted$1($.FutureValueResult_FutureValueResult$fromMap(value));
  else
    this._lib2_complete$1(value);
},
 get$__futureCompleted: function() { return new $.BoundClosure(this, '__futureCompleted$1'); },
 _sendValueResultCompleted$1: function(value) {
  if (value.get$isException() === true)
    this._completeException$1(value.get$exception());
  else
    this._lib2_complete$1(value.get$value());
},
 _lib2_complete$1: function(rawValue) {
  var c = this._completer;
  this._completer = null;
  c.complete$1(this._deserializer$1(rawValue));
},
 _completeException$1: function(exception) {
  var c = this._completer;
  this._completer = null;
  c.completeException$1(exception);
},
 _deserializer$1: function(input) {
  if (this.outputDeserializer == null)
    return input;
  else
    return this.outputDeserializer$1(input);
}
};

$$._convertDartToNative_PrepareForStructuredClone_findSlot = {"":
 ["copies_3", "values_2"],
 "super": "Closure",
 call$1: function(value) {
  var t1 = this.values_2;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.call$1$bailout(1, value, t1);
  var length$ = t1.length;
  for (var i = 0; i < length$; ++i) {
    var t2 = t1[i];
    if (t2 == null ? value == null : t2 === value)
      return i;
  }
  $.add$1(t1, value);
  $.add$1(this.copies_3, null);
  return length$;
},
 call$1$bailout: function(state0, value, t1) {
  var length$ = $.get$length(t1);
  for (var i = 0; $.ltB(i, length$); ++i) {
    var t2 = $.index(t1, i);
    if (t2 == null ? value == null : t2 === value)
      return i;
  }
  $.add$1(t1, value);
  $.add$1(this.copies_3, null);
  return length$;
}
};

$$._convertDartToNative_PrepareForStructuredClone_readSlot = {"":
 ["copies_4"],
 "super": "Closure",
 call$1: function(i) {
  return $.index(this.copies_4, i);
}
};

$$._convertDartToNative_PrepareForStructuredClone_writeSlot = {"":
 ["copies_5"],
 "super": "Closure",
 call$2: function(i, x) {
  $.indexSet(this.copies_5, i, x);
}
};

$$._convertDartToNative_PrepareForStructuredClone_cleanupSlots = {"":
 [],
 "super": "Closure",
 call$0: function() {
}
};

$$._convertDartToNative_PrepareForStructuredClone_walk = {"":
 ["writeSlot_8", "findSlot_7", "readSlot_6"],
 "super": "Closure",
 call$1: function(e) {
  var t1 = {};
  if (e == null)
    return e;
  if (typeof e === 'boolean')
    return e;
  if (typeof e === 'number')
    return e;
  if (typeof e === 'string')
    return e;
  if (typeof e === 'object' && e !== null && !!e.is$Date)
    throw $.$$throw($.CTC3);
  if (typeof e === 'object' && e !== null && !!e.is$RegExp)
    throw $.$$throw($.CTC4);
  if (typeof e === 'object' && e !== null && e.is$_FileImpl())
    return e;
  if (typeof e === 'object' && e !== null && e.is$File())
    throw $.$$throw($.CTC5);
  if (typeof e === 'object' && e !== null && e.is$_BlobImpl())
    return e;
  if (typeof e === 'object' && e !== null && e.is$Blob())
    throw $.$$throw($.CTC6);
  if (typeof e === 'object' && e !== null && e.is$_FileListImpl())
    return e;
  if (typeof e === 'object' && e !== null && e.is$_ImageDataImpl())
    return e;
  if (typeof e === 'object' && e !== null && e.is$ImageData())
    throw $.$$throw($.CTC7);
  if (typeof e === 'object' && e !== null && e.is$_ArrayBufferImpl())
    return e;
  if (typeof e === 'object' && e !== null && e.is$ArrayBuffer())
    throw $.$$throw($.CTC8);
  if (typeof e === 'object' && e !== null && e.is$_ArrayBufferViewImpl())
    return e;
  if (typeof e === 'object' && e !== null && e.is$ArrayBufferView())
    throw $.$$throw($.CTC9);
  if (typeof e === 'object' && e !== null && e.is$Map()) {
    var slot = this.findSlot_7.call$1(e);
    t1.copy_1 = this.readSlot_6.call$1(slot);
    var t2 = t1.copy_1;
    if (!(t2 == null))
      return t2;
    t1.copy_1 = {};
    this.writeSlot_8.call$2(slot, t1.copy_1);
    e.forEach$1(new $._convertDartToNative_PrepareForStructuredClone_walk_anon(this, t1));
    return t1.copy_1;
  }
  if (typeof e === 'object' && e !== null && (e.constructor === Array || e.is$List())) {
    if (typeof e !== 'object' || e === null || (e.constructor !== Array || !!e.immutable$list) && !e.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(1, e, 0, 0, 0, 0, 0, 0);
    var length$ = e.length;
    slot = this.findSlot_7.call$1(e);
    t2 = this.readSlot_6;
    var copy = t2.call$1(slot);
    if (!(copy == null)) {
      if (true === copy) {
        copy = new Array(length$);
        this.writeSlot_8.call$2(slot, copy);
      }
      return copy;
    }
    t1 = e instanceof Array && !!!(e.immutable$list);
    var t3 = this.writeSlot_8;
    if (t1) {
      t3.call$2(slot, true);
      for (var i = 0; i < length$; ++i) {
        if (i >= e.length)
          throw $.ioore(i);
        var element = e[i];
        var elementCopy = this.call$1(element);
        if (!(elementCopy == null ? element == null : elementCopy === element)) {
          copy = t2.call$1(slot);
          if (true === copy) {
            copy = new Array(length$);
            t3.call$2(slot, copy);
          }
          if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
            return this.call$1$bailout(2, e, t3, length$, elementCopy, slot, copy, i);
          for (var t1 = e.length, t2 = copy.length, j = 0; j < i; ++j) {
            if (j >= t1)
              throw $.ioore(j);
            var t4 = e[j];
            if (j >= t2)
              throw $.ioore(j);
            copy[j] = t4;
          }
          if (i >= t2)
            throw $.ioore(i);
          copy[i] = elementCopy;
          ++i;
          break;
        }
      }
      if (copy == null) {
        t3.call$2(slot, e);
        copy = e;
      }
    } else {
      copy = new Array(length$);
      t3.call$2(slot, copy);
      i = 0;
    }
    if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(3, e, i, copy, length$, 0, 0, 0);
    for (; i < length$; ++i) {
      if (i >= e.length)
        throw $.ioore(i);
      t1 = this.call$1(e[i]);
      if (i >= copy.length)
        throw $.ioore(i);
      copy[i] = t1;
    }
    return copy;
  }
  throw $.$$throw($.CTC10);
},
 call$1$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6) {
  switch (state0) {
    case 1:
      var e = env0;
      break;
    case 2:
      e = env0;
      t3 = env1;
      length$ = env2;
      elementCopy = env3;
      slot = env4;
      copy = env5;
      i = env6;
      break;
    case 3:
      e = env0;
      i = env1;
      copy = env2;
      length$ = env3;
      break;
  }
  switch (state0) {
    case 0:
      var t1 = {};
      if (e == null)
        return e;
      if (typeof e === 'boolean')
        return e;
      if (typeof e === 'number')
        return e;
      if (typeof e === 'string')
        return e;
      if (typeof e === 'object' && e !== null && !!e.is$Date)
        throw $.$$throw($.CTC3);
      if (typeof e === 'object' && e !== null && !!e.is$RegExp)
        throw $.$$throw($.CTC4);
      if (typeof e === 'object' && e !== null && e.is$_FileImpl())
        return e;
      if (typeof e === 'object' && e !== null && e.is$File())
        throw $.$$throw($.CTC5);
      if (typeof e === 'object' && e !== null && e.is$_BlobImpl())
        return e;
      if (typeof e === 'object' && e !== null && e.is$Blob())
        throw $.$$throw($.CTC6);
      if (typeof e === 'object' && e !== null && e.is$_FileListImpl())
        return e;
      if (typeof e === 'object' && e !== null && e.is$_ImageDataImpl())
        return e;
      if (typeof e === 'object' && e !== null && e.is$ImageData())
        throw $.$$throw($.CTC7);
      if (typeof e === 'object' && e !== null && e.is$_ArrayBufferImpl())
        return e;
      if (typeof e === 'object' && e !== null && e.is$ArrayBuffer())
        throw $.$$throw($.CTC8);
      if (typeof e === 'object' && e !== null && e.is$_ArrayBufferViewImpl())
        return e;
      if (typeof e === 'object' && e !== null && e.is$ArrayBufferView())
        throw $.$$throw($.CTC9);
      if (typeof e === 'object' && e !== null && e.is$Map()) {
        var slot = this.findSlot_7.call$1(e);
        t1.copy_1 = this.readSlot_6.call$1(slot);
        var t2 = t1.copy_1;
        if (!(t2 == null))
          return t2;
        t1.copy_1 = {};
        this.writeSlot_8.call$2(slot, t1.copy_1);
        e.forEach$1(new $._convertDartToNative_PrepareForStructuredClone_walk_anon(this, t1));
        return t1.copy_1;
      }
    default:
      if (state0 === 3 || state0 === 2 || state0 === 1 || state0 === 0 && typeof e === 'object' && e !== null && (e.constructor === Array || e.is$List()))
        switch (state0) {
          case 0:
          case 1:
            state0 = 0;
            var length$ = $.get$length(e);
            slot = this.findSlot_7.call$1(e);
            t2 = this.readSlot_6;
            var copy = t2.call$1(slot);
            if (!(copy == null)) {
              if (true === copy) {
                copy = new Array(length$);
                this.writeSlot_8.call$2(slot, copy);
              }
              return copy;
            }
            t1 = e instanceof Array && !!!(e.immutable$list);
            var t3 = this.writeSlot_8;
          case 2:
            if (state0 === 2 || state0 === 0 && t1)
              switch (state0) {
                case 0:
                  t3.call$2(slot, true);
                  var i = 0;
                case 2:
                  L0:
                    while (true)
                      switch (state0) {
                        case 0:
                          if (!$.ltB(i, length$))
                            break L0;
                          var element = $.index(e, i);
                          var elementCopy = this.call$1(element);
                        case 2:
                          if (state0 === 2 || state0 === 0 && !(elementCopy == null ? element == null : elementCopy === element))
                            switch (state0) {
                              case 0:
                                copy = t2.call$1(slot);
                                if (true === copy) {
                                  copy = new Array(length$);
                                  t3.call$2(slot, copy);
                                }
                              case 2:
                                state0 = 0;
                                for (var j = 0; j < i; ++j)
                                  $.indexSet(copy, j, $.index(e, j));
                                $.indexSet(copy, i, elementCopy);
                                ++i;
                                break L0;
                            }
                          ++i;
                      }
                  if (copy == null) {
                    t3.call$2(slot, e);
                    copy = e;
                  }
              }
            else {
              copy = new Array(length$);
              t3.call$2(slot, copy);
              i = 0;
            }
          case 3:
            state0 = 0;
            for (; $.ltB(i, length$); ++i)
              $.indexSet(copy, i, this.call$1($.index(e, i)));
            return copy;
        }
      throw $.$$throw($.CTC10);
  }
}
};

$$._convertDartToNative_PrepareForStructuredClone_walk_anon = {"":
 ["walk_9", "box_0"],
 "super": "Closure",
 call$2: function(key, value) {
  this.box_0.copy_1[key] = this.walk_9.call$1(value);
}
};

$$.Maps__emitMap_anon = {"":
 ["result_3", "box_0", "visiting_2"],
 "super": "Closure",
 call$2: function(k, v) {
  var t1 = this.box_0;
  if (t1.first_1 !== true)
    $.add$1(this.result_3, ', ');
  t1.first_1 = false;
  t1 = this.result_3;
  var t2 = this.visiting_2;
  $.Collections__emitObject(k, t1, t2);
  $.add$1(t1, ': ');
  $.Collections__emitObject(v, t1, t2);
}
};

$$.EventHandle_fireEvent_anon = {"":
 ["args_0"],
 "super": "Closure",
 call$2: function(id, handler) {
  handler.call$1(this.args_0);
}
};

$$.invokeClosure_anon = {"":
 ["closure_0"],
 "super": "Closure",
 call$0: function() {
  return this.closure_0.call$0();
}
};

$$.invokeClosure_anon0 = {"":
 ["closure_2", "arg1_1"],
 "super": "Closure",
 call$0: function() {
  return this.closure_2.call$1(this.arg1_1);
}
};

$$.invokeClosure_anon1 = {"":
 ["closure_5", "arg1_4", "arg2_3"],
 "super": "Closure",
 call$0: function() {
  return this.closure_5.call$2(this.arg1_4, this.arg2_3);
}
};

$$.anon5 = {"":
 ["this_0"],
 "super": "Closure",
 call$1: function(data) {
  this.this_0.get$_calcEngine().candidatesMoved$0();
}
};

$$.anon6 = {"":
 ["this_1"],
 "super": "Closure",
 call$1: function(args) {
  this.this_1._requestFrame$0();
}
};

$$.anon7 = {"":
 ["this_2"],
 "super": "Closure",
 call$1: function(data) {
  this.this_2.get$_calcEngine().removeCandidate$1(data);
}
};

$$.anon8 = {"":
 ["this_3"],
 "super": "Closure",
 call$1: function(args) {
  this.this_3.get$_calcEngine().addCandidate$0();
}
};

$$.anon9 = {"":
 ["this_4"],
 "super": "Closure",
 call$1: function(args) {
  var t1 = this.this_4;
  t1._updateHighlightCandidates$1(t1.get$_condorcetView().get$highlightCandidates());
}
};

$$.anon10 = {"":
 ["this_5"],
 "super": "Closure",
 call$1: function(args) {
  var t1 = this.this_5;
  t1._updateHighlightCandidates$1(t1.get$_irvView().get$highlightCandidates());
}
};

$$.anon4 = {"":
 ["this_0"],
 "super": "Closure",
 call$1: function(args) {
  this.this_0._distanceElectionChanged$0();
}
};

$$._voterHexMapperIsolate_anon = {"":
 [],
 "super": "Closure",
 call$2: function(tuple, reply) {
  var map = $.HashMapImplementation$();
  for (var t1 = $.iterator(tuple.get$item1().get$ballots()); t1.hasNext$0() === true;) {
    var t2 = t1.next$0();
    var candidate = tuple.get$item3() == null ? t2.get$choice() : $.filter(t2.get$rank(), new $._voterHexMapperIsolate_anon0(tuple)).first$0();
    if (!(candidate == null)) {
      var hue = $.LocationData_getHue(candidate);
      map.operator$indexSet$2(t2.get$voter(), $.HslColor_HslColor(hue, 0.5, 0.75).toRgb$0().toHex$0());
    }
  }
  reply.send$1(map);
}
};

$$._voterHexMapperIsolate_anon0 = {"":
 ["tuple_0"],
 "super": "Closure",
 call$1: function(c) {
  return $.ge($.indexOf$1(this.tuple_0.get$item3(), c), 0);
}
};

$$.RgbColor_toHex_anon = {"":
 ["buffer_0"],
 "super": "Closure",
 call$1: function(c) {
  $.add$1(this.buffer_0, $.RgbColor__prependZeroIfNecessaryHelper($.toRadixString(c, 16)));
}
};

$$._IsolateNatives__spawn_anon = {"":
 ["port_1", "completer_0"],
 "super": "Closure",
 call$2: function(msg, replyPort) {
  this.port_1.close$0();
  this.completer_0.complete$1(replyPort);
}
};

$$.anon = {"":
 ["this_0"],
 "super": "Closure",
 call$1: function(p) {
  var t1 = this.this_0;
  t1.set$_port(p);
  for (var t2 = $.iterator(t1.get$pending()); t2.hasNext$0() === true;) {
    var t3 = t2.next$0();
    p.send$2($.index(t3, 'message'), $.index(t3, 'replyTo'));
  }
  t1.set$pending(null);
}
};

$$.DoubleLinkedQueue_length__ = {"":
 ["box_0"],
 "super": "Closure",
 call$1: function(element) {
  var t1 = this.box_0;
  t1.counter_1 = $.add(t1.counter_1, 1);
}
};

$$.LinkedHashMapImplementation_forEach__ = {"":
 ["f_0"],
 "super": "Closure",
 call$1: function(entry) {
  this.f_0.call$2(entry.get$key(), entry.get$value());
}
};

$$._convertNativeToDart_AcceptStructuredClone_findSlot = {"":
 ["copies_1", "values_0"],
 "super": "Closure",
 call$1: function(value) {
  var t1 = this.values_0;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.call$1$bailout(1, value, t1);
  var length$ = t1.length;
  for (var i = 0; i < length$; ++i) {
    var t2 = t1[i];
    if (t2 == null ? value == null : t2 === value)
      return i;
  }
  $.add$1(t1, value);
  $.add$1(this.copies_1, null);
  return length$;
},
 call$1$bailout: function(state0, value, t1) {
  var length$ = $.get$length(t1);
  for (var i = 0; $.ltB(i, length$); ++i) {
    var t2 = $.index(t1, i);
    if (t2 == null ? value == null : t2 === value)
      return i;
  }
  $.add$1(t1, value);
  $.add$1(this.copies_1, null);
  return length$;
}
};

$$._convertNativeToDart_AcceptStructuredClone_readSlot = {"":
 ["copies_2"],
 "super": "Closure",
 call$1: function(i) {
  return $.index(this.copies_2, i);
}
};

$$._convertNativeToDart_AcceptStructuredClone_writeSlot = {"":
 ["copies_3"],
 "super": "Closure",
 call$2: function(i, x) {
  $.indexSet(this.copies_3, i, x);
}
};

$$._convertNativeToDart_AcceptStructuredClone_walk = {"":
 ["writeSlot_7", "mustCopy_6", "findSlot_5", "readSlot_4"],
 "super": "Closure",
 call$1: function(e) {
  if (typeof e !== 'object' || e === null || (e.constructor !== Array || !!e.immutable$list) && !e.is$JavaScriptIndexingBehavior())
    return this.call$1$bailout(1, e, 0, 0, 0);
  if (e instanceof Date)
    throw $.$$throw($.CTC3);
  if (e instanceof RegExp)
    throw $.$$throw($.CTC4);
  if ($._isJavaScriptSimpleObject(e)) {
    var slot = this.findSlot_5.call$1(e);
    var copy = this.readSlot_4.call$1(slot);
    if (!(copy == null))
      return copy;
    copy = $.makeLiteralMap([]);
    if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(2, e, slot, copy, 0);
    this.writeSlot_7.call$2(slot, copy);
    for (var t1 = $.iterator(Object.keys(e)); t1.hasNext$0() === true;) {
      var t2 = t1.next$0();
      var t3 = this.call$1(e[t2]);
      if (t2 !== (t2 | 0))
        throw $.iae(t2);
      if (t2 < 0 || t2 >= copy.length)
        throw $.ioore(t2);
      copy[t2] = t3;
    }
    return copy;
  }
  if (e instanceof Array) {
    slot = this.findSlot_5.call$1(e);
    copy = this.readSlot_4.call$1(slot);
    if (!(copy == null))
      return copy;
    var length$ = e.length;
    if (this.mustCopy_6 === true)
      copy = new Array(length$);
    else
      copy = e;
    if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(3, e, length$, copy, slot);
    this.writeSlot_7.call$2(slot, copy);
    for (var i = 0; i < length$; ++i) {
      if (i >= e.length)
        throw $.ioore(i);
      t1 = this.call$1(e[i]);
      if (i >= copy.length)
        throw $.ioore(i);
      copy[i] = t1;
    }
    return copy;
  }
  return e;
},
 call$1$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      var e = env0;
      break;
    case 2:
      e = env0;
      slot = env1;
      copy = env2;
      break;
    case 3:
      e = env0;
      length$ = env1;
      copy = env2;
      slot = env3;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      if (e == null)
        return e;
      if (typeof e === 'boolean')
        return e;
      if (typeof e === 'number')
        return e;
      if (typeof e === 'string')
        return e;
      if (e instanceof Date)
        throw $.$$throw($.CTC3);
      if (e instanceof RegExp)
        throw $.$$throw($.CTC4);
    case 2:
      if (state0 === 2 || state0 === 0 && $._isJavaScriptSimpleObject(e))
        switch (state0) {
          case 0:
            var slot = this.findSlot_5.call$1(e);
            var copy = this.readSlot_4.call$1(slot);
            if (!(copy == null))
              return copy;
            copy = $.makeLiteralMap([]);
          case 2:
            state0 = 0;
            this.writeSlot_7.call$2(slot, copy);
            for (var t1 = $.iterator(Object.keys(e)); t1.hasNext$0() === true;) {
              var t2 = t1.next$0();
              $.indexSet(copy, t2, this.call$1(e[t2]));
            }
            return copy;
        }
    case 3:
      if (state0 === 3 || state0 === 0 && e instanceof Array)
        switch (state0) {
          case 0:
            slot = this.findSlot_5.call$1(e);
            copy = this.readSlot_4.call$1(slot);
            if (!(copy == null))
              return copy;
            var length$ = $.get$length(e);
            copy = this.mustCopy_6 === true ? new Array(length$) : e;
          case 3:
            state0 = 0;
            this.writeSlot_7.call$2(slot, copy);
            for (var i = 0; $.ltB(i, length$); ++i)
              $.indexSet(copy, i, this.call$1($.index(e, i)));
            return copy;
        }
      return e;
  }
}
};

$$._convertNativeToDart_IDBKey_containsDate = {"":
 [],
 "super": "Closure",
 call$1: function(object) {
  if (object instanceof Date)
    return true;
  if (typeof object === 'object' && object !== null && (object.constructor === Array || object.is$List())) {
    if (typeof object !== 'object' || object === null || object.constructor !== Array && !object.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(1, object);
    for (var i = 0; i < object.length; ++i)
      if (this.call$1(object[i]) === true)
        return true;
  }
  return false;
},
 call$1$bailout: function(state0, env0) {
  switch (state0) {
    case 1:
      var object = env0;
      break;
  }
  switch (state0) {
    case 0:
      if (object instanceof Date)
        return true;
    case 1:
      if (state0 === 1 || state0 === 0 && typeof object === 'object' && object !== null && (object.constructor === Array || object.is$List()))
        switch (state0) {
          case 0:
          case 1:
            state0 = 0;
            for (var i = 0; $.ltB(i, $.get$length(object)); ++i)
              if (this.call$1($.index(object, i)) === true)
                return true;
        }
      return false;
  }
}
};

$$._BaseSendPort_call_anon = {"":
 ["port_1", "completer_0"],
 "super": "Closure",
 call$2: function(value, ignoreReplyTo) {
  this.port_1.close$0();
  var t1 = typeof value === 'object' && value !== null && !!value.is$Exception;
  var t2 = this.completer_0;
  if (t1)
    t2.completeException$1(value);
  else
    t2.complete$1(value);
}
};

$$._NativeJsSendPort_send_anon = {"":
 ["this_5", "message_4", "replyTo_3"],
 "super": "Closure",
 call$0: function() {
  var t1 = {};
  var t2 = this.this_5;
  var t3 = this.replyTo_3;
  t2._checkReplyTo$1(t3);
  var isolate = $.index($._globalState().get$isolates(), t2.get$_isolateId());
  if (isolate == null)
    return;
  if (t2.get$_receivePort().get$_callback() == null)
    return;
  var shouldSerialize = !($._globalState().get$currentContext() == null) && !$.eqB($._globalState().get$currentContext().get$id(), t2.get$_isolateId());
  var msg = this.message_4;
  t1.msg_1 = msg;
  t1.reply_2 = t3;
  if (shouldSerialize) {
    t1.msg_1 = $._serializeMessage(t1.msg_1);
    t1.reply_2 = $._serializeMessage(t1.reply_2);
  }
  $._globalState().get$topEventLoop().enqueue$3(isolate, new $._NativeJsSendPort_send_anon0(t2, t1, shouldSerialize), 'receive ' + $.S(msg));
}
};

$$._NativeJsSendPort_send_anon0 = {"":
 ["this_7", "box_0", "shouldSerialize_6"],
 "super": "Closure",
 call$0: function() {
  var t1 = this.this_7;
  if (!(t1.get$_receivePort().get$_callback() == null)) {
    if (this.shouldSerialize_6 === true) {
      var t2 = this.box_0;
      t2.msg_1 = $._deserializeMessage(t2.msg_1);
      t2.reply_2 = $._deserializeMessage(t2.reply_2);
    }
    t1 = t1.get$_receivePort();
    t2 = this.box_0;
    t1._callback$2(t2.msg_1, t2.reply_2);
  }
}
};

$$._waitForPendingPorts_anon = {"":
 ["callback_0"],
 "super": "Closure",
 call$1: function(_) {
  return this.callback_0.call$0();
}
};

$$._WorkerSendPort_send_anon = {"":
 ["this_2", "message_1", "replyTo_0"],
 "super": "Closure",
 call$0: function() {
  var t1 = this.this_2;
  var t2 = this.replyTo_0;
  t1._checkReplyTo$1(t2);
  var workerMessage = $._serializeMessage($.makeLiteralMap(['command', 'message', 'port', t1, 'msg', this.message_1, 'replyTo', t2]));
  t2 = $._globalState().get$isWorker() === true;
  var t3 = $._globalState;
  if (t2)
    t3().get$mainManager().postMessage$1(workerMessage);
  else
    $.index(t3().get$managers(), t1.get$_workerId()).postMessage$1(workerMessage);
}
};

$$._PendingSendPortFinder_visitMap_anon = {"":
 ["this_0"],
 "super": "Closure",
 call$1: function(e) {
  return this.this_0._dispatch$1(e);
}
};

$$._StorageImpl_getValues_anon = {"":
 ["values_0"],
 "super": "Closure",
 call$2: function(k, v) {
  return $.add$1(this.values_0, v);
}
};

$$.HashMapImplementation_getValues__ = {"":
 ["list_2", "box_0"],
 "super": "Closure",
 call$2: function(key, value) {
  var t1 = this.list_2;
  var t2 = this.box_0;
  var t3 = t2.i_1;
  t2.i_1 = $.add(t3, 1);
  $.indexSet(t1, t3, value);
}
};

$$.LinkedHashMapImplementation_getValues__ = {"":
 ["list_2", "box_0"],
 "super": "Closure",
 call$1: function(entry) {
  var t1 = this.list_2;
  var t2 = this.box_0;
  var t3 = t2.index_1;
  t2.index_1 = $.add(t3, 1);
  $.indexSet(t1, t3, entry.get$value());
}
};

$$._StorageImpl_getKeys_anon = {"":
 ["keys_0"],
 "super": "Closure",
 call$2: function(k, v) {
  return $.add$1(this.keys_0, k);
}
};

$$.HashMapImplementation_getKeys__ = {"":
 ["list_2", "box_0"],
 "super": "Closure",
 call$2: function(key, value) {
  var t1 = this.list_2;
  var t2 = this.box_0;
  var t3 = t2.i_10;
  t2.i_10 = $.add(t3, 1);
  $.indexSet(t1, t3, key);
}
};

$$.LinkedHashMapImplementation_getKeys__ = {"":
 ["list_2", "box_0"],
 "super": "Closure",
 call$1: function(entry) {
  var t1 = this.list_2;
  var t2 = this.box_0;
  var t3 = t2.index_10;
  t2.index_10 = $.add(t3, 1);
  $.indexSet(t1, t3, entry.get$key());
}
};

$$._Copier_visitMap_anon = {"":
 ["this_2", "box_0"],
 "super": "Closure",
 call$2: function(key, val) {
  var t1 = this.box_0.copy_10;
  var t2 = this.this_2;
  $.indexSet(t1, t2._dispatch$1(key), t2._dispatch$1(val));
}
};

$$._PendingSendPortFinder_visitList_anon = {"":
 ["this_0"],
 "super": "Closure",
 call$1: function(e) {
  return this.this_0._dispatch$1(e);
}
};

$$.Futures_wait_anon = {"":
 ["completer_5", "pos_4", "box_0", "result_3", "values_2"],
 "super": "Closure",
 call$1: function(value) {
  var t1 = this.values_2;
  $.indexSet(t1, this.pos_4, value);
  var t2 = this.box_0;
  var remaining = $.sub(t2.remaining_1, 1);
  t2.remaining_1 = remaining;
  if ($.eqB(remaining, 0) && this.result_3.get$isComplete() !== true)
    this.completer_5.complete$1(t1);
}
};

$$.Futures_wait_anon0 = {"":
 ["future_8", "completer_7", "result_6"],
 "super": "Closure",
 call$1: function(exception) {
  if (this.result_6.get$isComplete() !== true)
    this.completer_7.completeException$2(exception, this.future_8.get$stackTrace());
  return true;
}
};

$$._IsolateNatives__startNonWorker_function = {"":
 ["functionName_1", "replyPort_0"],
 "super": "Closure",
 call$0: function() {
  $._IsolateNatives__startIsolate($._IsolateNatives__getJSFunctionFromName(this.functionName_1), this.replyPort_0);
}
};

$$._IsolateNatives__spawnWorker_anon = {"":
 ["worker_0"],
 "super": "Closure",
 call$1: function(e) {
  $._IsolateNatives__processWorkerMessage(this.worker_0, e);
}
};

$$._IsolateNatives__processWorkerMessage_function = {"":
 ["entryPoint_1", "replyTo_0"],
 "super": "Closure",
 call$0: function() {
  $._IsolateNatives__startIsolate(this.entryPoint_1, this.replyTo_0);
}
};

$$._IsolateNatives__startIsolate_anon = {"":
 [],
 "super": "Closure",
 call$0: function() {
  $._TimerFactory__factory = $._timerFactory;
  return;
}
};

$$.anon0 = {"":
 ["this_1", "callback_0"],
 "super": "Closure",
 call$0: function() {
  return this.callback_0.call$1(this.this_1);
}
};

$$.anon1 = {"":
 ["this_1", "callback_0"],
 "super": "Closure",
 call$0: function() {
  return this.callback_0.call$1(this.this_1);
}
};

$$._irvElectionIsolate_anon = {"":
 [],
 "super": "Closure",
 call$2: function(ballots, reply) {
  reply.send$1($.IrvElection_IrvElection(ballots));
}
};

$$.IrvElection_IrvElection_anon = {"":
 [],
 "super": "Closure",
 call$1: function(b) {
  return b.get$rank();
}
};

$$.IrvRound_IrvRound_anon = {"":
 ["eliminatedCandidates_2"],
 "super": "Closure",
 call$1: function(b) {
  var pruned = $.$$(b.get$rank()).exclude$1(this.eliminatedCandidates_2).toReadOnlyCollection$0();
  var winner = $.eqB($.get$length(pruned), 0) ? null : $.index(pruned, 0);
  return $.Tuple3$(b, pruned, winner);
}
};

$$.IrvRound_IrvRound_anon0 = {"":
 [],
 "super": "Closure",
 call$1: function(t) {
  return !(t.get$item3() == null);
}
};

$$.IrvRound_IrvRound_anon1 = {"":
 [],
 "super": "Closure",
 call$1: function(t) {
  return !(t.get$item3() == null);
}
};

$$.IrvRound_IrvRound_anon2 = {"":
 [],
 "super": "Closure",
 call$1: function(tuple) {
  return tuple.get$item3();
}
};

$$.IrvRound_IrvRound_anon3 = {"":
 ["candidateAllocations_3"],
 "super": "Closure",
 call$1: function(c) {
  return $.get$length($.index(this.candidateAllocations_3, c));
}
};

$$.IrvRound_IrvRound_anon4 = {"":
 [],
 "super": "Closure",
 call$2: function(a, b) {
  return $.compareTo(b, a);
}
};

$$.IrvRound_IrvRound_anon5 = {"":
 ["box_0", "voteGroups_4"],
 "super": "Closure",
 call$1: function(pv) {
  var vg = $.index(this.voteGroups_4, pv);
  var t1 = this.box_0;
  var currentPlaceNumber = t1.placeNumber_1;
  t1.placeNumber_1 = $.add(currentPlaceNumber, $.get$length(vg));
  return $.PluralityElectionPlace$(currentPlaceNumber, vg, pv);
}
};

$$.IrvRound_IrvRound_anon6 = {"":
 ["newlyEliminatedCandidates_6", "cleanedBallots_5"],
 "super": "Closure",
 call$1: function(c) {
  var xfers = $.HashMapImplementation$();
  var exhausted = $.ListImplementation_List(null);
  for (var t1 = $.iterator($.filter(this.cleanedBallots_5, new $.IrvRound_IrvRound_anon7(c))), t2 = this.newlyEliminatedCandidates_6; t1.hasNext$0() === true;) {
    var t3 = t1.next$0();
    var rb = t3.get$item1();
    var pruned = t3.get$item2().exclude$1(t2);
    if ($.eqB($.get$length(pruned), 0))
      exhausted.push(rb);
    else
      $.add$1(xfers.putIfAbsent$2(pruned.first$0(), new $.IrvRound_IrvRound_anon8()), rb);
  }
  return $.IrvElimination$(c, xfers, $.$$(exhausted).toReadOnlyCollection$0());
}
};

$$.IrvRound_IrvRound_anon7 = {"":
 ["c_7"],
 "super": "Closure",
 call$1: function(t) {
  return $.eq(t.get$item3(), this.c_7);
}
};

$$.IrvRound_IrvRound_anon8 = {"":
 [],
 "super": "Closure",
 call$0: function() {
  return $.ListImplementation_List(null);
}
};

$$.IrvRound_eliminatedCandidates_anon = {"":
 [],
 "super": "Closure",
 call$1: function(ie) {
  return ie.get$candidate();
}
};

$$.IrvRound__getEliminatedCandidates_anon = {"":
 [],
 "super": "Closure",
 call$1: function(p) {
  return $.mul(p.get$voteCount(), $.get$length(p));
}
};

$$.IrvRound__getEliminatedCandidates_anon0 = {"":
 [],
 "super": "Closure",
 call$1: function(p) {
  return p;
}
};

$$.Enumerable_selectNumbers_anon = {"":
 ["f_0"],
 "super": "Closure",
 call$1: function(s) {
  return $._SelectIterator$(s, this.f_0);
}
};

$$.Enumerable_count_anon = {"":
 [],
 "super": "Closure",
 call$1: function(a) {
  return true;
}
};

$$.ListBase_iterator_anon = {"":
 ["this_0"],
 "super": "Closure",
 call$1: function(i) {
  return $.index(this.this_0, i);
}
};

$$.anon2 = {"":
 [],
 "super": "Closure",
 call$1: function(v) {
  return v;
}
};

$$.anon3 = {"":
 [],
 "super": "Closure",
 call$0: function() {
  return $.ListImplementation_List(null);
}
};

$$.Enumerable_distinct_anon = {"":
 [],
 "super": "Closure",
 call$2: function(a, b) {
  return $.eq(a, b);
}
};

$$.Enumerable_distinct_anon0 = {"":
 ["box_0"],
 "super": "Closure",
 call$1: function(s) {
  return $._DistinctIterator$(s, this.box_0.comparer_1);
}
};

$$._DistinctIterator_hasNext_anon = {"":
 ["this_0"],
 "super": "Closure",
 call$1: function(e) {
  var t1 = this.this_0;
  return t1._comparer$2(e, t1.get$_current()) !== true;
}
};

$$.Enumerable_first_anon = {"":
 [],
 "super": "Closure",
 call$1: function(e) {
  return true;
}
};

$$.Enumerable_selectMany_anon = {"":
 ["f_0"],
 "super": "Closure",
 call$1: function(s) {
  return $._SelectManyIterator$_internal(s, this.f_0);
}
};

$$.Enumerable_exclude_anon0 = {"":
 ["iEnum_0"],
 "super": "Closure",
 call$1: function(e) {
  return $.contains$1(this.iEnum_0, e) !== true;
}
};

$$.Enumerable_exclude_anon = {"":
 ["f_1"],
 "super": "Closure",
 call$1: function(s) {
  return $._WhereIterator$(s, this.f_1);
}
};

$$.Enumerable_filter_anon = {"":
 ["f_0"],
 "super": "Closure",
 call$1: function(s) {
  return $._WhereIterator$(s, this.f_0);
}
};

$$.Enumerable_map_anon = {"":
 ["f_0"],
 "super": "Closure",
 call$1: function(s) {
  return $._SelectIterator$(s, this.f_0);
}
};

$$.Enumerable_isEmpty_anon = {"":
 [],
 "super": "Closure",
 call$1: function(e) {
  return true;
}
};

$$._condorcetElectionIsolate_anon = {"":
 [],
 "super": "Closure",
 call$2: function(ballots, reply) {
  reply.send$1($.CondorcetElection_CondorcetElection(ballots));
}
};

$$.CondorcetElection_CondorcetElection_anon = {"":
 [],
 "super": "Closure",
 call$1: function(b) {
  return b.get$voter();
}
};

$$.CondorcetElection_CondorcetElection_anon0 = {"":
 [],
 "super": "Closure",
 call$0: function() {
  return $.ListImplementation_List(null);
}
};

$$.CondorcetElection_CondorcetElection_anon1 = {"":
 ["hashSet_0"],
 "super": "Closure",
 call$2: function(k, v) {
  var c = $.CondorcetPair_CondorcetPair(k.get$item1(), k.get$item2(), v);
  $.add$1(this.hashSet_0, c);
}
};

$$._TarjanList__TarjanList_anon = {"":
 ["nodes_1", "map_0"],
 "super": "Closure",
 call$2: function(k, v) {
  var t1 = this.map_0;
  var tKey = t1.putIfAbsent$2(k, new $._TarjanList__TarjanList_anon0(k));
  var t2 = this.nodes_1;
  var edges = $.HashSet_HashSet();
  $.indexSet(t2, tKey, edges);
  if (!(v == null))
    for (t2 = $.iterator(v); t2.hasNext$0() === true;) {
      var t3 = t2.next$0();
      $.add$1(edges, t1.putIfAbsent$2(t3, new $._TarjanList__TarjanList_anon1(t3)));
    }
}
};

$$._TarjanList__TarjanList_anon0 = {"":
 ["k_2"],
 "super": "Closure",
 call$0: function() {
  return $._TarjanNode$(this.k_2);
}
};

$$._TarjanList__TarjanList_anon1 = {"":
 ["edge_3"],
 "super": "Closure",
 call$0: function() {
  return $._TarjanNode$(this.edge_3);
}
};

$$.HashSetImplementation_filter__ = {"":
 ["f_1", "result_0"],
 "super": "Closure",
 call$2: function(key, value) {
  if (this.f_1.call$1(key) === true)
    $.add$1(this.result_0, key);
}
};

$$.HashSetImplementation_map__ = {"":
 ["f_1", "result_0"],
 "super": "Closure",
 call$2: function(key, value) {
  $.add$1(this.result_0, this.f_1.call$1(key));
}
};

$$.HashSetImplementation_forEach__ = {"":
 ["f_0"],
 "super": "Closure",
 call$2: function(key, value) {
  this.f_0.call$1(key);
}
};

$$.HashSetImplementation_addAll__ = {"":
 ["this_0"],
 "super": "Closure",
 call$1: function(value) {
  this.this_0.add$1(value);
}
};

$$.CondorcetPair_CondorcetPair_anon = {"":
 ["box_0"],
 "super": "Closure",
 call$1: function(b) {
  var t1 = b.get$rank();
  var t2 = this.box_0;
  var firstIndex = $.indexOf$1(t1, t2.can1_1);
  $.requireArgument($.ge(firstIndex, 0), '', null);
  var secondIndex = $.indexOf$1(b.get$rank(), t2.can2_2);
  $.requireArgument($.ge(secondIndex, 0), '', null);
  if ($.ltB(firstIndex, secondIndex))
    t2.fos_3 = $.add(t2.fos_3, 1);
  else
    t2.sof_4 = $.add(t2.sof_4, 1);
}
};

$$._pluralityElectionIsolate_anon = {"":
 [],
 "super": "Closure",
 call$2: function(ballots, reply) {
  reply.send$1($.PluralityElection_PluralityElection(ballots));
}
};

$$.PluralityElection_PluralityElection_anon = {"":
 [],
 "super": "Closure",
 call$1: function(pb) {
  return pb.get$voter();
}
};

$$.PluralityElection_PluralityElection_anon0 = {"":
 [],
 "super": "Closure",
 call$1: function(pb) {
  return pb.get$choice();
}
};

$$.PluralityElection_PluralityElection_anon1 = {"":
 ["voteCounts_0"],
 "super": "Closure",
 call$2: function(c, b) {
  var count = $.get$length(b);
  $.add$1(this.voteCounts_0.putIfAbsent$2(count, new $.PluralityElection_PluralityElection_anon3()), c);
}
};

$$.PluralityElection_PluralityElection_anon3 = {"":
 [],
 "super": "Closure",
 call$0: function() {
  return $.ListImplementation_List(null);
}
};

$$.PluralityElection_PluralityElection_anon2 = {"":
 [],
 "super": "Closure",
 call$2: function(a, b) {
  return $.compareTo(b, a);
}
};

$$._distanceElectionIsolate_anon = {"":
 [],
 "super": "Closure",
 call$2: function(data, reply) {
  reply.send$1($.DistanceElection_DistanceElection$fromData(data));
}
};

$$.IrvRound_candidates_anon = {"":
 [],
 "super": "Closure",
 call$1: function(p) {
  return p;
}
};

$$.DistanceElection_DistanceElection_anon = {"":
 ["cans_2"],
 "super": "Closure",
 call$1: function(voter) {
  return $.DistanceBallot_DistanceBallot(voter, this.cans_2);
}
};

$$.DistanceElection_DistanceElection_anon0 = {"":
 ["ballots_3"],
 "super": "Closure",
 call$1: function(candidate) {
  for (var t1 = $.iterator(this.ballots_3), sumOfSquaredDistance = 0, count = 0, sumOfDistance = 0; t1.hasNext$0() === true;) {
    var distance = t1.next$0().getDistance$1(candidate);
    if (typeof distance !== 'number')
      throw $.iae(distance);
    sumOfDistance += distance;
    sumOfSquaredDistance += distance * distance;
    ++count;
  }
  return $.Tuple$(sumOfDistance / count, sumOfSquaredDistance / count);
}
};

$$.DistanceElection_DistanceElection_anon1 = {"":
 [],
 "super": "Closure",
 call$2: function(a, b) {
  return $.compareTo(a.get$item1(), b.get$item1());
}
};

$$.DistanceElection_DistanceElection_anon2 = {"":
 ["box_0", "distanceGroups_4"],
 "super": "Closure",
 call$1: function(d) {
  var placeCans = $.index(this.distanceGroups_4, d);
  var t1 = this.box_0;
  var place = $.DistanceElectionPlace$(t1.placeNumber_10, placeCans, d.get$item1(), d.get$item2());
  t1.placeNumber_10 = $.add(t1.placeNumber_10, $.get$length(placeCans));
  return place;
}
};

$$.DistanceBallot_DistanceBallot_anon = {"":
 ["voter_0"],
 "super": "Closure",
 call$1: function(c) {
  return $.div($.toInt($.mul(this.voter_0.get$location().getDistance$1(c.get$location()), 128)), 128);
}
};

$$.DistanceBallot_DistanceBallot_anon0 = {"":
 ["distances_1"],
 "super": "Closure",
 call$2: function(a, b) {
  var t1 = this.distances_1;
  var d = $.compareTo($.index(t1, a), $.index(t1, b));
  if ($.eqB(d, 0))
    d = $.rnd().nextBool$0() === true ? -1 : 1;
  return d;
}
};

$$.Enumerable_toHashMap_anon = {"":
 [],
 "super": "Closure",
 call$1: function(a) {
  return a;
}
};

$$.LocationData_LocationData$random_anon = {"":
 [],
 "super": "Closure",
 call$1: function(c) {
  return c.scale$1(10);
}
};

$$.LocationData_LocationData$random_anon0 = {"":
 ["candidates_0"],
 "super": "Closure",
 call$2: function(c, i) {
  var candidate = $.MapPlayer$(c, $.LocationData_getCandidateName(i));
  $.add$1(this.candidates_0, candidate);
}
};

$$.Mouse_markMouseOver_anon = {"":
 [],
 "super": "Closure",
 call$1: function(e) {
  $.get$Mouse_isMouseOverProperty().clear$1(e);
  $.get$Mouse_isMouseDirectlyOverProperty().clear$1(e);
}
};

$$.Mouse_markMouseOver_anon0 = {"":
 [],
 "super": "Closure",
 call$1: function(e) {
  $.get$Mouse_isMouseOverProperty().set$2(e, true);
}
};

$$.AffineTransform_toString_anon = {"":
 [],
 "super": "Closure",
 call$1: function(n) {
  return $.toString(n);
}
};

$$.RootMapElement_dragCandidate_anon = {"":
 ["candidate_0"],
 "super": "Closure",
 call$1: function(mp) {
  return $.eq(mp, this.candidate_0);
}
};

$$.Enumerable_single_anon = {"":
 [],
 "super": "Closure",
 call$1: function(e) {
  return true;
}
};

$$.LocationData_cloneAndRemove_anon = {"":
 ["mp_0"],
 "super": "Closure",
 call$1: function(e) {
  return !$.eqB(e, this.mp_0);
}
};

$$._CssClassSet_clear_anon = {"":
 [],
 "super": "Closure",
 call$1: function(s) {
  return $.clear(s);
}
};

$$._CssClassSet_addAll_anon = {"":
 ["collection_0"],
 "super": "Closure",
 call$1: function(s) {
  return $.addAll(s, this.collection_0);
}
};

$$._CssClassSet_add_anon = {"":
 ["value_0"],
 "super": "Closure",
 call$1: function(s) {
  return $.add$1(s, this.value_0);
}
};

$$.ConstantMap_getValues_anon = {"":
 ["this_1", "result_0"],
 "super": "Closure",
 call$1: function(key) {
  return $.add$1(this.result_0, $.index(this.this_1, key));
}
};

$$.ConstantMap_forEach_anon = {"":
 ["this_1", "f_0"],
 "super": "Closure",
 call$1: function(key) {
  return this.f_0.call$2(key, $.index(this.this_1, key));
}
};

$$._ChildrenElementList_filter_anon = {"":
 ["f_1", "output_0"],
 "super": "Closure",
 call$1: function(element) {
  if (this.f_1.call$1(element) === true)
    $.add$1(this.output_0, element);
}
};

$$._FilteredElementList__filtered_anon = {"":
 [],
 "super": "Closure",
 call$1: function(n) {
  return typeof n === 'object' && n !== null && n.is$Element();
}
};

$$._FilteredElementList_removeRange_anon = {"":
 [],
 "super": "Closure",
 call$1: function(el) {
  return el.remove$0();
}
};

$$.CondorcetView_updateElement_anon = {"":
 [],
 "super": "Closure",
 call$1: function(p) {
  return p;
}
};

$$.CondorcetView__updateCellHoverStyle_anon = {"":
 ["hoverPairClass_0"],
 "super": "Closure",
 call$1: function(e) {
  e.get$classes().remove$1(this.hoverPairClass_0);
}
};

$$.CondorcetView__updateCellHoverStyle_anon0 = {"":
 ["hoverPairClass_1"],
 "super": "Closure",
 call$1: function(e) {
  $.add$1(e.get$classes(), this.hoverPairClass_1);
}
};

$$.CondorcetView__getPair_anon = {"":
 [],
 "super": "Closure",
 call$1: function(s) {
  return $.parseInt(s);
}
};

$$._DataAttributeMap_getKeys_anon = {"":
 ["this_1", "keys_0"],
 "super": "Closure",
 call$2: function(key, value) {
  var t1 = this.this_1;
  if (t1._matches$1(key) === true)
    $.add$1(this.keys_0, t1._strip$1(key));
}
};

$$._DataAttributeMap_getValues_anon = {"":
 ["this_1", "values_0"],
 "super": "Closure",
 call$2: function(key, value) {
  if (this.this_1._matches$1(key) === true)
    $.add$1(this.values_0, value);
}
};

$$._DataAttributeMap_forEach_anon = {"":
 ["this_1", "f_0"],
 "super": "Closure",
 call$2: function(key, value) {
  var t1 = this.this_1;
  if (t1._matches$1(key) === true)
    this.f_0.call$2(t1._strip$1(key), value);
}
};

$$.CondorcetElection_getPair_anon = {"":
 ["c1_1", "c2_0"],
 "super": "Closure",
 call$1: function(p) {
  return p.matches$2(this.c1_1, this.c2_0);
}
};

$$.IrvView_updateElement_anon = {"":
 [],
 "super": "Closure",
 call$1: function(p) {
  return p;
}
};

$$.CandidateManagerView__removeCandidateWithId_anon = {"":
 ["id_0"],
 "super": "Closure",
 call$1: function(mp) {
  return $.eq(mp.get$id(), this.id_0);
}
};

$$.ElementParentImpl_drawOverride_anon = {"":
 ["ctx_0"],
 "super": "Closure",
 call$1: function(e) {
  return e.drawCore$1(this.ctx_0);
}
};

$$._ElementImpl_rect_anon = {"":
 ["this_0"],
 "super": "Closure",
 call$0: function() {
  return $._ElementRectImpl$(this.this_0);
}
};

$$._MutationObserverImpl_observe_anon = {"":
 ["parsedOptions_0"],
 "super": "Closure",
 call$2: function(k, v) {
  if ($.CTC39.containsKey$1(k) === true)
    this.parsedOptions_0[k] = true === v;
  else if ($.eqB(k, 'attributeFilter'))
    this.parsedOptions_0[k] = v;
  else
    throw $.$$throw($.ArgumentError$('Illegal MutationObserver.observe option \'' + $.S(k) + '\''));
}
};

$$._MutationObserverImpl_observe_override = {"":
 ["parsedOptions_1"],
 "super": "Closure",
 call$2: function(key, value) {
  if (!(value == null))
    this.parsedOptions_1[key] = value;
}
};

$$._DocumentFragmentImpl_rect_anon = {"":
 [],
 "super": "Closure",
 call$0: function() {
  return $.CTC40;
}
};

$$.RootMapElement_update_anon = {"":
 ["this_0"],
 "super": "Closure",
 call$1: function(m) {
  var t1 = this.this_0;
  m.set$_radius(t1.get$_radius());
  m.setTransform$1(t1.get$_tx());
}
};

$$.ElementParentImpl_update_anon = {"":
 [],
 "super": "Closure",
 call$1: function(e) {
  return e.update$0();
}
};

$$.startRootIsolate_anon = {"":
 [],
 "super": "Closure",
 call$0: function() {
  $._TimerFactory__factory = $._timerFactory;
  return;
}
};

$$._EventLoop__runHelper_next = {"":
 ["this_0"],
 "super": "Closure",
 call$0: function() {
  if (this.this_0.runIteration$0() !== true)
    return;
  $._window().setTimeout$2(this, 0);
}
};

$$.BoundClosure = {'':
 ['self', 'target'],
 'super': 'Closure',
call$1: function(p0) { return this.self[this.target](p0); }
};
$$.BoundClosure0 = {'':
 ['self', 'target'],
 'super': 'Closure',
call$0: function() { return this.self[this.target](); }
};
$$.BoundClosure1 = {'':
 ['self', 'target'],
 'super': 'Closure',
call$2: function(p0, p1) { return this.self[this.target](p0, p1); }
};
$._NativeJsSendPort$ = function(_receivePort, isolateId) {
  return new $._NativeJsSendPort(_receivePort, isolateId);
};

$.eqB = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return a.operator$eq$1(b) === true;
  return a === b;
};

$.StackTrace$ = function(stack) {
  return new $.StackTrace(stack);
};

$._MediaStreamTrackEventsImpl$ = function(_ptr) {
  return new $._MediaStreamTrackEventsImpl(_ptr);
};

$.isJsArray = function(value) {
  return !(value == null) && value.constructor === Array;
};

$.Size$ = function(width, height) {
  return new $.Size(width, height);
};

$._IDBTransactionEventsImpl$ = function(_ptr) {
  return new $._IDBTransactionEventsImpl(_ptr);
};

$.DistanceBallot$_internal = function(voter, items, _distances) {
  return new $.DistanceBallot(_distances, items, items.operator$index$1(0), voter);
};

$.ListImplementation_List$from = function(other) {
  return $.ListImplementation__from(other);
};

$._EventSourceEventsImpl$ = function(_ptr) {
  return new $._EventSourceEventsImpl(_ptr);
};

$._Collections_filter = function(source, destination, f) {
  for (var t1 = $.iterator(source); t1.hasNext$0() === true;) {
    var t2 = t1.next$0();
    if (f.call$1(t2) === true)
      destination.push(t2);
  }
  return destination;
};

$._LocationCrossFrameImpl$ = function(_location) {
  return new $._LocationCrossFrameImpl(_location);
};

$._convertDartToNative_PrepareForStructuredClone = function(value) {
  var values = [];
  var copies = [];
  var t1 = new $._convertDartToNative_PrepareForStructuredClone_findSlot(copies, values);
  var t2 = new $._convertDartToNative_PrepareForStructuredClone_readSlot(copies);
  var t3 = new $._convertDartToNative_PrepareForStructuredClone_writeSlot(copies);
  var t4 = new $._convertDartToNative_PrepareForStructuredClone_cleanupSlots();
  var copy = new $._convertDartToNative_PrepareForStructuredClone_walk(t3, t1, t2).call$1(value);
  t4.call$0();
  return copy;
};

$.floor = function(receiver) {
  return Math.floor(receiver);
};

$._WebSocketEventsImpl$ = function(_ptr) {
  return new $._WebSocketEventsImpl(_ptr);
};

$.shr = function(a, b) {
  if ($.checkNumbers(a, b)) {
    if (b < 0)
      throw $.$$throw($.ArgumentError$(b));
    if (a > 0) {
      if (b > 31)
        return 0;
      return a >>> b;
    }
    if (b > 31)
      b = 31;
    return (a >> b) >>> 0;
  }
  return a.operator$shr$1(b);
};

$.and = function(a, b) {
  if ($.checkNumbers(a, b))
    return (a & b) >>> 0;
  return a.operator$and$1(b);
};

$.Tuple3$ = function(param1, param2, item3) {
  return new $.Tuple3(item3, param1, param2);
};

$._MediaStreamEventsImpl$ = function(_ptr) {
  return new $._MediaStreamEventsImpl(_ptr);
};

$.mul$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a * b;
  return a.operator$mul$1(b);
};

$._AllMatchesIterator$ = function(re, _str) {
  return new $._AllMatchesIterator($.JSSyntaxRegExp__globalVersionOf(re), _str, null, false);
};

$._waitForPendingPorts = function(message, callback) {
  var finder = $._PendingSendPortFinder$();
  finder.traverse$1(message);
  $.Futures_wait(finder.ports).then$1(new $._waitForPendingPorts_anon(callback));
};

$._condorcetElectionIsolate = function() {
  $.port().receive$1(new $._condorcetElectionIsolate_anon());
};

$._EventsImpl$ = function(_ptr) {
  return new $._EventsImpl(_ptr);
};

$.NoSuchMethodError$ = function(_receiver, _functionName, _arguments, existingArgumentNames) {
  return new $.NoSuchMethodError(_receiver, _functionName, _arguments, existingArgumentNames);
};

$.Strings_join = function(strings, separator) {
  return $.StringImplementation_join(strings, separator);
};

$.StringImplementation_join = function(strings, separator) {
  $.checkNull(strings);
  $.checkNull(separator);
  return $.stringJoinUnchecked($.StringImplementation__toJsStringArray(strings), separator);
};

$.add$1 = function(receiver, value) {
  if ($.isJsArray(receiver)) {
    $.checkGrowable(receiver, 'add');
    receiver.push(value);
    return;
  }
  return receiver.add$1(value);
};

$._JsCopier$ = function() {
  var t1 = new $._JsCopier($._MessageTraverserVisitedMap$());
  t1._JsCopier$0();
  return t1;
};

$.get$length = function(receiver) {
  if (typeof receiver === 'string' || $.isJsArray(receiver))
    return receiver.length;
  else
    return receiver.get$length();
};

$.int_parse = function(source) {
  return $.Primitives_parseInt(source);
};

$.regExpMakeNative = function(regExp, global) {
  var pattern = regExp.get$pattern();
  var multiLine = regExp.get$multiLine();
  var ignoreCase = regExp.get$ignoreCase();
  $.checkString(pattern);
  var sb = $.StringBuffer_StringBuffer('');
  if (multiLine === true)
    $.add$1(sb, 'm');
  if (ignoreCase === true)
    $.add$1(sb, 'i');
  if (global)
    $.add$1(sb, 'g');
  try {
    return new RegExp(pattern, $.toString(sb));
  } catch (exception) {
    var t1 = $.unwrapException(exception);
    var e = t1;
    throw $.$$throw($.IllegalJSRegExpException$(pattern, String(e)));
  }

};

$.ListImplementation__from = function(other) {
  var result = $.ListImplementation_List(null);
  for (var t1 = $.iterator(other); t1.hasNext$0() === true;)
    result.push(t1.next$0());
  return result;
};

$._FrozenElementListIterator$ = function(_list) {
  return new $._FrozenElementListIterator(_list, 0);
};

$.MetaInfo$ = function(_tag, _tags, _set) {
  return new $.MetaInfo(_tag, _tags, _set);
};

$._isJavaScriptSimpleObject = function(value) {
  return Object.getPrototypeOf(value) === Object.prototype;
};

$._ChildNodeListLazy$ = function(_this) {
  return new $._ChildNodeListLazy(_this);
};

$._callInIsolate = function(isolate, function$) {
  isolate.eval$1(function$);
  $._globalState().get$topEventLoop().run$0();
};

$.regExpAttachGlobalNative = function(regExp) {
  regExp._re = $.regExpMakeNative(regExp, true);
};

$._IDBRequestEventsImpl$ = function(_ptr) {
  return new $._IDBRequestEventsImpl(_ptr);
};

$.CanvasUtil_centeredCircle = function(ctx, x, y, radius) {
  $.CanvasUtil_ellipse(ctx, $.sub(x, radius), $.sub(y, radius), $.mul(radius, 2), $.mul(radius, 2));
};

$.trim = function(receiver) {
  if (!(typeof receiver === 'string'))
    return receiver.trim$0();
  return receiver.trim();
};

$._TextTrackEventsImpl$ = function(_ptr) {
  return new $._TextTrackEventsImpl(_ptr);
};

$.DoubleLinkedQueue$ = function() {
  var t1 = new $.DoubleLinkedQueue(null);
  t1.DoubleLinkedQueue$0();
  return t1;
};

$._distanceElectionIsolate = function() {
  $.port().receive$1(new $._distanceElectionIsolate_anon());
};

$._SVGElementInstanceEventsImpl$ = function(_ptr) {
  return new $._SVGElementInstanceEventsImpl(_ptr);
};

$._Elements_createDivElement = function() {
  return $._document().$dom_createElement$1('div');
};

$._TarjanList$_internal = function(_nodes) {
  return new $._TarjanList(_nodes);
};

$.regExpTest = function(regExp, str) {
  return $.regExpGetNative(regExp).test(str);
};

$.StringImplementation_concatAll = function(strings) {
  return $.stringJoinUnchecked($.StringImplementation__toJsStringArray(strings), '');
};

$.NoMoreElementsException$ = function() {
  return new $.NoMoreElementsException();
};

$.gt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a > b;
  return a.operator$gt$1(b);
};

$._MutationObserverFactoryProvider_createMutationObserver = function(callback) {
  callback = $.convertDartClosureToJS(callback, 2);
    var constructor =
        window.MutationObserver || window.WebKitMutationObserver ||
        window.MozMutationObserver;
    return new constructor(callback);
  
};

$._SelectManyIterator$_internal = function(_sourceIterator, _func) {
  return new $._SelectManyIterator(_sourceIterator, _func, null);
};

$.listInsertRange = function(receiver, start, length$, initialValue) {
  if (typeof receiver !== 'object' || receiver === null || (receiver.constructor !== Array || !!receiver.immutable$list) && !receiver.is$JavaScriptIndexingBehavior())
    return $.listInsertRange$bailout(1, receiver, start, length$, initialValue);
  if (length$ === 0)
    return;
  $.checkNull(start);
  $.checkNull(length$);
  if (length$ < 0)
    throw $.$$throw($.ArgumentError$(length$));
  var receiverLength = receiver.length;
  if (start < 0 || start > receiverLength)
    throw $.$$throw($.IndexOutOfRangeException$(start));
  var t1 = receiverLength + length$;
  $.set$length(receiver, t1);
  var t2 = start + length$;
  $.Arrays_copy(receiver, start, receiver, t2, receiverLength - start);
  if (!(initialValue == null))
    for (var t3 = receiver.length, i = start; i < t2; ++i) {
      if (i < 0)
        throw $.ioore(i);
      receiver[i] = initialValue;
    }
  $.set$length(receiver, t1);
};

$._IDBDatabaseEventsImpl$ = function(_ptr) {
  return new $._IDBDatabaseEventsImpl(_ptr);
};

$.IrvElimination$ = function(candidate, _transfers, exhausted) {
  var t1 = new $.IrvElimination(candidate, _transfers, exhausted);
  t1.IrvElimination$3(candidate, _transfers, exhausted);
  return t1;
};

$.JSSyntaxRegExp__globalVersionOf = function(other) {
  var t1 = other.get$pattern();
  var t2 = other.get$multiLine();
  var re = $.JSSyntaxRegExp$(t1, other.get$ignoreCase(), t2);
  $.regExpAttachGlobalNative(re);
  return re;
};

$.tdiv = function(a, b) {
  if ($.checkNumbers(a, b))
    return $.truncate(a / b);
  return a.operator$tdiv$1(b);
};

$._MediaStreamTrackListEventsImpl$ = function(_ptr) {
  return new $._MediaStreamTrackListEventsImpl(_ptr);
};

$.Grouping$ = function(source, keyFunc) {
  var t1 = new $.Grouping($.HashMapImplementation$());
  t1.Grouping$2(source, keyFunc);
  return t1;
};

$._VoterHexMapper$ = function() {
  return new $._VoterHexMapper($.spawnFunction($._voterHexMapperIsolate), null, null, null, null, null, null, null, false, $.EventHandle$(), $.EventHandle$(), $.EventHandle$());
};

$.$$ = function(source) {
  if (typeof source === 'object' && source !== null && !!source.is$Enumerable)
    return source;
  else
    return $.Enumerable_Enumerable$fromIterable(source);
};

$.EventHandle$ = function() {
  return new $.EventHandle(null, false);
};

$.Uri__emptyIfNull = function(val) {
  return !(val == null) ? val : '';
};

$.stringSplitUnchecked = function(receiver, pattern) {
  return receiver.split(pattern);
};

$.lt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a < b;
  return a.operator$lt$1(b);
};

$.Collections__emitObject = function(o, result, visiting) {
  if (typeof o === 'object' && o !== null && (o.constructor === Array || o.is$Collection()))
    if ($.Collections__containsRef(visiting, o))
      $.add$1(result, typeof o === 'object' && o !== null && (o.constructor === Array || o.is$List()) ? '[...]' : '{...}');
    else
      $.Collections__emitCollection(o, result, visiting);
  else if (typeof o === 'object' && o !== null && o.is$Map())
    if ($.Collections__containsRef(visiting, o))
      $.add$1(result, '{...}');
    else
      $.Maps__emitMap(o, result, visiting);
  else
    $.add$1(result, o);
};

$.startRootIsolate = function(entry) {
  var t1 = $._Manager$();
  $._globalState0(t1);
  if ($._globalState().get$isWorker() === true)
    return;
  var rootContext = $._IsolateContext$();
  $._globalState().set$rootContext(rootContext);
  $._fillStatics(rootContext);
  $._globalState().set$currentContext(rootContext);
  if (!($._window() == null))
    rootContext.eval$1(new $.startRootIsolate_anon());
  rootContext.eval$1(entry);
  $._globalState().get$topEventLoop().run$0();
};

$.VoteDemo_VoteDemo = function(canvas, pluralityDiv, distanceDiv, condorcetDiv, canManDiv, irvDiv) {
  var voterMap = $.RootMapElement$(canvas.get$width(), canvas.get$height());
  var stage = $.Stage$(canvas, voterMap);
  var distanceView = $.DistanceView$(distanceDiv);
  var pluralityView = $.PluralityView$(pluralityDiv);
  var condorcetView = $.CondorcetView$(condorcetDiv);
  var irvView = $.IrvView$(irvDiv);
  var canManView = $.CandidateManagerView$(canManDiv);
  return $.VoteDemo$_internal(canvas, stage, $.Dragger$(canvas), voterMap, condorcetView, pluralityView, distanceView, canManView, irvView);
};

$.truncate = function(receiver) {
  return receiver < 0 ? $.ceil(receiver) : $.floor(receiver);
};

$.sort = function(receiver, compare) {
  if (!$.isJsArray(receiver))
    return receiver.sort$1(compare);
  $.checkMutable(receiver, 'sort');
  $.DualPivotQuicksort_sort(receiver, compare);
};

$.DualPivotQuicksort_sort = function(a, compare) {
  $.DualPivotQuicksort__doSort(a, 0, $.sub($.get$length(a), 1), compare);
};

$._convertNativeToDart_Window = function(win) {
  return $._DOMWindowCrossFrameImpl__createSafe(win);
};

$._PostMessageScheduler$ = function(callback) {
  var t1 = new $._PostMessageScheduler('DART-MEASURE', false, callback);
  t1._PostMessageScheduler$1(callback);
  return t1;
};

$._WorkerContextEventsImpl$ = function(_ptr) {
  return new $._WorkerContextEventsImpl(_ptr);
};

$._ElementEventsImpl$ = function(_ptr) {
  return new $._ElementEventsImpl(_ptr);
};

$.IrvElection_IrvElection = function(ballots) {
  var roBallots = $.$$(ballots).toReadOnlyCollection$0();
  var roCandidates = roBallots.selectMany$1(new $.IrvElection_IrvElection_anon()).distinct$0().toReadOnlyCollection$0();
  var rounds = $.ListImplementation_List(null);
  var eliminatedCandidates = $.ListImplementation_List(null);
  var round = null;
  do {
    round = $.IrvRound_IrvRound(roBallots, eliminatedCandidates);
    rounds.push(round);
    $.addAll(eliminatedCandidates, round.get$eliminatedCandidates());
  } while (round.get$isFinal() !== true);
  return $.IrvElection$_internal(roCandidates, roBallots, $.$$(rounds).toReadOnlyCollection$0());
};

$.isNegative = function(receiver) {
  if (typeof receiver === 'number')
    return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
  else
    return receiver.isNegative$0();
};

$.add$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a + b;
  return a.operator$add$1(b);
};

$.CondorcetView__getPair = function(elem) {
  var pairIdStr = $.index(elem.get$dataAttributes(), 'pair-ids');
  if (!(pairIdStr == null)) {
    var ids = $.map($.$$($.split($.substring$1(pairIdStr, 4), '_')), new $.CondorcetView__getPair_anon()).toList$0();
    return $.Tuple$($.index(ids, 0), $.index(ids, 1));
  }
  return;
};

$.RuntimeError$ = function(message) {
  return new $.RuntimeError(message);
};

$.Enumerable_Enumerable$fromIterable = function(source) {
  $.requireArgumentNotNull(source, 'source');
  return $._SimpleEnumerable$(source);
};

$._AllMatchesIterable$ = function(_re, _str) {
  return new $._AllMatchesIterable(_re, _str);
};

$._LocalWindowImpl__isDartLocation = function(thing) {
  try {
    var t1 = thing;
    return typeof t1 === 'object' && t1 !== null && t1.is$Location();
  } catch (exception) {
    $.unwrapException(exception);
    return false;
  }

};

$.Futures_wait = function(futures) {
  var t1 = {};
  if (typeof futures !== 'string' && (typeof futures !== 'object' || futures === null || futures.constructor !== Array && !futures.is$JavaScriptIndexingBehavior()))
    return $.Futures_wait$bailout(1, futures, t1);
  if ($.isEmpty(futures) === true)
    return $.Future_Future$immediate($.CTC1);
  var completer = $.Completer_Completer();
  var result = completer.get$future();
  t1.remaining_1 = futures.length;
  var values = $.ListImplementation_List(futures.length);
  for (var i = 0; i < futures.length; ++i) {
    var future = futures[i];
    future.then$1(new $.Futures_wait_anon(completer, i, t1, result, values));
    future.handleException$1(new $.Futures_wait_anon0(future, completer, result));
  }
  return result;
};

$.CanvasUtil_ellipse = function(ctx, x, y, width, height) {
  var hB = $.mul($.div(width, 2), 0.5522847498307935);
  var vB = $.mul($.div(height, 2), 0.5522847498307935);
  var eX = $.add(x, width);
  var eY = $.add(y, height);
  var mX = $.add(x, $.div(width, 2));
  var mY = $.add(y, $.div(height, 2));
  ctx.beginPath$0();
  ctx.moveTo$2(x, mY);
  ctx.bezierCurveTo$6(x, $.sub(mY, vB), $.sub(mX, hB), y, mX, y);
  ctx.bezierCurveTo$6($.add(mX, hB), y, eX, $.sub(mY, vB), eX, mY);
  ctx.bezierCurveTo$6(eX, $.add(mY, vB), $.add(mX, hB), eY, mX, eY);
  ctx.bezierCurveTo$6($.sub(mX, hB), eY, x, $.add(mY, vB), x, mY);
  ctx.closePath$0();
};

$.HashSet_HashSet = function() {
  return $.HashSetImplementation$();
};

$._PeerConnection00EventsImpl$ = function(_ptr) {
  return new $._PeerConnection00EventsImpl(_ptr);
};

$.index$slow = function(a, index) {
  if (typeof a === 'string' || $.isJsArray(a)) {
    if (!(typeof index === 'number' && Math.floor(index) === index)) {
      if (!(typeof index === 'number'))
        throw $.$$throw($.ArgumentError$(index));
      if (!($.truncate(index) === index))
        throw $.$$throw($.ArgumentError$(index));
    }
    if ($.ltB(index, 0) || $.geB(index, $.get$length(a)))
      throw $.$$throw($.IndexOutOfRangeException$(index));
    return a[index];
  }
  return a.operator$index$1(index);
};

$.div = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a / b : $.div$slow(a, b);
};

$.Future_Future$immediate = function(value) {
  return $.FutureImpl_FutureImpl$immediate(value);
};

$.$$throw = function(ex) {
  if (ex == null)
    ex = $.CTC0;
  var jsError = new Error();
  jsError.name = ex;
  jsError.description = ex;
  jsError.dartException = ex;
  jsError.toString = $.toStringWrapper.call$0;
  throw jsError;
};

$._MessagePortEventsImpl$ = function(_ptr) {
  return new $._MessagePortEventsImpl(_ptr);
};

$.stringReplaceAllUnchecked = function(receiver, from, to) {
  if (from === '')
    if (receiver === '')
      return to;
    else {
      var result = $.StringBuffer_StringBuffer('');
      var length$ = receiver.length;
      $.add$1(result, to);
      for (var i = 0; i < length$; ++i) {
        $.add$1(result, receiver[i]);
        $.add$1(result, to);
      }
      return $.toString(result);
    }
  else
    return $.stringReplaceJS(receiver, $.regExpMakeNative($.JSSyntaxRegExp$(from.replace($.regExpMakeNative($.CTC13, true), "\\$&"), false, false), true), to);
};

$.min = function(a, b) {
  if (typeof a === 'number') {
    if (typeof b === 'number') {
      if (a > b)
        return b;
      if (a < b)
        return a;
      if (typeof b === 'number') {
        if (typeof a === 'number')
          if (a === 0)
            return (a + b) * a * b;
        if (a === 0 && $.isNegative(b) === true || $.isNaN(b) === true)
          return b;
        return a;
      }
      return a;
    }
    throw $.$$throw($.ArgumentError$(b));
  }
  throw $.$$throw($.ArgumentError$(a));
};

$._Elements_createCanvasElement = function(width, height) {
  var _e = $._document().$dom_createElement$1('canvas');
  if (!(width == null))
    _e.set$width(width);
  if (!(height == null))
    _e.set$height(height);
  return _e;
};

$.CondorcetElection_CondorcetElection = function(ballots) {
  var roBallots = $.$$(ballots).toReadOnlyCollection$0();
  $.requireArgument($.CollectionUtil_allUnique($.map(roBallots, new $.CondorcetElection_CondorcetElection_anon()).toReadOnlyCollection$0()), 'Only one ballot per voter is allowed', null);
  var hashMap = $.HashMapImplementation$();
  var candidateHashSet = $.HashSet_HashSet();
  for (var t1 = $.iterator(ballots); t1.hasNext$0() === true;) {
    var t2 = t1.next$0();
    for (var i = 0; $.ltB(i, $.get$length(t2.get$rank())); ++i) {
      var candidateI = $.index(t2.get$rank(), i);
      $.add$1(candidateHashSet, candidateI);
      for (var j = i + 1; $.ltB(j, $.get$length(t2.get$rank())); ++j)
        $.add$1(hashMap.putIfAbsent$2($.CondorcetPair_CondorcetPair(candidateI, $.index(t2.get$rank(), j), null), new $.CondorcetElection_CondorcetElection_anon0()), t2);
    }
  }
  var hashSet = $.HashSet_HashSet();
  hashMap.forEach$1(new $.CondorcetElection_CondorcetElection_anon1(hashSet));
  var candidateProfiles = $.HashMapImplementation$();
  var tarjanMap = $.HashMapImplementation$();
  for (t1 = $.iterator(candidateHashSet); t1.hasNext$0() === true;) {
    t2 = t1.next$0();
    var lostTo = $.ListImplementation_List(null);
    var beat = $.ListImplementation_List(null);
    var tied = $.ListImplementation_List(null);
    var tarjanLostTiedSet = $.HashSet_HashSet();
    for (var t3 = $.iterator(hashSet); t3.hasNext$0() === true;) {
      var t4 = t3.next$0();
      if ($.eqB(t4.get$item1(), t2) || $.eqB(t4.get$item2(), t2)) {
        var other = $.eqB(t4.get$item1(), t2) ? t4.get$item2() : t4.get$item1();
        if (t4.get$isTie() === true) {
          tied.push(other);
          $.add$1(tarjanLostTiedSet, other);
        } else if ($.eqB(t4.get$winner(), t2))
          beat.push(other);
        else {
          lostTo.push(other);
          $.add$1(tarjanLostTiedSet, other);
        }
      }
    }
    candidateProfiles.operator$indexSet$2(t2, $.CondorcetCandidateProfile$_internal(t2, $.ReadOnlyCollection$(lostTo), $.ReadOnlyCollection$(beat), $.ReadOnlyCollection$(tied)));
    tarjanMap.operator$indexSet$2(t2, tarjanLostTiedSet);
  }
  var components = $.TarjanCycleDetect_getStronglyConnectedComponents(tarjanMap);
  var places = $.ListImplementation_List(null);
  for (var t1 = $.iterator(components), placeNumber = 1; t1.hasNext$0() === true;) {
    t2 = t1.next$0();
    places.push($.ElectionPlace$(placeNumber, t2));
    t2 = $.get$length(t2);
    if (typeof t2 !== 'number')
      throw $.iae(t2);
    placeNumber += t2;
  }
  return $.CondorcetElection$_internal(hashSet, candidateProfiles, roBallots, $.ReadOnlyCollection$(places));
};

$.getCandidateHexColor = function(c, dark) {
  var hue = $.LocationData_getHue(c);
  if (hue == null)
    return '#999999';
  else
    return $.HslColor_HslColor(hue, 1, dark ? 0.3 : 0.75).toRgb$0().toHex$0();
};

$.index = function(a, index) {
  if (typeof a == "string" || a.constructor === Array) {
    var key = index >>> 0;
    if (key === index && key < a.length)
      return a[key];
  }
  return $.index$slow(a, index);
};

$.le$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a <= b;
  return a.operator$le$1(b);
};

$.typeNameInOpera = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  return name$;
};

$.xor = function(a, b) {
  if ($.checkNumbers(a, b))
    return (a ^ b) >>> 0;
  return a.operator$xor$1(b);
};

$._window = function() {
  return typeof window != "undefined" ? window : null;
};

$.substring$1 = function(receiver, startIndex) {
  if (!(typeof receiver === 'string'))
    return receiver.substring$1(startIndex);
  return $.substring$2(receiver, startIndex, null);
};

$.CanvasUtil_getCanvasSize = function(canvasElement) {
  return $.Size$(canvasElement.get$width(), canvasElement.get$height());
};

$.last = function(receiver) {
  if (!$.isJsArray(receiver))
    return receiver.last$0();
  return $.index(receiver, $.sub($.get$length(receiver), 1));
};

$.NullPointerException$ = function(functionName, arguments$) {
  return new $.NullPointerException(functionName, arguments$);
};

$._DoubleLinkedQueueEntrySentinel$ = function() {
  var t1 = new $._DoubleLinkedQueueEntrySentinel(null, null, null);
  t1.DoubleLinkedQueueEntry$1(null);
  t1._DoubleLinkedQueueEntrySentinel$0();
  return t1;
};

$.toStringWrapper = function() {
  return $.toString(this.dartException);
};

$.gtB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a > b : $.gt$slow(a, b) === true;
};

$.stringContainsUnchecked = function(receiver, other, startIndex) {
  if (typeof other === 'string')
    return !($.indexOf$2(receiver, other, startIndex) === -1);
  else if (typeof other === 'object' && other !== null && !!other.is$JSSyntaxRegExp)
    return other.hasMatch$1($.substring$1(receiver, startIndex));
  else
    return $.iterator($.allMatches(other, $.substring$1(receiver, startIndex))).hasNext$0();
};

$.shl = function(a, b) {
  if ($.checkNumbers(a, b)) {
    if (b < 0)
      throw $.$$throw($.ArgumentError$(b));
    if (b > 31)
      return 0;
    return (a << b) >>> 0;
  }
  return a.operator$shl$1(b);
};

$._currentIsolate = function() {
  return $._globalState().get$currentContext();
};

$._completeMeasurementFutures = function() {
  var t1 = $._pendingRequests;
  if (!(t1 == null))
    for (t1 = $.iterator(t1); t1.hasNext$0() === true;) {
      var request = t1.next$0();
      try {
        var t2 = request.computeValue$0();
        request.set$value(t2);
      } catch (exception) {
        t2 = $.unwrapException(exception);
        var e = t2;
        t2 = e;
        request.set$value(t2);
        request.set$exception(true);
      }

    }
  var completedRequests = $._pendingRequests;
  var readyMeasurementFrameCallbacks = $._pendingMeasurementFrameCallbacks;
  $._pendingRequests = null;
  $._pendingMeasurementFrameCallbacks = null;
  if (!(completedRequests == null))
    for (t1 = $.iterator(completedRequests); t1.hasNext$0() === true;) {
      t2 = t1.next$0();
      var t3 = t2.get$exception() === true;
      var t4 = t2.get$completer();
      if (t3)
        t4.completeException$1(t2.get$value());
      else
        t4.complete$1(t2.get$value());
    }
  if (!(readyMeasurementFrameCallbacks == null))
    for (t1 = $.iterator(readyMeasurementFrameCallbacks); t1.hasNext$0() === true;)
      t1.next$0().call$0();
};

$.toStringAsFixed = function(receiver, fractionDigits) {
  if (!(typeof receiver === 'number'))
    return receiver.toStringAsFixed$1(fractionDigits);
  $.checkNum(fractionDigits);
  var result = receiver.toFixed(fractionDigits);
  if (receiver === 0 && $.isNegative(receiver) === true)
    return '-' + result;
  return result;
};

$.Coordinate_difference = function(a, b) {
  return $.Vector$($.sub(a.x, b.get$x()), $.sub(a.y, b.get$y()));
};

$.getMouseEventCoordinate = function(event$) {
  return $.Coordinate$(event$.get$offsetX(), event$.get$offsetY());
};

$.startsWith = function(receiver, other) {
  if (!(typeof receiver === 'string'))
    return receiver.startsWith$1(other);
  $.checkString(other);
  var length$ = other.length;
  if (length$ > receiver.length)
    return false;
  return other == receiver.substring(0, length$);
};

$.FutureAlreadyCompleteException$ = function() {
  return new $.FutureAlreadyCompleteException();
};

$.HashSetIterator$ = function(set_) {
  var t1 = new $.HashSetIterator(set_._backingMap._keys, -1);
  t1.HashSetIterator$1(set_);
  return t1;
};

$.round = function(receiver) {
  if (receiver < 0)
    return -Math.round(-receiver);
  else
    return Math.round(receiver);
};

$.clear = function(receiver) {
  if (!$.isJsArray(receiver))
    return receiver.clear$0();
  $.set$length(receiver, 0);
};

$.print = function(object) {
  if (typeof object === 'string')
    $.Primitives_printString(object);
  else
    $.Primitives_printString($.toString(object));
};

$.StackOverflowException$ = function() {
  return new $.StackOverflowException();
};

$.IrvElection$_internal = function(candidates, ballots, rounds) {
  return new $.IrvElection(candidates, ballots, rounds);
};

$._MeasurementScheduler__MeasurementScheduler$best = function(callback) {
  if ($._isMutationObserverSupported() === true)
    return $._MutationObserverScheduler$(callback);
  return $._PostMessageScheduler$(callback);
};

$.identical = function(a, b) {
  return a === b;
};

$._convertNativeToDart_EventTarget = function(e) {
  if ("setInterval" in e)
    return $._DOMWindowCrossFrameImpl__createSafe(e);
  else
    return e;
};

$._irvElectionIsolate = function() {
  $.port().receive$1(new $._irvElectionIsolate_anon());
};

$.max = function(a, b) {
  if (typeof a === 'number') {
    if (typeof b === 'number') {
      if (a > b)
        return a;
      if (a < b)
        return b;
      if (typeof b === 'number') {
        if (typeof a === 'number')
          if (a === 0)
            return a + b;
        if ($.isNaN(b) === true)
          return b;
        return a;
      }
      if (b === 0 && $.isNegative(a) === true)
        return b;
      return a;
    }
    throw $.$$throw($.ArgumentError$(b));
  }
  throw $.$$throw($.ArgumentError$(a));
};

$.getRange = function(receiver, start, length$) {
  if (!$.isJsArray(receiver))
    return receiver.getRange$2(start, length$);
  if (0 === length$)
    return [];
  $.checkNull(start);
  $.checkNull(length$);
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$))
    throw $.$$throw($.ArgumentError$(length$));
  var t1 = length$ < 0;
  if (t1)
    throw $.$$throw($.ArgumentError$(length$));
  if (start < 0)
    throw $.$$throw($.IndexOutOfRangeException$(start));
  var end = start + length$;
  if ($.gtB(end, $.get$length(receiver)))
    throw $.$$throw($.IndexOutOfRangeException$(length$));
  if (t1)
    throw $.$$throw($.ArgumentError$(length$));
  return receiver.slice(start, end);
};

$._FrozenCSSClassSet$ = function() {
  return new $._FrozenCSSClassSet(null);
};

$.DualPivotQuicksort_insertionSort_ = function(a, left, right, compare) {
  if (typeof a !== 'object' || a === null || (a.constructor !== Array || !!a.immutable$list) && !a.is$JavaScriptIndexingBehavior())
    return $.DualPivotQuicksort_insertionSort_$bailout(1, a, left, right, compare);
  if (typeof right !== 'number')
    return $.DualPivotQuicksort_insertionSort_$bailout(1, a, left, right, compare);
  for (var i = left + 1; i <= right; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    var el = a[i];
    var j = i;
    while (true) {
      if (j > left) {
        var t1 = j - 1;
        if (t1 !== (t1 | 0))
          throw $.iae(t1);
        if (t1 < 0 || t1 >= a.length)
          throw $.ioore(t1);
        var t2 = $.gtB(compare.call$2(a[t1], el), 0);
        t1 = t2;
      } else
        t1 = false;
      if (!t1)
        break;
      var j0 = j - 1;
      if (j0 !== (j0 | 0))
        throw $.iae(j0);
      t1 = a.length;
      if (j0 < 0 || j0 >= t1)
        throw $.ioore(j0);
      t2 = a[j0];
      if (j !== (j | 0))
        throw $.iae(j);
      if (j < 0 || j >= t1)
        throw $.ioore(j);
      a[j] = t2;
      j = j0;
    }
    if (j !== (j | 0))
      throw $.iae(j);
    if (j < 0 || j >= a.length)
      throw $.ioore(j);
    a[j] = el;
  }
};

$.ge$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a >= b;
  return a.operator$ge$1(b);
};

$._Lists_getRange = function(a, start, length$, accumulator) {
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $._Lists_getRange$bailout(1, a, start, length$, accumulator);
  if (typeof start !== 'number')
    return $._Lists_getRange$bailout(1, a, start, length$, accumulator);
  if ($.ltB(length$, 0))
    throw $.$$throw($.ArgumentError$('length'));
  if (start < 0)
    throw $.$$throw($.IndexOutOfRangeException$(start));
  if (typeof length$ !== 'number')
    throw $.iae(length$);
  var end = start + length$;
  if (end > a.length)
    throw $.$$throw($.IndexOutOfRangeException$(end));
  for (var i = start; i < end; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    accumulator.push(a[i]);
  }
  return accumulator;
};

$._pluralityElectionIsolate = function() {
  $.port().receive$1(new $._pluralityElectionIsolate_anon());
};

$._Elements_createTableElement = function() {
  return $._document().$dom_createElement$1('table');
};

$.charCodeAt = function(receiver, index) {
  if (typeof receiver === 'string') {
    if (index < 0)
      throw $.$$throw($.IndexOutOfRangeException$(index));
    if (index >= receiver.length)
      throw $.$$throw($.IndexOutOfRangeException$(index));
    return receiver.charCodeAt(index);
  } else
    return receiver.charCodeAt$1(index);
};

$.mul = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a * b : $.mul$slow(a, b);
};

$._IsolateNatives__log = function(msg) {
  if ($._globalState().get$isWorker() === true)
    $._globalState().get$mainManager().postMessage$1($._serializeMessage($.makeLiteralMap(['command', 'log', 'msg', msg])));
  else
    try {
      $globalThis.console.log(msg);
    } catch (exception) {
      $.unwrapException(exception);
      var trace = $.getTraceFromException(exception);
      throw $.$$throw($.ExceptionImplementation$(trace));
    }

};

$.Primitives_parseInt = function(string) {
  $.checkString(string);
  var match = /^\s*[+-]?(?:0(x)[a-f0-9]+|\d+)\s*$/i.exec(string);
  if (match == null)
    throw $.$$throw($.FormatException$(string));
  var base = !($.index(match, 1) == null) ? 16 : 10;
  var result = parseInt(string, base);
  if ($.isNaN(result) === true)
    throw $.$$throw($.FormatException$(string));
  return result;
};

$.parseInt = function(string) {
  return $.int_parse(string);
};

$.isNaN = function(receiver) {
  if (typeof receiver === 'number')
    return isNaN(receiver);
  else
    return receiver.isNaN$0();
};

$.port = function() {
  if ($._lazyPort == null)
    $._lazyPort = $._ReceivePortFactory_ReceivePort();
  return $._lazyPort;
};

$.CandidateElement$ = function(w, h, _color, p) {
  var t1 = new $.CandidateElement(_color, p, p.get$name(), null, false, $.ListImplementation_List(null), false, $.EventHandle$(), $.EventHandle$(), null, w, h, null, null, false, null, $.HashMapImplementation$(), $.HashMapImplementation$(), false);
  t1.CandidateElement$4(w, h, _color, p);
  return t1;
};

$.toInt = function(receiver) {
  if (!(typeof receiver === 'number'))
    return receiver.toInt$0();
  if ($.isNaN(receiver) === true)
    throw $.$$throw($.FormatException$('NaN'));
  if ($.isInfinite(receiver) === true)
    throw $.$$throw($.FormatException$('Infinity'));
  var truncated = $.truncate(receiver);
  return truncated == -0.0 ? 0 : truncated;
};

$.lastIndexOf$1 = function(receiver, element) {
  if ($.isJsArray(receiver))
    return $.Arrays_lastIndexOf(receiver, element, receiver.length);
  else if (typeof receiver === 'string') {
    $.checkNull(element);
    return receiver.lastIndexOf(element);
  }
  return receiver.lastIndexOf$1(element);
};

$._PluralityElectionMapper$ = function() {
  return new $._PluralityElectionMapper($.spawnFunction($._pluralityElectionIsolate), null, null, null, null, null, null, null, false, $.EventHandle$(), $.EventHandle$(), $.EventHandle$());
};

$.GlobalId$_internal = function(value) {
  return new $.GlobalId(value, $.Util_getHashCode([value]));
};

$._ElementRectImpl$ = function(element) {
  return new $._ElementRectImpl($._SimpleClientRect$(element.get$clientLeft(), element.get$clientTop(), element.get$clientWidth(), element.get$clientHeight()), $._SimpleClientRect$(element.get$offsetLeft(), element.get$offsetTop(), element.get$offsetWidth(), element.get$offsetHeight()), $._SimpleClientRect$(element.get$scrollLeft(), element.get$scrollTop(), element.get$scrollWidth(), element.get$scrollHeight()), element.getBoundingClientRect$0(), element.getClientRects$0());
};

$.UnsupportedOperationException$ = function(_message) {
  return new $.UnsupportedOperationException(_message);
};

$._BufferingSendPort$ = function(isolateId, _futurePort) {
  var t1 = new $._BufferingSendPort($._BufferingSendPort__idCount, null, _futurePort, [], isolateId);
  t1._BufferingSendPort$2(isolateId, _futurePort);
  return t1;
};

$._HttpRequestEventsImpl$ = function(_ptr) {
  return new $._HttpRequestEventsImpl(_ptr);
};

$.Box$ = function(left, top$, width, height) {
  return new $.Box(left, top$, width, height);
};

$._isMutationObserverSupported = function() {
  return !!( window.MutationObserver || window.WebKitMutationObserver);

};

$._JsDeserializer$ = function() {
  return new $._JsDeserializer(null);
};

$.removeRange = function(receiver, start, length$) {
  if (!$.isJsArray(receiver))
    return receiver.removeRange$2(start, length$);
  $.checkGrowable(receiver, 'removeRange');
  if (length$ === 0)
    return;
  $.checkNull(start);
  $.checkNull(length$);
  if (length$ < 0)
    throw $.$$throw($.ArgumentError$(length$));
  var receiverLength = receiver.length;
  if (start < 0 || start >= receiverLength)
    throw $.$$throw($.IndexOutOfRangeException$(start));
  var t1 = start + length$;
  if (t1 > receiverLength)
    throw $.$$throw($.IndexOutOfRangeException$(t1));
  var t2 = receiverLength - length$;
  $.Arrays_copy(receiver, t1, receiver, start, t2 - start);
  $.set$length(receiver, t2);
};

$.IrvRound_IrvRound = function(ballots, eliminatedCandidates) {
  var t1 = {};
  var cleanedBallots = $.map(ballots, new $.IrvRound_IrvRound_anon(eliminatedCandidates));
  cleanedBallots.count$1(new $.IrvRound_IrvRound_anon0());
  var candidateAllocations = $.filter(cleanedBallots, new $.IrvRound_IrvRound_anon1()).group$1(new $.IrvRound_IrvRound_anon2());
  var voteGroups = $.$$(candidateAllocations.getKeys$0()).group$1(new $.IrvRound_IrvRound_anon3(candidateAllocations));
  var placeVotes = $.$$(voteGroups.getKeys$0()).toList$0();
  $.sort(placeVotes, new $.IrvRound_IrvRound_anon4());
  t1.placeNumber_1 = 1;
  var places = $.map($.$$(placeVotes), new $.IrvRound_IrvRound_anon5(t1, voteGroups)).toReadOnlyCollection$0();
  var newlyEliminatedCandidates = $.IrvRound__getEliminatedCandidates(places);
  return $.IrvRound$_internal(places, $.map($.$$(newlyEliminatedCandidates), new $.IrvRound_IrvRound_anon6(newlyEliminatedCandidates, cleanedBallots)).toReadOnlyCollection$0());
};

$.PluralityElection_PluralityElection = function(ballots) {
  var roBallots = $.$$(ballots).toReadOnlyCollection$0();
  $.requireArgument($.CollectionUtil_allUnique($.map(roBallots, new $.PluralityElection_PluralityElection_anon()).toReadOnlyCollection$0()), 'Only one ballot per voter is allowed', null);
  var group = roBallots.group$1(new $.PluralityElection_PluralityElection_anon0());
  var voteCounts = $.HashMapImplementation$();
  $.forEach(group, new $.PluralityElection_PluralityElection_anon1(voteCounts));
  var ballotCounts = $.ListImplementation_List$from(voteCounts.getKeys$0());
  $.sort(ballotCounts, new $.PluralityElection_PluralityElection_anon2());
  var places = $.ListImplementation_List(null);
  for (var t1 = $.iterator(ballotCounts), place = 1; t1.hasNext$0() === true;) {
    var t2 = t1.next$0();
    var p = $.PluralityElectionPlace$(place, voteCounts.operator$index$1(t2), t2);
    places.push(p);
    t2 = $.get$length(p);
    if (typeof t2 !== 'number')
      throw $.iae(t2);
    place += t2;
  }
  return $.PluralityElection$_internal(roBallots, group, places);
};

$.typeNameInFirefox = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'Document')
    return 'HTMLDocument';
  if (name$ === 'XMLDocument')
    return 'Document';
  if (name$ === 'WorkerMessageEvent')
    return 'MessageEvent';
  if (name$ === 'DragEvent')
    return 'MouseEvent';
  if (name$ === 'DataTransfer')
    return 'Clipboard';
  if (name$ === 'MouseScrollEvent')
    return 'WheelEvent';
  if (name$ === 'OfflineResourceList')
    return 'DOMApplicationCache';
  return name$;
};

$.ExceptionImplementation$ = function(message) {
  return new $.ExceptionImplementation(message);
};

$._WorkerEventsImpl$ = function(_ptr) {
  return new $._WorkerEventsImpl(_ptr);
};

$.typeNameInIE = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'Document') {
    if (!!obj.xmlVersion)
      return 'Document';
    return 'HTMLDocument';
  }
  if (name$ === 'ApplicationCache')
    return 'DOMApplicationCache';
  if (name$ === 'CanvasPixelArray')
    return 'Uint8ClampedArray';
  if (name$ === 'DataTransfer')
    return 'Clipboard';
  if (name$ === 'DragEvent')
    return 'MouseEvent';
  if (name$ === 'HTMLDDElement')
    return 'HTMLElement';
  if (name$ === 'HTMLDTElement')
    return 'HTMLElement';
  if (name$ === 'HTMLTableDataCellElement')
    return 'HTMLTableCellElement';
  if (name$ === 'HTMLTableHeaderCellElement')
    return 'HTMLTableCellElement';
  if (name$ === 'HTMLPhraseElement')
    return 'HTMLElement';
  if (name$ === 'MSStyleCSSProperties')
    return 'CSSStyleDeclaration';
  if (name$ === 'MouseWheelEvent')
    return 'WheelEvent';
  return name$;
};

$.CondorcetCandidateProfile$_internal = function(candidate, lostTo, beat, tied) {
  return new $.CondorcetCandidateProfile(candidate, lostTo, beat, tied);
};

$.ge = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a >= b : $.ge$slow(a, b);
};

$._globalState = function() {
  return $globalState;
};

$._globalState0 = function(val) {
  $globalState = val;
};

$.spawnFunction = function(topLevelFunction) {
  var name$ = $._IsolateNatives__getJSFunctionName(topLevelFunction);
  if (name$ == null)
    throw $.$$throw($.UnsupportedOperationException$('only top-level functions can be spawned.'));
  return $._IsolateNatives__spawn(name$, null, false);
};

$.DetailedIllegalArgumentException$ = function(arg, message) {
  return new $.DetailedIllegalArgumentException(arg, message);
};

$.MutationObserver_MutationObserver = function(callback) {
  return $._MutationObserverFactoryProvider_createMutationObserver(callback);
};

$.iterator = function(receiver) {
  if ($.isJsArray(receiver))
    return $.ListIterator$(receiver);
  return receiver.iterator$0();
};

$.HashMapImplementation__nextProbe = function(currentProbe, numberOfProbes, length$) {
  return (currentProbe + numberOfProbes & length$ - 1) >>> 0;
};

$._voterHexMapperIsolate = function() {
  $.port().receive$1(new $._voterHexMapperIsolate_anon());
};

$.Completer_Completer = function() {
  return $.CompleterImpl$();
};

$._DistinctIterator$ = function(_source, _comparer) {
  return new $._DistinctIterator(_source, _comparer, $.ListImplementation_List(null), null, null);
};

$._Elements_createButtonElement = function() {
  return $._document().$dom_createElement$1('button');
};

$._IsolateNatives__thisScript = function() {
  return $thisScriptUrl;
};

$.CompleterImpl$ = function() {
  return new $.CompleterImpl($.FutureImpl$());
};

$.HashMapImplementation__computeLoadLimit = function(capacity) {
  return $.tdiv(capacity * 3, 4);
};

$.DivElement_DivElement = function() {
  return $._Elements_createDivElement();
};

$.IllegalJSRegExpException$ = function(_pattern, _errmsg) {
  return new $.IllegalJSRegExpException(_pattern, _errmsg);
};

$._IsolateNatives__startIsolate = function(topLevel, replyTo) {
  $._fillStatics($._globalState().get$currentContext());
  $._lazyPort = $._ReceivePortFactory_ReceivePort();
  replyTo.send$2('spawned', $.port().toSendPort$0());
  if (!($._window() == null))
    $._globalState().get$currentContext().eval$1(new $._IsolateNatives__startIsolate_anon());
  topLevel.call$0();
};

$.split = function(receiver, pattern) {
  if (!(typeof receiver === 'string'))
    return receiver.split$1(pattern);
  $.checkNull(pattern);
  return $.stringSplitUnchecked(receiver, pattern);
};

$._TarjanList__TarjanList = function(source) {
  var map = $.HashMapImplementation$();
  var nodes = $.HashMapImplementation$();
  source.forEach$1(new $._TarjanList__TarjanList_anon(nodes, map));
  return $._TarjanList$_internal(nodes);
};

$.Set_Set = function() {
  return $.HashSetImplementation$();
};

$.RootMapElement$ = function(w, h) {
  var t1 = $.AffineTransform$(1, 0, 0, 1, 0, 0);
  var t2 = $.EventHandle$();
  t2 = new $.RootMapElement($.VoterMapElement$(w, h), $.CandidateMapElement$(w, h), t1, t2, null, null, null, $.ListImplementation_List(null), false, $.EventHandle$(), $.EventHandle$(), null, w, h, null, null, false, null, $.HashMapImplementation$(), $.HashMapImplementation$(), false);
  t2.RootMapElement$2(w, h);
  return t2;
};

$.VoteDemo$_internal = function(_canvas, _stage, _dragger, _rootMapElement, _condorcetView, _pluralityView, _distanceView, _canManView, _irvView) {
  var t1 = new $.VoteDemo(_canvas, _stage, _dragger, $.CalcEngine$(), _rootMapElement, $.HashMapImplementation$(), _condorcetView, _irvView, _distanceView, _pluralityView, _canManView, null, null, null, null, false);
  t1.VoteDemo$_internal$9(_canvas, _stage, _dragger, _rootMapElement, _condorcetView, _pluralityView, _distanceView, _canManView, _irvView);
  return t1;
};

$.throwCyclicInit = function(staticName) {
  throw $.$$throw($.RuntimeError$('Cyclic initialization for static ' + $.S(staticName)));
};

$.indexOf$1 = function(receiver, element) {
  if ($.isJsArray(receiver))
    return $.Arrays_indexOf(receiver, element, 0, receiver.length);
  else if (typeof receiver === 'string') {
    $.checkNull(element);
    if (!(typeof element === 'string'))
      throw $.$$throw($.ArgumentError$(element));
    return receiver.indexOf(element);
  }
  return receiver.indexOf$1(element);
};

$.FutureValueResult$ = function(value, _outputSerializer) {
  return new $.FutureValueResult(value, null, _outputSerializer);
};

$.Vector$ = function(x, y) {
  return new $.Vector(x, y);
};

$.removeLast = function(receiver) {
  if ($.isJsArray(receiver)) {
    $.checkGrowable(receiver, 'removeLast');
    if ($.get$length(receiver) === 0)
      throw $.$$throw($.IndexOutOfRangeException$(-1));
    return receiver.pop();
  }
  return receiver.removeLast$0();
};

$._ReceivePortImpl$ = function() {
  var t1 = $._ReceivePortImpl__nextFreeId;
  $._ReceivePortImpl__nextFreeId = $.add(t1, 1);
  t1 = new $._ReceivePortImpl(t1, null);
  t1._ReceivePortImpl$0();
  return t1;
};

$._NodeListWrapper$ = function(list) {
  return new $._NodeListWrapper(list);
};

$._WorkerSendPort$ = function(_workerId, isolateId, _receivePortId) {
  return new $._WorkerSendPort(_workerId, _receivePortId, isolateId);
};

$.TarjanCycleDetect_getStronglyConnectedComponents = function(graph) {
  return $.TarjanCycleDetect$_internal($._TarjanList__TarjanList(graph))._executeTarjan$0();
};

$.Arrays_indexOf = function(a, element, startIndex, endIndex) {
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $.Arrays_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (var i = startIndex; i < endIndex; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$._Device_isOpera = function() {
  return $.contains$2($._Device_userAgent(), 'Opera', 0);
};

$.FutureValueResult_FutureValueResult$fromMap = function(value) {
  $.requireArgumentNotNull(value, 'value');
  $.requireArgument($.FutureValueResult_isMyMap(value), 'value', null);
  var ex = $.index(value, 'exception');
  if (!(ex == null))
    return $.FutureValueResult$fromException(ex);
  else
    return $.FutureValueResult$($.index(value, 'value'), null);
};

$.requireArgumentNotNull = function(argument, argName) {
  if (argument == null)
    throw $.$$throw($.NullArgumentException$(argName));
};

$._FuncEnumerable$ = function(_source, _func) {
  return new $._FuncEnumerable(_source, _func);
};

$.map = function(receiver, f) {
  if (!$.isJsArray(receiver))
    return receiver.map$1(f);
  else
    return $.Collections_map(receiver, [], f);
};

$._TextTrackCueEventsImpl$ = function(_ptr) {
  return new $._TextTrackCueEventsImpl(_ptr);
};

$.RgbColor__validateComponent = function(c, name$) {
  $.requireArgument(!(c == null) && $.isInfinite(c) !== true && $.isNaN(c) !== true, name$, null);
  $.requireArgument($.geB(c, 0) && $.leB(c, 255), name$, null);
};

$.Random_Random = function(seed) {
  return $.CTC24;
};

$.endsWith = function(receiver, other) {
  $.checkString(other);
  var receiverLength = receiver.length;
  var otherLength = other.length;
  if (otherLength > receiverLength)
    return false;
  return other === $.substring$1(receiver, receiverLength - otherLength);
};

$.allMatchesInStringUnchecked = function(needle, haystack) {
  var result = $.ListImplementation_List(null);
  var length$ = $.get$length(haystack);
  var patternLength = needle.length;
  for (var startIndex = 0; true;) {
    var position = $.indexOf$2(haystack, needle, startIndex);
    if ($.eqB(position, -1))
      break;
    result.push($.StringMatch$(position, haystack, needle));
    var endIndex = $.add(position, patternLength);
    if ($.eqB(endIndex, length$))
      break;
    else
      startIndex = $.eqB(position, endIndex) ? $.add(startIndex, 1) : endIndex;
  }
  return result;
};

$._SpeechRecognitionEventsImpl$ = function(_ptr) {
  return new $._SpeechRecognitionEventsImpl(_ptr);
};

$.MapPlayer$ = function(_location, name$) {
  return new $.MapPlayer($.GlobalId_GlobalId(), name$, _location);
};

$._CondorcetElectionMapper$ = function() {
  return new $._CondorcetElectionMapper($.spawnFunction($._condorcetElectionIsolate), null, null, null, null, null, null, null, false, $.EventHandle$(), $.EventHandle$(), $.EventHandle$());
};

$._MeasurementRequest$ = function(computeValue, completer) {
  return new $._MeasurementRequest(computeValue, completer, null, false);
};

$._MediaElementEventsImpl$ = function(_ptr) {
  return new $._MediaElementEventsImpl(_ptr);
};

$.getTraceFromException = function(exception) {
  return $.StackTrace$(exception.stack);
};

$.propertySet = function(object, property, value) {
  object[property] = value;
};

$._BatteryManagerEventsImpl$ = function(_ptr) {
  return new $._BatteryManagerEventsImpl(_ptr);
};

$.LocationData_LocationData$random = function() {
  var voters = $.ListImplementation_List(null);
  for (var i = 0; i < 10; ++i)
    for (var t1 = i * 1.1111111111111112, j = 0; j < 10; ++j)
      voters.push($.MapPlayer$($.Coordinate$(t1, j * 1.1111111111111112), null));
  var coords = $.ListImplementation_List(null);
  var middle = $.Vector$(0.5, 0.5);
  coords.push(middle);
  for (i = 0; i < 4; ++i) {
    var coord = $.Vector$($.rnd().nextDouble$0(), $.rnd().nextDouble$0());
    coords.push(coord);
  }
  var candidates = $.ListImplementation_List(null);
  $.map($.$$(coords), new $.LocationData_LocationData$random_anon()).forEachWithIndex$1(new $.LocationData_LocationData$random_anon0(candidates));
  return $.LocationData$($.ReadOnlyCollection$wrap(voters), $.ReadOnlyCollection$wrap(candidates));
};

$.checkGrowable = function(list, reason) {
  if (!!(list.fixed$length))
    throw $.$$throw($.UnsupportedOperationException$(reason));
};

$.JSSyntaxRegExp$ = function(pattern, ignoreCase, multiLine) {
  return new $.JSSyntaxRegExp(pattern, multiLine, ignoreCase);
};

$.KeyValuePair$ = function(key, value) {
  return new $.KeyValuePair(key, value);
};

$._DocumentEventsImpl$ = function(_ptr) {
  return new $._DocumentEventsImpl(_ptr);
};

$.NullArgumentException$ = function(arg) {
  return new $.NullArgumentException(arg, 'Null argument: ' + arg);
};

$.FutureNotCompleteException$ = function() {
  return new $.FutureNotCompleteException();
};

$.FutureImpl$ = function() {
  return new $.FutureImpl(false, null, null, null, false, [], [], []);
};

$.regExpGetNative = function(regExp) {
  var r = regExp._re;
  return r == null ? regExp._re = $.regExpMakeNative(regExp, false) : r;
};

$.div$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a / b;
  return a.operator$div$1(b);
};

$._InputElementEventsImpl$ = function(_ptr) {
  return new $._InputElementEventsImpl(_ptr);
};

$.set$length = function(receiver, newLength) {
  if ($.isJsArray(receiver)) {
    $.checkNull(newLength);
    if (!(typeof newLength === 'number' && Math.floor(newLength) === newLength))
      throw $.$$throw($.ArgumentError$(newLength));
    if (newLength < 0)
      throw $.$$throw($.IndexOutOfRangeException$(newLength));
    $.checkGrowable(receiver, 'set length');
    receiver.length = newLength;
  } else
    receiver.set$length(newLength);
  return newLength;
};

$._Device_userAgent = function() {
  return $.window().get$navigator().get$userAgent();
};

$.checkNum = function(value) {
  if (!(typeof value === 'number')) {
    $.checkNull(value);
    throw $.$$throw($.ArgumentError$(value));
  }
  return value;
};

$._TextTrackListEventsImpl$ = function(_ptr) {
  return new $._TextTrackListEventsImpl(_ptr);
};

$._JsVisitedMap$ = function() {
  return new $._JsVisitedMap(null);
};

$._fillStatics = function(context) {
  $globals = context.isolateStatics;
  $static_init();
};

$._Lists_indexOf = function(a, element, startIndex, endIndex) {
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $._Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof startIndex !== 'number')
    return $._Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof endIndex !== 'number')
    return $._Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (var i = startIndex; i < endIndex; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$.ListIterator$ = function(list) {
  return new $.ListIterator(0, list);
};

$._JavaScriptAudioNodeEventsImpl$ = function(_ptr) {
  return new $._JavaScriptAudioNodeEventsImpl(_ptr);
};

$.DualPivotQuicksort__dualPivotQuicksort = function(a, left, right, compare) {
  if (typeof a !== 'object' || a === null || (a.constructor !== Array || !!a.immutable$list) && !a.is$JavaScriptIndexingBehavior())
    return $.DualPivotQuicksort__dualPivotQuicksort$bailout(1, a, left, right, compare, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  var sixth = $.tdiv($.add($.sub(right, left), 1), 6);
  if (typeof sixth !== 'number')
    throw $.iae(sixth);
  var index1 = left + sixth;
  var index5 = $.sub(right, sixth);
  if (typeof right !== 'number')
    throw $.iae(right);
  var index3 = $.tdiv(left + right, 2);
  var index2 = index3 - sixth;
  var index4 = index3 + sixth;
  if (index1 !== (index1 | 0))
    throw $.iae(index1);
  var t1 = a.length;
  if (index1 < 0 || index1 >= t1)
    throw $.ioore(index1);
  var el1 = a[index1];
  if (index2 !== (index2 | 0))
    throw $.iae(index2);
  if (index2 < 0 || index2 >= t1)
    throw $.ioore(index2);
  var el2 = a[index2];
  if (index3 !== (index3 | 0))
    throw $.iae(index3);
  if (index3 < 0 || index3 >= t1)
    throw $.ioore(index3);
  var el3 = a[index3];
  if (index4 !== (index4 | 0))
    throw $.iae(index4);
  if (index4 < 0 || index4 >= t1)
    throw $.ioore(index4);
  var el4 = a[index4];
  if (index5 !== (index5 | 0))
    throw $.iae(index5);
  if (index5 < 0 || index5 >= t1)
    throw $.ioore(index5);
  var el5 = a[index5];
  if ($.gtB(compare.call$2(el1, el2), 0)) {
    var t0 = el1;
    el1 = el2;
    el2 = t0;
  }
  if ($.gtB(compare.call$2(el4, el5), 0)) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  if ($.gtB(compare.call$2(el1, el3), 0)) {
    t0 = el3;
    el3 = el1;
    el1 = t0;
  }
  if ($.gtB(compare.call$2(el2, el3), 0)) {
    t0 = el3;
    el3 = el2;
    el2 = t0;
  }
  if ($.gtB(compare.call$2(el1, el4), 0)) {
    t0 = el1;
    el1 = el4;
    el4 = t0;
  }
  if ($.gtB(compare.call$2(el3, el4), 0)) {
    t0 = el3;
    el3 = el4;
    el4 = t0;
  }
  if ($.gtB(compare.call$2(el2, el5), 0)) {
    t0 = el5;
    el5 = el2;
    el2 = t0;
  }
  if ($.gtB(compare.call$2(el2, el3), 0)) {
    t0 = el3;
    el3 = el2;
    el2 = t0;
  }
  if ($.gtB(compare.call$2(el4, el5), 0)) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  t1 = a.length;
  if (index1 >= t1)
    throw $.ioore(index1);
  a[index1] = el1;
  if (index3 >= t1)
    throw $.ioore(index3);
  a[index3] = el3;
  if (index5 >= t1)
    throw $.ioore(index5);
  a[index5] = el5;
  if (left !== (left | 0))
    throw $.iae(left);
  if (left < 0 || left >= t1)
    throw $.ioore(left);
  var t2 = a[left];
  if (index2 >= t1)
    throw $.ioore(index2);
  a[index2] = t2;
  if (right !== (right | 0))
    throw $.iae(right);
  if (right < 0 || right >= t1)
    throw $.ioore(right);
  t2 = a[right];
  if (index4 >= t1)
    throw $.ioore(index4);
  a[index4] = t2;
  var less = left + 1;
  var great = right - 1;
  var pivots_are_equal = $.eqB(compare.call$2(el2, el4), 0);
  if (pivots_are_equal)
    for (var k = less; k <= great; ++k) {
      if (k !== (k | 0))
        throw $.iae(k);
      if (k < 0 || k >= a.length)
        throw $.ioore(k);
      var ak = a[k];
      var comp = compare.call$2(ak, el2);
      if (typeof comp !== 'number')
        return $.DualPivotQuicksort__dualPivotQuicksort$bailout(2, a, left, right, compare, less, k, index1, index5, el2, pivots_are_equal, ak, comp, el4, great);
      if (comp === 0)
        continue;
      if (comp < 0) {
        if (!(k === less)) {
          if (less !== (less | 0))
            throw $.iae(less);
          t1 = a.length;
          if (less < 0 || less >= t1)
            throw $.ioore(less);
          t2 = a[less];
          if (k >= t1)
            throw $.ioore(k);
          a[k] = t2;
          a[less] = ak;
        }
        ++less;
      } else
        for (var less0 = less + 1; true;) {
          if (great !== (great | 0))
            throw $.iae(great);
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          comp = compare.call$2(a[great], el2);
          if ($.gtB(comp, 0)) {
            --great;
            continue;
          } else {
            t1 = $.ltB(comp, 0);
            var great0 = great - 1;
            t2 = a.length;
            if (t1) {
              if (less !== (less | 0))
                throw $.iae(less);
              if (less < 0 || less >= t2)
                throw $.ioore(less);
              t1 = a[less];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              if (great >= t2)
                throw $.ioore(great);
              a[less] = a[great];
              a[great] = ak;
              great = great0;
              less = less0;
              break;
            } else {
              if (great >= t2)
                throw $.ioore(great);
              t1 = a[great];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              a[great] = ak;
              great = great0;
              break;
            }
          }
        }
    }
  else
    for (k = less; k <= great; ++k) {
      if (k !== (k | 0))
        throw $.iae(k);
      if (k < 0 || k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      if ($.ltB(compare.call$2(ak, el2), 0)) {
        if (!(k === less)) {
          if (less !== (less | 0))
            throw $.iae(less);
          t1 = a.length;
          if (less < 0 || less >= t1)
            throw $.ioore(less);
          t2 = a[less];
          if (k >= t1)
            throw $.ioore(k);
          a[k] = t2;
          a[less] = ak;
        }
        ++less;
      } else if ($.gtB(compare.call$2(ak, el4), 0))
        for (less0 = less + 1; true;) {
          if (great !== (great | 0))
            throw $.iae(great);
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          if ($.gtB(compare.call$2(a[great], el4), 0)) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            if (great >= a.length)
              throw $.ioore(great);
            t1 = $.ltB(compare.call$2(a[great], el2), 0);
            great0 = great - 1;
            t2 = a.length;
            if (t1) {
              if (less !== (less | 0))
                throw $.iae(less);
              if (less < 0 || less >= t2)
                throw $.ioore(less);
              t1 = a[less];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              if (great >= t2)
                throw $.ioore(great);
              a[less] = a[great];
              a[great] = ak;
              great = great0;
              less = less0;
            } else {
              if (great >= t2)
                throw $.ioore(great);
              t1 = a[great];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              a[great] = ak;
              great = great0;
            }
            break;
          }
        }
    }
  t1 = less - 1;
  if (t1 !== (t1 | 0))
    throw $.iae(t1);
  t2 = a.length;
  if (t1 < 0 || t1 >= t2)
    throw $.ioore(t1);
  var t3 = a[t1];
  if (left >= t2)
    throw $.ioore(left);
  a[left] = t3;
  a[t1] = el2;
  t1 = great + 1;
  if (t1 !== (t1 | 0))
    throw $.iae(t1);
  if (t1 < 0 || t1 >= t2)
    throw $.ioore(t1);
  t3 = a[t1];
  if (right >= t2)
    throw $.ioore(right);
  a[right] = t3;
  a[t1] = el4;
  $.DualPivotQuicksort__doSort(a, left, less - 2, compare);
  $.DualPivotQuicksort__doSort(a, great + 2, right, compare);
  if (pivots_are_equal)
    return;
  if (less < index1 && great > index5) {
    while (true) {
      if (less !== (less | 0))
        throw $.iae(less);
      if (less < 0 || less >= a.length)
        throw $.ioore(less);
      if (!$.eqB(compare.call$2(a[less], el2), 0))
        break;
      ++less;
    }
    while (true) {
      if (great !== (great | 0))
        throw $.iae(great);
      if (great < 0 || great >= a.length)
        throw $.ioore(great);
      if (!$.eqB(compare.call$2(a[great], el4), 0))
        break;
      --great;
    }
    for (k = less; k <= great; ++k) {
      if (k !== (k | 0))
        throw $.iae(k);
      if (k < 0 || k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      if ($.eqB(compare.call$2(ak, el2), 0)) {
        if (!(k === less)) {
          if (less !== (less | 0))
            throw $.iae(less);
          t1 = a.length;
          if (less < 0 || less >= t1)
            throw $.ioore(less);
          t2 = a[less];
          if (k >= t1)
            throw $.ioore(k);
          a[k] = t2;
          a[less] = ak;
        }
        ++less;
      } else if ($.eqB(compare.call$2(ak, el4), 0))
        for (less0 = less + 1; true;) {
          if (great !== (great | 0))
            throw $.iae(great);
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          if ($.eqB(compare.call$2(a[great], el4), 0)) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            if (great >= a.length)
              throw $.ioore(great);
            t1 = $.ltB(compare.call$2(a[great], el2), 0);
            great0 = great - 1;
            t2 = a.length;
            if (t1) {
              if (less !== (less | 0))
                throw $.iae(less);
              if (less < 0 || less >= t2)
                throw $.ioore(less);
              t1 = a[less];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              if (great >= t2)
                throw $.ioore(great);
              a[less] = a[great];
              a[great] = ak;
              great = great0;
              less = less0;
            } else {
              if (great >= t2)
                throw $.ioore(great);
              t1 = a[great];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              a[great] = ak;
              great = great0;
            }
            break;
          }
        }
    }
    $.DualPivotQuicksort__doSort(a, less, great, compare);
  } else
    $.DualPivotQuicksort__doSort(a, less, great, compare);
};

$.dynamicFunction = function(name$) {
  var f = Object.prototype[name$];
  if (!(f == null) && !!f.methods)
    return f.methods;
  var methods = {};
  var dartMethod = Object.getPrototypeOf($.CTC41)[name$];
  if (!(dartMethod == null))
    $.propertySet(methods, 'Object', dartMethod);
  var bind = function() {return $.dynamicBind.call$4(this, name$, methods, Array.prototype.slice.call(arguments));};
  bind.methods = methods;
  $.defineProperty(Object.prototype, name$, bind);
  return methods;
};

$.buildDynamicMetadata = function(inputTable) {
  var result = [];
  for (var i = 0; i < inputTable.length; ++i) {
    var tag = inputTable[i][0];
    var array = inputTable[i];
    var tags = array[1];
    var set = {};
    var tagNames = tags.split('|');
    for (var j = 0, index = 1; j < tagNames.length; ++j) {
      $.propertySet(set, tagNames[j], true);
      index = j;
      array = tagNames;
    }
    result.push($.MetaInfo$(tag, tags, set));
  }
  return result;
};

$._Timer$repeating = function(milliSeconds, callback) {
  var t1 = new $._Timer(false, null);
  t1._Timer$repeating$2(milliSeconds, callback);
  return t1;
};

$.DistanceElection_DistanceElection$fromData = function(data) {
  return $.DistanceElection_DistanceElection(data.get$voters(), data.get$candidates());
};

$._Lists_lastIndexOf = function(a, element, startIndex) {
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $._Lists_lastIndexOf$bailout(1, a, element, startIndex);
  if (typeof startIndex !== 'number')
    return $._Lists_lastIndexOf$bailout(1, a, element, startIndex);
  if (startIndex < 0)
    return -1;
  var t1 = a.length;
  if (startIndex >= t1)
    startIndex = t1 - 1;
  for (var i = startIndex; i >= 0; --i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$._convertDartToNative_SerializedScriptValue = function(value) {
  return $._convertDartToNative_PrepareForStructuredClone(value);
};

$._deserializeMessage = function(message) {
  if ($._globalState().get$needSerialization() === true)
    return $._JsDeserializer$().deserialize$1(message);
  else
    return message;
};

$.hashCode = function(receiver) {
  if (receiver == null)
    return 0;
  if (typeof receiver === 'number')
    return receiver & 0x1FFFFFFF;
  if (typeof receiver === 'boolean')
    return receiver ? 1077375012 : 3247177846;
  if ($.isJsArray(receiver))
    return $.Primitives_objectHashCode(receiver);
  if (!(typeof receiver === 'string'))
    return receiver.hashCode$0();
  var length$ = receiver.length;
  for (var hash = 0, i = 0; i < length$; ++i) {
    var hash0 = 536870911 & hash + receiver.charCodeAt(i);
    var hash1 = 536870911 & hash0 + 524287 & hash0 << 10;
    hash1 = (hash1 ^ $.shr(hash1, 6)) >>> 0;
    hash = hash1;
  }
  hash0 = 536870911 & hash + 67108863 & hash << 3;
  hash0 = (hash0 ^ $.shr(hash0, 11)) >>> 0;
  return 536870911 & hash0 + 16383 & hash0 << 15;
};

$.FutureImpl_FutureImpl$immediate = function(value) {
  var res = $.FutureImpl$();
  res._setValue$1(value);
  return res;
};

$.CalcEngine$ = function() {
  var t1 = new $.CalcEngine($._DistanceElectionMapper$(), $._PluralityElectionMapper$(), $._CondorcetElectionMapper$(), $._IrvElectionMapper$(), $._VoterHexMapper$(), null);
  t1.CalcEngine$0();
  return t1;
};

$._SimpleEnumerable$ = function(_source) {
  return new $._SimpleEnumerable(_source);
};

$.getTypeNameOf = function(obj) {
  if ($._getTypeNameOf == null)
    $._getTypeNameOf = $.getFunctionForTypeNameOf();
  return $._getTypeNameOf.call$1(obj);
};

$.RgbColor_RgbColor = function(r, g, b) {
  $.RgbColor__validateComponent(r, 'r');
  $.RgbColor__validateComponent(g, 'g');
  $.RgbColor__validateComponent(b, 'b');
  return $.RgbColor$_internal(r, g, b);
};

$.contains$1 = function(receiver, other) {
  if (!(typeof receiver === 'string'))
    return receiver.contains$1(other);
  return $.contains$2(receiver, other, 0);
};

$.isValidNumber = function(value) {
  return !(value == null) && $.isInfinite(value) !== true && $.isNaN(value) !== true;
};

$._IsolateNatives__processWorkerMessage = function(sender, e) {
  var msg = $._deserializeMessage(e.data);
  switch ($.index(msg, 'command')) {
    case 'start':
      var t1 = $.index(msg, 'id');
      $._globalState().set$currentManagerId(t1);
      var entryPoint = $._IsolateNatives__getJSFunctionFromName($.index(msg, 'functionName'));
      var replyTo = $._deserializeMessage($.index(msg, 'replyTo'));
      $._globalState().get$topEventLoop().enqueue$3($._IsolateContext$(), new $._IsolateNatives__processWorkerMessage_function(entryPoint, replyTo), 'worker-start');
      $._globalState().get$topEventLoop().run$0();
      break;
    case 'spawn-worker':
      $._IsolateNatives__spawnWorker($.index(msg, 'functionName'), $.index(msg, 'uri'), $.index(msg, 'replyPort'));
      break;
    case 'message':
      $.index(msg, 'port').send$2($.index(msg, 'msg'), $.index(msg, 'replyTo'));
      $._globalState().get$topEventLoop().run$0();
      break;
    case 'close':
      $._IsolateNatives__log('Closing Worker');
      $._globalState().get$managers().remove$1(sender.get$id());
      sender.terminate$0();
      $._globalState().get$topEventLoop().run$0();
      break;
    case 'log':
      $._IsolateNatives__log($.index(msg, 'msg'));
      break;
    case 'print':
      if ($._globalState().get$isWorker() === true)
        $._globalState().get$mainManager().postMessage$1($._serializeMessage($.makeLiteralMap(['command', 'print', 'msg', msg])));
      else
        $.print($.index(msg, 'msg'));
      break;
    case 'error':
      throw $.$$throw($.index(msg, 'msg'));
  }
};

$._RTCPeerConnectionEventsImpl$ = function(_ptr) {
  return new $._RTCPeerConnectionEventsImpl(_ptr);
};

$.StringBuffer_StringBuffer = function(content$) {
  return $.StringBufferImpl$(content$);
};

$.neg = function(a) {
  if (typeof a === "number")
    return -a;
  return a.negate$0();
};

$.HashSetImplementation$ = function() {
  var t1 = new $.HashSetImplementation(null);
  t1.HashSetImplementation$0();
  return t1;
};

$.Uri__parseIntOrZero = function(val) {
  if (!(val == null) && !$.eqB(val, ''))
    return $.int_parse(val);
  else
    return 0;
};

$.dynamicBind = function(obj, name$, methods, arguments$) {
  var tag = $.getTypeNameOf(obj);
  var method = methods[tag];
  if (method == null && !($._dynamicMetadata0() == null))
    for (var i = 0; i < $._dynamicMetadata0().length; ++i) {
      var entry = $._dynamicMetadata0()[i];
      if (entry.get$_lib6_set()[tag]) {
        method = methods[entry.get$_tag()];
        if (!(method == null))
          break;
      }
    }
  if (method == null)
    method = methods['Object'];
  var proto = Object.getPrototypeOf(obj);
  if (method == null)
    method = function () {if (Object.getPrototypeOf(this) === proto) {throw new TypeError(name$ + " is not a function");} else {return Object.prototype[name$].apply(this, arguments);}};
  if (!proto.hasOwnProperty(name$))
    $.defineProperty(proto, name$, method);
  return method.apply(obj, arguments$);
};

$.main = function() {
  $.VoteDemo_VoteDemo($.query('#content'), $.query('#pluralityView'), $.query('#distanceView'), $.query('#condorcetView'), $.query('#canManView'), $.query('#irvView'))._requestFrame$0();
};

$.CondorcetPair_CondorcetPair = function(can1, can2, bals) {
  var t1 = {};
  t1.can1_1 = can1;
  t1.can2_2 = can2;
  $.requireArgumentNotNull(t1.can1_1, 'can1');
  $.requireArgumentNotNull(t1.can2_2, 'can2');
  $.requireArgument(!$.eqB(t1.can1_1, t1.can2_2), 'can1 and can2 must be different', null);
  if ($.gtB($.compareTo(t1.can1_1, t1.can2_2), 0)) {
    var temp = t1.can2_2;
    t1.can2_2 = t1.can1_1;
    t1.can1_1 = temp;
  }
  if (bals == null)
    return $.CondorcetPair$_internal(t1.can1_1, t1.can2_2, null, 0, 0);
  else {
    var roBallots = $.ReadOnlyCollection$(bals);
    $.requireArgument($.CollectionUtil_allUnique(roBallots), 'Only one ballot per voter is allowed', null);
    t1.fos_3 = 0;
    t1.sof_4 = 0;
    roBallots.forEach$1(new $.CondorcetPair_CondorcetPair_anon(t1));
    return $.CondorcetPair$_internal(t1.can1_1, t1.can2_2, roBallots, t1.fos_3, t1.sof_4);
  }
};

$.FutureValueResult$fromException = function(exception) {
  var t1 = new $.FutureValueResult(null, exception, null);
  t1.FutureValueResult$fromException$1(exception);
  return t1;
};

$.ceil = function(receiver) {
  return Math.ceil(receiver);
};

$.RgbColor$_internal = function(r, g, b) {
  return new $.RgbColor(r, g, b);
};

$.Maps_mapToString = function(m) {
  var result = $.StringBuffer_StringBuffer('');
  $.Maps__emitMap(m, result, $.ListImplementation_List(null));
  return $.toString(result);
};

$.invokeClosure = function(closure, isolate, numberOfArguments, arg1, arg2) {
  if ($.eqB(numberOfArguments, 0))
    return $._callInIsolate(isolate, new $.invokeClosure_anon(closure));
  else if ($.eqB(numberOfArguments, 1))
    return $._callInIsolate(isolate, new $.invokeClosure_anon0(closure, arg1));
  else if ($.eqB(numberOfArguments, 2))
    return $._callInIsolate(isolate, new $.invokeClosure_anon1(closure, arg1, arg2));
  else
    throw $.$$throw($.ExceptionImplementation$('Unsupported number of arguments for wrapped closure'));
};

$._IsolateNatives__getJSFunctionName = function(f) {
  return (f.$name || null);
};

$.geB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a >= b : $.ge$slow(a, b) === true;
};

$.StringMatch$ = function(_start, str, pattern) {
  return new $.StringMatch(_start, str, pattern);
};

$.ioore = function(index) {
  throw $.$$throw($.IndexOutOfRangeException$(index));
};

$.compareTo = function(a, b) {
  if ($.checkNumbers(a, b))
    if ($.ltB(a, b))
      return -1;
    else if ($.gtB(a, b))
      return 1;
    else if ($.eqB(a, b)) {
      if ($.eqB(a, 0)) {
        var aIsNegative = $.isNegative(a);
        if ($.eqB(aIsNegative, $.isNegative(b)))
          return 0;
        if (aIsNegative === true)
          return -1;
        return 1;
      }
      return 0;
    } else if ($.isNaN(a) === true) {
      if ($.isNaN(b) === true)
        return 0;
      return 1;
    } else
      return -1;
  else if (typeof a === 'string') {
    if (!(typeof b === 'string'))
      throw $.$$throw($.ArgumentError$(b));
    if (a == b)
      var t1 = 0;
    else
      t1 = a < b ? -1 : 1;
    return t1;
  } else
    return a.compareTo$1(b);
};

$._convertNativeToDart_IDBKey = function(nativeKey) {
  if (new $._convertNativeToDart_IDBKey_containsDate().call$1(nativeKey) === true)
    throw $.$$throw($.CTC16);
  return nativeKey;
};

$.leB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a <= b : $.le$slow(a, b) === true;
};

$.mod = function(a, b) {
  if ($.checkNumbers(a, b)) {
    var result = a % b;
    if (result === 0)
      return 0;
    if (result > 0)
      return result;
    if (b < 0)
      return result - b;
    else
      return result + b;
  }
  return a.operator$mod$1(b);
};

$.CandidateMapElement$ = function(w, h) {
  return new $.CandidateMapElement($.ListImplementation_List(null), $.AffineTransform$(1, 0, 0, 1, 0, 0), 0, null, null, $.ListImplementation_List(null), false, $.EventHandle$(), $.EventHandle$(), null, w, h, null, null, false, null, $.HashMapImplementation$(), $.HashMapImplementation$(), false);
};

$._DOMWindowCrossFrameImpl$ = function(_window) {
  return new $._DOMWindowCrossFrameImpl(_window);
};

$.RetainedUtil_transformPointGlobalToLocal = function(element, point) {
  return element.getTransform$0().createInverse$0().transformCoordinate$1(point);
};

$.Collections_collectionToString = function(c) {
  var result = $.StringBuffer_StringBuffer('');
  $.Collections__emitCollection(c, result, $.ListImplementation_List(null));
  return $.toString(result);
};

$._SharedWorkerContextEventsImpl$ = function(_ptr) {
  return new $._SharedWorkerContextEventsImpl(_ptr);
};

$.indexOf$2 = function(receiver, element, start) {
  if ($.isJsArray(receiver)) {
    if (!(typeof start === 'number' && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    return $.Arrays_indexOf(receiver, element, start, receiver.length);
  } else if (typeof receiver === 'string') {
    $.checkNull(element);
    if (!(typeof start === 'number' && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    if (!(typeof element === 'string'))
      throw $.$$throw($.ArgumentError$(element));
    if (start < 0)
      return -1;
    return receiver.indexOf(element, start);
  }
  return receiver.indexOf$2(element, start);
};

$.RetainedUtil_hitTest = function(stage, point) {
  return $.RetainedUtil__hitTest(stage.get$rootElement(), point);
};

$.StringBufferImpl$ = function(content$) {
  var t1 = new $.StringBufferImpl(null, null);
  t1.StringBufferImpl$1(content$);
  return t1;
};

$.NoSuchMethodError_safeToString = function(object) {
  if (typeof object === 'number' && Math.floor(object) === object || typeof object === 'number' || typeof object === 'boolean' || null == object)
    return $.toString(object);
  if (typeof object === 'string')
    return '"' + $.S($.replaceAll($.replaceAll($.replaceAll($.replaceAll(object, '\\', '\\\\'), '\n', '\\n'), '\r', '\\r'), '"', '\\"')) + '"';
  return $.Primitives_objectToString(object);
};

$._MainManagerStub$ = function() {
  return new $._MainManagerStub();
};

$.Coordinate$ = function(x, y) {
  return new $.Coordinate(x, y);
};

$.makeLiteralMap = function(keyValuePairs) {
  var iterator = $.iterator(keyValuePairs);
  var result = $.LinkedHashMapImplementation$();
  for (; iterator.hasNext$0() === true;)
    result.operator$indexSet$2(iterator.next$0(), iterator.next$0());
  return result;
};

$.Tuple$ = function(item1, item2) {
  return new $.Tuple(item1, item2);
};

$._createMeasurementFuture = function(computeValue, completer) {
  if ($._pendingRequests == null) {
    $._pendingRequests = [];
    $._maybeScheduleMeasurementFrame();
  }
  $.add$1($._pendingRequests, $._MeasurementRequest$(computeValue, completer));
  return completer.get$future();
};

$.Uri__addIfNonEmpty = function(sb, test, first, second) {
  if (!('' === test)) {
    $.add$1(sb, first == null ? 'null' : first);
    $.add$1(sb, second == null ? 'null' : second);
  }
};

$.CollectionUtil_allUnique = function(items) {
  if (typeof items !== 'string' && (typeof items !== 'object' || items === null || items.constructor !== Array && !items.is$JavaScriptIndexingBehavior()))
    return $.CollectionUtil_allUnique$bailout(1, items);
  $.requireArgumentNotNull(items, 'items');
  for (var i = 0; i < items.length; ++i)
    for (var j = i + 1; t1 = items.length, j < t1; ++j) {
      if (i >= t1)
        throw $.ioore(i);
      if ($.eqB(items[i], items[j]))
        return false;
    }
  return true;
  var t1;
};

$._FilteredElementList$ = function(node) {
  return new $._FilteredElementList(node, node.get$nodes());
};

$.addAll = function(receiver, collection) {
  if (!$.isJsArray(receiver))
    return receiver.addAll$1(collection);
  var iterator = $.iterator(collection);
  for (; iterator.hasNext$0() === true;)
    $.add$1(receiver, iterator.next$0());
};

$.Collections__emitCollection = function(c, result, visiting) {
  $.add$1(visiting, c);
  var isList = typeof c === 'object' && c !== null && (c.constructor === Array || c.is$List());
  $.add$1(result, isList ? '[' : '{');
  for (var t1 = $.iterator(c), first = true; t1.hasNext$0() === true;) {
    var t2 = t1.next$0();
    if (!first)
      $.add$1(result, ', ');
    $.Collections__emitObject(t2, result, visiting);
    first = false;
  }
  $.add$1(result, isList ? ']' : '}');
  $.removeLast(visiting);
};

$._document = function() {
return document;
};

$.typeNameInChrome = function(obj) {
  var name$ = obj.constructor.name;
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'CanvasPixelArray')
    return 'Uint8ClampedArray';
  if (name$ === 'WebKitMutationObserver')
    return 'MutationObserver';
  return name$;
};

$._FrameSetElementEventsImpl$ = function(_ptr) {
  return new $._FrameSetElementEventsImpl(_ptr);
};

$.TableElement_TableElement = function() {
  return $._Elements_createTableElement();
};

$.allMatches = function(receiver, str) {
  if (!(typeof receiver === 'string'))
    return receiver.allMatches$1(str);
  $.checkString(str);
  return $.allMatchesInStringUnchecked(receiver, str);
};

$._IrvElectionMapper$ = function() {
  return new $._IrvElectionMapper($.spawnFunction($._irvElectionIsolate), null, null, null, null, null, null, null, false, $.EventHandle$(), $.EventHandle$(), $.EventHandle$());
};

$.toStringForNativeObject = function(obj) {
  return 'Instance of ' + $.getTypeNameOf(obj);
};

$.ltB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a < b : $.lt$slow(a, b) === true;
};

$.IrvRound$_internal = function(places, eliminations) {
  return new $.IrvRound(places, eliminations);
};

$.GlobalId_GlobalId = function() {
  var t1 = $.GlobalId__globalId;
  $.GlobalId__globalId = $.add(t1, 1);
  return $.GlobalId$_internal(t1);
};

$.S = function(value) {
  var res = $.toString(value);
  if (!(typeof res === 'string'))
    throw $.$$throw($.ArgumentError$(value));
  return res;
};

$._DoubleLinkedQueueIterator$ = function(_sentinel) {
  var t1 = new $._DoubleLinkedQueueIterator(_sentinel, null);
  t1._DoubleLinkedQueueIterator$1(_sentinel);
  return t1;
};

$._ReceivePortFactory_ReceivePort = function() {
  return $._ReceivePortImpl$();
};

$._Device_isIE = function() {
  return $._Device_isOpera() !== true && $.contains$2($._Device_userAgent(), 'MSIE', 0) === true;
};

$._DedicatedWorkerContextEventsImpl$ = function(_ptr) {
  return new $._DedicatedWorkerContextEventsImpl(_ptr);
};

$._IsolateNatives__startNonWorker = function(functionName, uri, replyPort) {
  if (!(uri == null))
    throw $.$$throw($.UnsupportedOperationException$('Currently spawnUri is not supported without web workers.'));
  $._globalState().get$topEventLoop().enqueue$3($._IsolateContext$(), new $._IsolateNatives__startNonWorker_function(functionName, replyPort), 'nonworker start');
};

$._AttributeClassSet$ = function(element) {
  return new $._AttributeClassSet(element);
};

$.StringImplementation_String$fromCharCodes = function(charCodes) {
  return $.StringImplementation__fromCharCodes(charCodes);
};

$._EventLoop$ = function() {
  return new $._EventLoop($.Queue_Queue());
};

$.substringUnchecked = function(receiver, startIndex, endIndex) {
  return receiver.substring(startIndex, endIndex);
};

$.Primitives_stringFromCharCodes = function(charCodes) {
  for (var t1 = $.iterator(charCodes); t1.hasNext$0() === true;) {
    var t2 = t1.next$0();
    if (!(typeof t2 === 'number' && Math.floor(t2) === t2))
      throw $.$$throw($.ArgumentError$(t2));
  }
  return String.fromCharCode.apply(null, charCodes);
};

$.rnd = function() {
  if ($._botHelperRandom == null)
    $._botHelperRandom = $.Random_Random(null);
  return $._botHelperRandom;
};

$._convertNativeToDart_IDBAny = function(object) {
  return $._convertNativeToDart_AcceptStructuredClone(object, false);
};

$._AudioContextEventsImpl$ = function(_ptr) {
  return new $._AudioContextEventsImpl(_ptr);
};

$.typeNameInSafari = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'CanvasPixelArray')
    return 'Uint8ClampedArray';
  if (name$ === 'WebKitMutationObserver')
    return 'MutationObserver';
  return name$;
};

$._ElementAttributeMap$ = function(_element) {
  return new $._ElementAttributeMap(_element);
};

$.contains$2 = function(receiver, other, startIndex) {
  if (!(typeof receiver === 'string'))
    return receiver.contains$2(other, startIndex);
  $.checkNull(other);
  return $.stringContainsUnchecked(receiver, other, startIndex);
};

$.regExpMatchStart = function(m) {
  return m.index;
};

$.every = function(receiver, f) {
  if (!$.isJsArray(receiver))
    return receiver.every$1(f);
  else
    return $.Collections_every(receiver, f);
};

$._dynamicMetadata = function(table) {
  $dynamicMetadata = table;
};

$._dynamicMetadata0 = function() {
  if (typeof($dynamicMetadata) === 'undefined') {
    var t1 = [];
    $._dynamicMetadata(t1);
  }
  return $dynamicMetadata;
};

$.Arrays_lastIndexOf = function(a, element, startIndex) {
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $.Arrays_lastIndexOf$bailout(1, a, element, startIndex);
  if (typeof startIndex !== 'number')
    return $.Arrays_lastIndexOf$bailout(1, a, element, startIndex);
  if (startIndex < 0)
    return -1;
  var t1 = a.length;
  if (startIndex >= t1)
    startIndex = t1 - 1;
  for (var i = startIndex; i >= 0; --i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$.Collections_every = function(iterable, f) {
  for (var t1 = $.iterator(iterable); t1.hasNext$0() === true;)
    if (f.call$1(t1.next$0()) !== true)
      return false;
  return true;
};

$._Collections_every = function(iterable, f) {
  for (var t1 = $.iterator(iterable); t1.hasNext$0() === true;)
    if (f.call$1(t1.next$0()) !== true)
      return false;
  return true;
};

$.jsHasOwnProperty = function(jsObject, property) {
  return jsObject.hasOwnProperty(property);
};

$.ArgumentError$ = function(message) {
  return new $.ArgumentError(message);
};

$._IsolateNatives__spawn = function(functionName, uri, isLight) {
  var completer = $.Completer_Completer();
  var port = $._ReceivePortFactory_ReceivePort();
  port.receive$1(new $._IsolateNatives__spawn_anon(port, completer));
  var signalReply = port.toSendPort$0();
  if ($._globalState().get$useWorkers() === true && !isLight)
    $._IsolateNatives__startWorker(functionName, uri, signalReply);
  else
    $._IsolateNatives__startNonWorker(functionName, uri, signalReply);
  return $._BufferingSendPort$($._globalState().get$currentContext().get$id(), completer.get$future());
};

$.LocationData_getCandidateName = function(i) {
  $.requireArgument($.ge(i, 0), '', null);
  $.requireArgument($.lt(i, 26), '', null);
  return $.StringImplementation_String$fromCharCodes([$.add(i, 65)]);
};

$.lastIndexOf$2 = function(receiver, element, start) {
  if ($.isJsArray(receiver))
    return $.Arrays_lastIndexOf(receiver, element, start);
  else if (typeof receiver === 'string') {
    $.checkNull(element);
    if (!(start == null)) {
      if (!(typeof start === 'number'))
        throw $.$$throw($.ArgumentError$(start));
      if (start < 0)
        return -1;
      var t1 = receiver.length;
      if (start >= t1) {
        if (element === '')
          return t1;
        start = t1 - 1;
      } else
        start = start;
    }
    return $.stringLastIndexOfUnchecked(receiver, element, start);
  }
  return receiver.lastIndexOf$2(element, start);
};

$._PendingSendPortFinder$ = function() {
  var t1 = $._MessageTraverserVisitedMap$();
  t1 = new $._PendingSendPortFinder([], t1);
  t1._PendingSendPortFinder$0();
  return t1;
};

$._MatchImplementation$ = function(pattern, str, _start, _end, _groups) {
  return new $._MatchImplementation(pattern, str, _start, _end, _groups);
};

$.Arrays_copy = function(src, srcStart, dst, dstStart, count) {
  if (typeof src !== 'string' && (typeof src !== 'object' || src === null || src.constructor !== Array && !src.is$JavaScriptIndexingBehavior()))
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (typeof dst !== 'object' || dst === null || (dst.constructor !== Array || !!dst.immutable$list) && !dst.is$JavaScriptIndexingBehavior())
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (srcStart < dstStart)
    for (var i = srcStart + count - 1, j = dstStart + count - 1, t1 = src.length, t2 = dst.length; i >= srcStart; --i, --j) {
      if (i !== (i | 0))
        throw $.iae(i);
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      var t3 = src[i];
      if (j !== (j | 0))
        throw $.iae(j);
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
    }
  else
    for (t1 = srcStart + count, t2 = src.length, t3 = dst.length, i = srcStart, j = dstStart; i < t1; ++i, ++j) {
      if (i < 0 || i >= t2)
        throw $.ioore(i);
      var t4 = src[i];
      if (j < 0 || j >= t3)
        throw $.ioore(j);
      dst[j] = t4;
    }
};

$._AbstractWorkerEventsImpl$ = function(_ptr) {
  return new $._AbstractWorkerEventsImpl(_ptr);
};

$.indexSet = function(a, index, value) {
  if (a.constructor === Array && !a.immutable$list) {
    var key = index >>> 0;
    if (key === index && key < a.length) {
      a[key] = value;
      return;
    }
  }
  $.indexSet$slow(a, index, value);
};

$.DistanceBallot_DistanceBallot = function(voter, candidates) {
  var distances = $.$$(candidates).toHashMap$1(new $.DistanceBallot_DistanceBallot_anon(voter));
  var rank = $.ListImplementation_List$from(candidates);
  $.requireArgument(rank.length > 0, 'candidates', null);
  $.requireArgument($.CollectionUtil_allUnique(rank), 'candidates', null);
  $.sort(rank, new $.DistanceBallot_DistanceBallot_anon0(distances));
  return $.DistanceBallot$_internal(voter, $.ReadOnlyCollection$(rank), distances);
};

$.CanvasElement_CanvasElement = function(width, height) {
  var t1 = $ === width;
  if (t1)
    width = null;
  var t2 = $ === height;
  if (t2)
    height = null;
  if (t1)
    return $._Elements_createCanvasElement(null, null);
  if (t2)
    return $._Elements_createCanvasElement(width, null);
  return $._Elements_createCanvasElement(width, height);
};

$.Uri$fromString = function(uri) {
  var t1 = $.CTC17.firstMatch$1(uri);
  return new $.Uri($.Uri__emptyIfNull($.index(t1, 1)), $.Uri__emptyIfNull($.index(t1, 2)), $.Uri__emptyIfNull($.index(t1, 3)), $.Uri__parseIntOrZero($.index(t1, 4)), $.Uri__emptyIfNull($.index(t1, 5)), $.Uri__emptyIfNull($.index(t1, 6)), $.Uri__emptyIfNull($.index(t1, 7)));
};

$._Collections_map = function(source, destination, f) {
  for (var t1 = $.iterator(source); t1.hasNext$0() === true;)
    destination.push(f.call$1(t1.next$0()));
  return destination;
};

$._IsolateEvent$ = function(isolate, fn, message) {
  return new $._IsolateEvent(isolate, fn, message);
};

$.ElectionPlace$ = function(place, candidates) {
  var t1 = new $.ElectionPlace(place, $.ListImplementation_List$from(candidates));
  t1.ElectionPlace$2(place, candidates);
  return t1;
};

$.ReadOnlyCollection$ = function(source) {
  return new $.ReadOnlyCollection($.ListImplementation_List$from(source));
};

$._Device_isFirefox = function() {
  return $.contains$2($._Device_userAgent(), 'Firefox', 0);
};

$._LocationWrapper__toString = function(p) {
return p.toString();
};

$.checkMutable = function(list, reason) {
  if (!!(list.immutable$list))
    throw $.$$throw($.UnsupportedOperationException$(reason));
};

$.FutureValueResult_isMyMap = function(value) {
  return !(value == null) && $.eqB($.get$length(value), 2) && value.containsKey$1('value') === true && value.containsKey$1('exception') === true;
};

$.RetainedUtil__hitTest = function(element, point) {
  point = $.RetainedUtil_transformPointGlobalToLocal(element, point);
  var bounds = $.Box$(0, 0, element.get$width(), element.get$height());
  var hits = $.ListImplementation_List(null);
  if (bounds.contains$1(point) === true) {
    var length$ = element.get$visualChildCount();
    if (typeof length$ !== 'number')
      return $.RetainedUtil__hitTest$bailout(1, element, length$, point, hits);
    for (var t1 = length$ - 1, i = 0; i < length$; ++i) {
      hits = $.RetainedUtil__hitTest(element.getVisualChild$1(t1 - i), point);
      if (hits.length > 0)
        break;
    }
    hits.push(element);
    return hits;
  } else
    return [];
};

$.hashCodeForNativeObject = function(object) {
  return $.Primitives_objectHashCode(object);
};

$._ElementFactoryProvider_createElement_tag = function(tag) {
return document.createElement(tag)
};

$.NotImplementedException$ = function(message) {
  return new $.NotImplementedException(message);
};

$.HslColor__hueToRgb = function(v1, v2, vH) {
  vH = $.mod(vH, 1);
  if (typeof vH !== 'number')
    throw $.iae(vH);
  if (6 * vH < 1)
    return v1 + (v2 - v1) * 6 * vH;
  else if (2 * vH < 1)
    return v2;
  else if (3 * vH < 2)
    return v1 + (v2 - v1) * (0.6666666666666666 - vH) * 6;
  return v1;
};

$.eq = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return a.operator$eq$1(b);
  return a === b;
};

$.DistanceView$ = function(node) {
  var t1 = new $.DistanceView(null, node, null);
  t1.HtmlView$1(node);
  return t1;
};

$.requireArgument = function(truth, arg, message) {
  if (truth !== true)
    if (!(message == null))
      throw $.$$throw($.DetailedIllegalArgumentException$(arg, message));
    else
      throw $.$$throw($.IllegalArgumentException$(arg));
};

$.Primitives_objectToString = function(object) {
  return 'Instance of \'' + $.S($.Primitives_objectTypeName(object)) + '\'';
};

$.insertRange$3 = function(receiver, start, length$, initialValue) {
  if (!$.isJsArray(receiver))
    return receiver.insertRange$3(start, length$, initialValue);
  return $.listInsertRange(receiver, start, length$, initialValue);
};

$._NotificationEventsImpl$ = function(_ptr) {
  return new $._NotificationEventsImpl(_ptr);
};

$._TarjanNode$ = function(value) {
  return new $._TarjanNode(value, -1, null);
};

$.DoubleLinkedQueueEntry$ = function(e) {
  var t1 = new $.DoubleLinkedQueueEntry(null, null, null);
  t1.DoubleLinkedQueueEntry$1(e);
  return t1;
};

$._CssClassSet$ = function(_element) {
  return new $._CssClassSet(_element);
};

$.convertDartClosureToJS = function(closure, arity) {
  if (closure == null)
    return;
  var function$ = closure.$identity;
  if (!!function$)
    return function$;
  function$ = function() {
    return $.invokeClosure.call$5(closure, $._currentIsolate(), arity, arguments[0], arguments[1]);
  };
  closure.$identity = function$;
  return function$;
};

$.TarjanCycleDetect$_internal = function(_list) {
  return new $.TarjanCycleDetect(0, $.ListImplementation_List(null), $.ListImplementation_List(null), _list);
};

$.CondorcetPair$_internal = function(can1, can2, ballots, firstOverSecond, secondOverFirst) {
  return new $.CondorcetPair(ballots, firstOverSecond, secondOverFirst, can1, can2);
};

$.ObjectNotClosureException$ = function() {
  return new $.ObjectNotClosureException();
};

$.Primitives_objectTypeName = function(object) {
  var name$ = $.constructorNameFallback(object);
  if ($.eqB(name$, 'Object')) {
    var decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
    if (typeof decompiled === 'string')
      name$ = decompiled;
  }
  return $.charCodeAt(name$, 0) === 36 ? $.substring$1(name$, 1) : name$;
};

$.IndexIterator$ = function(length$, indexer) {
  var t1 = new $.IndexIterator(indexer, length$, 0);
  t1.IndexIterator$2(length$, indexer);
  return t1;
};

$.stringReplaceJS = function(receiver, replacer, to) {
  return receiver.replace(replacer, to.replace('$', '$$$$'));
};

$._FuncNumEnumerable$ = function(_source, _func) {
  return new $._FuncNumEnumerable(_source, _func);
};

$.LocationData$ = function(voters, candidates) {
  var t1 = new $.LocationData(candidates, voters);
  t1.LocationData$2(voters, candidates);
  return t1;
};

$._convertNativeToDart_AcceptStructuredClone = function(object, mustCopy) {
  var values = [];
  var copies = [];
  var t1 = new $._convertNativeToDart_AcceptStructuredClone_findSlot(copies, values);
  var t2 = new $._convertNativeToDart_AcceptStructuredClone_readSlot(copies);
  return new $._convertNativeToDart_AcceptStructuredClone_walk(new $._convertNativeToDart_AcceptStructuredClone_writeSlot(copies), mustCopy, t1, t2).call$1(object);
};

$._FrozenElementList$_wrap = function(_nodeList) {
  return new $._FrozenElementList(_nodeList);
};

$.CondorcetElection$_internal = function(_pairs, _profiles, ballots, places) {
  return new $.CondorcetElection(_pairs, _profiles, ballots, places);
};

$.Property$ = function(name$, defaultValue) {
  return new $.Property(defaultValue, name$);
};

$.getFunctionForTypeNameOf = function() {
  if (!(typeof(navigator) === 'object'))
    return $.typeNameInChrome;
  var userAgent = navigator.userAgent;
  if ($.contains(userAgent, 'Chrome') || $.contains(userAgent, 'DumpRenderTree'))
    return $.typeNameInChrome;
  else if ($.contains(userAgent, 'Firefox'))
    return $.typeNameInFirefox;
  else if ($.contains(userAgent, 'MSIE'))
    return $.typeNameInIE;
  else if ($.contains(userAgent, 'Opera'))
    return $.typeNameInOpera;
  else if ($.contains(userAgent, 'AppleWebKit'))
    return $.typeNameInSafari;
  else
    return $.constructorNameFallback;
};

$.indexSet$slow = function(a, index, value) {
  if ($.isJsArray(a)) {
    if (!(typeof index === 'number' && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index < 0 || $.geB(index, $.get$length(a)))
      throw $.$$throw($.IndexOutOfRangeException$(index));
    $.checkMutable(a, 'indexed set');
    a[index] = value;
    return;
  }
  a.operator$indexSet$2(index, value);
};

$.Primitives_objectHashCode = function(object) {
  var hash = object.$identityHash;
  if (hash == null) {
    hash = $.add($.Primitives_hashCodeSeed, 1);
    $.Primitives_hashCodeSeed = hash;
    object.$identityHash = hash;
  }
  return hash;
};

$.gt = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a > b : $.gt$slow(a, b);
};

$._IsolateContext$ = function() {
  var t1 = new $._IsolateContext(null, null, null);
  t1._IsolateContext$0();
  return t1;
};

$.Dragger$ = function(_element) {
  var t1 = new $.Dragger(_element, $.EventHandle$(), $.EventHandle$(), null);
  t1.Dragger$1(_element);
  return t1;
};

$.add = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a + b : $.add$slow(a, b);
};

$.StringImplementation__fromCharCodes = function(charCodes) {
  $.checkNull(charCodes);
  if (!$.isJsArray(charCodes))
    charCodes = $.ListImplementation_List$from(charCodes);
  return $.Primitives_stringFromCharCodes(charCodes);
};

$.ListImplementation_List = function(length$) {
  return $.Primitives_newList(length$);
};

$._browserPrefix = function() {
  if ($._cachedBrowserPrefix == null)
    if ($._Device_isFirefox() === true)
      $._cachedBrowserPrefix = '-moz-';
    else if ($._Device_isIE() === true)
      $._cachedBrowserPrefix = '-ms-';
    else if ($._Device_isOpera() === true)
      $._cachedBrowserPrefix = '-o-';
    else
      $._cachedBrowserPrefix = '-webkit-';
  return $._cachedBrowserPrefix;
};

$._BodyElementEventsImpl$ = function(_ptr) {
  return new $._BodyElementEventsImpl(_ptr);
};

$.DistanceElection_DistanceElection = function(voters, candidates) {
  var t1 = {};
  var cans = $.ReadOnlyCollection$(candidates);
  var ballots = $.map($.$$(voters), new $.DistanceElection_DistanceElection_anon(cans)).toReadOnlyCollection$0();
  var distanceGroups = $.$$(cans).group$1(new $.DistanceElection_DistanceElection_anon0(ballots));
  var distances = $.ListImplementation_List$from(distanceGroups.getKeys$0());
  $.sort(distances, new $.DistanceElection_DistanceElection_anon1());
  t1.placeNumber_10 = 1;
  return $.DistanceElection$_internal(cans, ballots, $.map($.$$(distances), new $.DistanceElection_DistanceElection_anon2(t1, distanceGroups)).toReadOnlyCollection$0());
};

$._Timer$ = function(milliSeconds, callback) {
  var t1 = new $._Timer(true, null);
  t1._Timer$2(milliSeconds, callback);
  return t1;
};

$.forEach = function(receiver, f) {
  if (!$.isJsArray(receiver))
    return receiver.forEach$1(f);
  else
    return $.Collections_forEach(receiver, f);
};

$.Collections_forEach = function(iterable, f) {
  for (var t1 = $.iterator(iterable); t1.hasNext$0() === true;)
    f.call$1(t1.next$0());
};

$.VoterMapElement$ = function(w, h) {
  var t1 = new $.VoterMapElement($.ListImplementation_List(null), $.AffineTransform$(1, 0, 0, 1, 0, 0), null, $.HashMapImplementation$(), $.ListImplementation_List(null), true, $.EventHandle$(), $.EventHandle$(), null, w, h, null, null, false, null, $.HashMapImplementation$(), $.HashMapImplementation$(), false);
  t1.VoterMapElement$2(w, h);
  return t1;
};

$.PluralityElection$_internal = function(ballots, _ballotGroup, sourcePlaces) {
  return new $.PluralityElection(ballots, _ballotGroup, $.ReadOnlyCollection$(sourcePlaces));
};

$.LocationData__slice = function(itemCount, maxValue, sliceCount) {
  var values = $.ListImplementation_List(itemCount);
  var sliceSize = maxValue / sliceCount;
  for (var index = 0, i = 0; i < sliceCount; ++i) {
    if (index === itemCount)
      return values;
    else {
      var index0 = index + 1;
      var t1 = i * sliceSize;
      if (index >= itemCount)
        throw $.ioore(index);
      values[index] = t1;
    }
    index = index0;
  }
  for (; true;) {
    sliceSize = maxValue / (index * 2);
    for (index0 = index, i = 0; i < index; ++i) {
      if (index0 === itemCount)
        return values;
      else {
        var index1 = index0 + 1;
        if (i >= itemCount)
          throw $.ioore(i);
        t1 = $.add(values[i], sliceSize);
        if (index0 < 0 || index0 >= itemCount)
          throw $.ioore(index0);
        values[index0] = t1;
      }
      index0 = index1;
    }
    index = index0;
  }
};

$.isEmpty = function(receiver) {
  if (typeof receiver === 'string' || $.isJsArray(receiver))
    return receiver.length === 0;
  return receiver.isEmpty$0();
};

$._MutationObserverScheduler$ = function(callback) {
  var t1 = new $._MutationObserverScheduler(null, null, false, callback);
  t1._MutationObserverScheduler$1(callback);
  return t1;
};

$._IsolateNatives__getJSFunctionFromName = function(functionName) {
  return $globalThis[functionName];
};

$._SelectIterator$ = function(_source, _func) {
  return new $._SelectIterator(_source, _func);
};

$._Collections_forEach = function(iterable, f) {
  for (var t1 = $.iterator(iterable); t1.hasNext$0() === true;)
    f.call$1(t1.next$0());
};

$.Primitives_printString = function(string) {
  if (typeof dartPrint == "function") {
    dartPrint(string);
    return;
  }
  if (typeof window == "object") {
    if (typeof console == "object")
      console.log(string);
    return;
  }
  if (typeof print == "function") {
    print(string);
    return;
  }
  throw 'Unable to print message: ' + String(string);
};

$.dynamicSetMetadata = function(inputTable) {
  var t1 = $.buildDynamicMetadata(inputTable);
  $._dynamicMetadata(t1);
};

$.ButtonElement_ButtonElement = function() {
  return $._Elements_createButtonElement();
};

$.sub$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a - b;
  return a.operator$sub$1(b);
};

$._maybeScheduleMeasurementFrame = function() {
  if ($._measurementScheduler == null)
    $._measurementScheduler = $._MeasurementScheduler__MeasurementScheduler$best($._completeMeasurementFutures);
  $._measurementScheduler.maybeSchedule$0();
};

$.AffineTransform$ = function(scaleX, shearY, shearX, scaleY, translateX, translateY) {
  return new $.AffineTransform(scaleX, shearY, shearX, scaleY, translateX, translateY);
};

$.Queue_Queue = function() {
  return $.DoubleLinkedQueue$();
};

$.Primitives_newList = function(length$) {
  if (length$ == null)
    return new Array();
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$) || length$ < 0)
    throw $.$$throw($.ArgumentError$(length$));
  var result = new Array(length$);
  result.fixed$length = true;
  return result;
};

$.substring$2 = function(receiver, startIndex, endIndex) {
  if (!(typeof receiver === 'string'))
    return receiver.substring$2(startIndex, endIndex);
  $.checkNum(startIndex);
  var length$ = receiver.length;
  if (endIndex == null)
    endIndex = length$;
  $.checkNum(endIndex);
  if (startIndex < 0)
    throw $.$$throw($.IndexOutOfRangeException$(startIndex));
  if ($.gtB(startIndex, endIndex))
    throw $.$$throw($.IndexOutOfRangeException$(startIndex));
  if ($.gtB(endIndex, length$))
    throw $.$$throw($.IndexOutOfRangeException$(endIndex));
  return $.substringUnchecked(receiver, startIndex, endIndex);
};

$.window = function() {
return window;
};

$.HashMapImplementation$ = function() {
  var t1 = new $.HashMapImplementation(null, null, null, null, null);
  t1.HashMapImplementation$0();
  return t1;
};

$._FixedSizeListIterator$ = function(array) {
  return new $._FixedSizeListIterator($.get$length(array), array, 0);
};

$._FileReaderEventsImpl$ = function(_ptr) {
  return new $._FileReaderEventsImpl(_ptr);
};

$.PluralityElectionPlace$ = function(place, candidates, voteCount) {
  var t1 = new $.PluralityElectionPlace(voteCount, place, $.ListImplementation_List$from(candidates));
  t1.ElectionPlace$2(place, candidates);
  t1.PluralityElectionPlace$3(place, candidates, voteCount);
  return t1;
};

$.addLast = function(receiver, value) {
  if (!$.isJsArray(receiver))
    return receiver.addLast$1(value);
  $.checkGrowable(receiver, 'addLast');
  receiver.push(value);
};

$.IrvView$ = function(node) {
  var t1 = new $.IrvView($.EventHandle$(), null, null, node, null);
  t1.HtmlView$1(node);
  return t1;
};

$.isInfinite = function(receiver) {
  if (!(typeof receiver === 'number'))
    return receiver.isInfinite$0();
  return receiver == Infinity || receiver == -Infinity;
};

$._EventListenerListImpl$ = function(_ptr, _type) {
  return new $._EventListenerListImpl(_ptr, _type);
};

$.iae = function(argument) {
  throw $.$$throw($.ArgumentError$(argument));
};

$._DOMApplicationCacheEventsImpl$ = function(_ptr) {
  return new $._DOMApplicationCacheEventsImpl(_ptr);
};

$._IsolateNatives__spawnWorker = function(functionName, uri, replyPort) {
  if (functionName == null)
    functionName = 'main';
  if (uri == null)
    uri = $._IsolateNatives__thisScript();
  if ($.Uri$fromString(uri).isAbsolute$0() !== true)
    uri = $.S($.substring$2($._IsolateNatives__thisScript(), 0, $.lastIndexOf$1($._IsolateNatives__thisScript(), '/'))) + '/' + $.S(uri);
  var worker = new Worker(uri);
  worker.set$onmessage(new $._IsolateNatives__spawnWorker_anon(worker));
  var t1 = $._globalState();
  var workerId = t1.get$nextManagerId();
  t1.set$nextManagerId($.add(workerId, 1));
  worker.set$id(workerId);
  $.indexSet($._globalState().get$managers(), workerId, worker);
  worker.postMessage$1($._serializeMessage($.makeLiteralMap(['command', 'start', 'id', workerId, 'replyTo', $._serializeMessage(replyPort), 'functionName', functionName])));
};

$.toRadixString = function(receiver, radix) {
  if (!(typeof receiver === 'number'))
    return receiver.toRadixString$1(radix);
  $.checkNum(radix);
  if (radix < 2 || radix > 36)
    throw $.$$throw($.ArgumentError$(radix));
  return receiver.toString(radix);
};

$.HslColor$_internal = function(h, s, l) {
  return new $.HslColor(h, s, l);
};

$.StringImplementation__toJsStringArray = function(strings) {
  if (typeof strings !== 'object' || strings === null || (strings.constructor !== Array || !!strings.immutable$list) && !strings.is$JavaScriptIndexingBehavior())
    return $.StringImplementation__toJsStringArray$bailout(1, strings);
  $.checkNull(strings);
  var length$ = strings.length;
  if ($.isJsArray(strings)) {
    for (var i = 0; i < length$; ++i) {
      if (i >= strings.length)
        throw $.ioore(i);
      var string = strings[i];
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
    }
    var array = strings;
  } else {
    array = $.ListImplementation_List(length$);
    for (i = 0; i < length$; ++i) {
      if (i >= strings.length)
        throw $.ioore(i);
      string = strings[i];
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
      array[i] = string;
    }
  }
  return array;
};

$._timerFactory = function(millis, callback, repeating) {
  return repeating === true ? $._Timer$repeating(millis, callback) : $._Timer$(millis, callback);
};

$.query = function(selector) {
  return $._document().query$1(selector);
};

$.constructorNameFallback = function(object) {
  if (object == null)
    return 'Null';
  var constructor$ = object.constructor;
  if (typeof(constructor$) === 'function') {
    var name$ = constructor$.name;
    if (typeof name$ === 'string')
      var t1 = !(name$ === '') && !(name$ === 'Object') && !(name$ === 'Function.prototype');
    else
      t1 = false;
    if (t1)
      return name$;
  }
  var string = Object.prototype.toString.call(object);
  return string.substring(8, string.length - 1);
};

$.FormatException$ = function(message) {
  return new $.FormatException(message);
};

$.RgbColor__prependZeroIfNecessaryHelper = function(hex) {
  return $.eqB($.get$length(hex), 1) ? $.concat('0', hex) : hex;
};

$._LocalWindowEventsImpl$ = function(_ptr) {
  return new $._LocalWindowEventsImpl(_ptr);
};

$._ChildrenElementList$_wrap = function(element) {
  return new $._ChildrenElementList(element, element.get$$$dom_children());
};

$.unwrapException = function(ex) {
  if ("dartException" in ex)
    return ex.dartException;
  var message = ex.message;
  if (ex instanceof TypeError) {
    var type = ex.type;
    var name$ = ex.arguments ? ex.arguments[0] : "";
    if ($.eqB(type, 'property_not_function') || $.eqB(type, 'called_non_callable') || $.eqB(type, 'non_object_property_call') || $.eqB(type, 'non_object_property_load'))
      if (typeof name$ === 'string' && $.startsWith(name$, 'call$') === true)
        return $.ObjectNotClosureException$();
      else
        return $.NullPointerException$(null, $.CTC1);
    else if ($.eqB(type, 'undefined_method'))
      if (typeof name$ === 'string' && $.startsWith(name$, 'call$') === true)
        return $.ObjectNotClosureException$();
      else
        return $.NoSuchMethodError$('', name$, [], null);
    var ieErrorCode = ex.number & 0xffff;
    var ieFacilityNumber = ex.number>>16 & 0x1FFF;
    if (typeof message === 'string')
      if ($.endsWith(message, 'is null') === true || $.endsWith(message, 'is undefined') === true || $.endsWith(message, 'is null or undefined') === true)
        return $.NullPointerException$(null, $.CTC1);
      else {
        if ($.contains$1(message, ' is not a function') !== true)
          var t1 = ieErrorCode === 438 && ieFacilityNumber === 10;
        else
          t1 = true;
        if (t1)
          return $.NoSuchMethodError$('', '<unknown>', [], null);
      }
    return $.ExceptionImplementation$(typeof message === 'string' ? message : '');
  }
  if (ex instanceof RangeError) {
    if (typeof message === 'string' && $.contains$1(message, 'call stack') === true)
      return $.StackOverflowException$();
    return $.ArgumentError$('');
  }
  if (typeof InternalError == 'function' && ex instanceof InternalError)
    if (typeof message === 'string' && message === 'too much recursion')
      return $.StackOverflowException$();
  return ex;
};

$.LocationData_getHue = function(candidate) {
  if ($.LocationData__candidateHues == null)
    $.LocationData__candidateHues = $.LocationData__slice(26, 360, 3);
  var letterCode = $.sub($.charCodeAt(candidate.get$name(), 0), 65);
  return $.index($.LocationData__candidateHues, letterCode);
};

$.checkNumbers = function(a, b) {
  if (typeof a === 'number')
    if (typeof b === 'number')
      return true;
    else {
      $.checkNull(b);
      throw $.$$throw($.ArgumentError$(b));
    }
  return false;
};

$.stringJoinUnchecked = function(array, separator) {
  return array.join(separator);
};

$.checkString = function(value) {
  if (!(typeof value === 'string')) {
    $.checkNull(value);
    throw $.$$throw($.ArgumentError$(value));
  }
  return value;
};

$.replaceAll = function(receiver, from, to) {
  if (!(typeof receiver === 'string'))
    return receiver.replaceAll$2(from, to);
  $.checkString(to);
  return $.stringReplaceAllUnchecked(receiver, from, to);
};

$._DataAttributeMap$ = function($$dom_attributes) {
  return new $._DataAttributeMap($$dom_attributes);
};

$._WhereIterator$ = function(_source, _func) {
  return new $._WhereIterator(_source, _func, null, null);
};

$.filter = function(receiver, predicate) {
  if (!$.isJsArray(receiver))
    return receiver.filter$1(predicate);
  else
    return $.Collections_filter(receiver, [], predicate);
};

$.Collections_filter = function(source, destination, f) {
  for (var t1 = $.iterator(source); t1.hasNext$0() === true;) {
    var t2 = t1.next$0();
    if (f.call$1(t2) === true)
      destination.push(t2);
  }
  return destination;
};

$.Element_Element$tag = function(tag) {
  return $._ElementFactoryProvider_createElement_tag(tag);
};

$._SimpleClientRect$ = function(left, top$, width, height) {
  return new $._SimpleClientRect(left, top$, width, height);
};

$.ReadOnlyCollection$empty = function() {
  return new $.ReadOnlyCollection($.CTC1);
};

$._DistanceElectionMapper$ = function() {
  return new $._DistanceElectionMapper($.spawnFunction($._distanceElectionIsolate), null, null, null, null, null, null, null, false, $.EventHandle$(), $.EventHandle$(), $.EventHandle$());
};

$._LocationWrapper$ = function(_ptr) {
  return new $._LocationWrapper(_ptr);
};

$.Stage$ = function(_canvas, _element) {
  var t1 = new $.Stage($.EventHandle$(), _canvas, _element, null, $.HashMapImplementation$(), $.HashMapImplementation$(), false);
  t1.Stage$2(_canvas, _element);
  return t1;
};

$.regExpExec = function(regExp, str) {
  var result = $.regExpGetNative(regExp).exec(str);
  if (result === null)
    return;
  return result;
};

$.ReadOnlyCollection$wrap = function(source) {
  return new $.ReadOnlyCollection(source);
};

$.Util_getHashCode = function(source) {
  for (var t1 = $.iterator(source), hash = 0; t1.hasNext$0() === true;) {
    var t2 = t1.next$0();
    var next = t2 == null ? 0 : $.hashCode(t2);
    if (typeof next !== 'number')
      throw $.iae(next);
    var hash0 = 536870911 & hash + next;
    var hash1 = 536870911 & hash0 + ((524287 & hash0) << 10 >>> 0);
    hash1 = (hash1 ^ $.shr(hash1, 6)) >>> 0;
    hash = hash1;
  }
  hash0 = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
  hash0 = (hash0 ^ $.shr(hash0, 11)) >>> 0;
  return 536870911 & hash0 + ((16383 & hash0) << 15 >>> 0);
};

$.IllegalArgumentException$ = function(argument) {
  return new $.IllegalArgumentException(argument);
};

$._IsolateNatives__startWorker = function(functionName, uri, replyPort) {
  if ($._globalState().get$isWorker() === true)
    $._globalState().get$mainManager().postMessage$1($._serializeMessage($.makeLiteralMap(['command', 'spawn-worker', 'functionName', functionName, 'uri', uri, 'replyPort', replyPort])));
  else
    $._IsolateNatives__spawnWorker(functionName, uri, replyPort);
};

$.stringLastIndexOfUnchecked = function(receiver, element, start) {
  return receiver.lastIndexOf(element, start);
};

$._HttpRequestUploadEventsImpl$ = function(_ptr) {
  return new $._HttpRequestUploadEventsImpl(_ptr);
};

$.Mouse_markMouseOver = function(stage, coordinate) {
  $.requireArgumentNotNull(stage, 'stage');
  var t1 = !(coordinate == null);
  $.requireArgument(coordinate == null || coordinate.get$isValid() === true, 'coordinate', null);
  var items = $.get$Mouse__stageMouseCacheProperty().get$1(stage);
  if (!(items == null)) {
    $.forEach(items, new $.Mouse_markMouseOver_anon());
    $.get$Mouse__stageMouseCacheProperty().clear$1(stage);
  }
  if (t1) {
    var hits = $.RetainedUtil_hitTest(stage, coordinate);
    $.get$Mouse__stageMouseCacheProperty().set$2(stage, hits);
    $.forEach(hits, new $.Mouse_markMouseOver_anon0());
    if ($.gtB($.get$length(hits), 0))
      $.get$Mouse_isMouseDirectlyOverProperty().set$2($.index(hits, 0), true);
    return hits;
  }
  return;
};

$.DualPivotQuicksort__doSort = function(a, left, right, compare) {
  if ($.leB($.sub(right, left), 32))
    $.DualPivotQuicksort_insertionSort_(a, left, right, compare);
  else
    $.DualPivotQuicksort__dualPivotQuicksort(a, left, right, compare);
};

$.PluralityView$ = function(node) {
  var t1 = new $.PluralityView(null, node, null);
  t1.HtmlView$1(node);
  return t1;
};

$.checkNull = function(object) {
  if (object == null)
    throw $.$$throw($.NullPointerException$(null, $.CTC1));
  return object;
};

$.DistanceElectionPlace$ = function(place, candidates, avgDistance, avgDistanceSquared) {
  var t1 = new $.DistanceElectionPlace(avgDistance, avgDistanceSquared, place, $.ListImplementation_List$from(candidates));
  t1.ElectionPlace$2(place, candidates);
  return t1;
};

$.contains = function(userAgent, name$) {
  return userAgent.indexOf(name$) !== -1;
};

$.CondorcetView$ = function(node) {
  var t1 = new $.CondorcetView($.EventHandle$(), null, null, null, node, null);
  t1.HtmlView$1(node);
  return t1;
};

$.DistanceElection$_internal = function(candidates, ballots, places) {
  return new $.DistanceElection(candidates, ballots, places);
};

$.Collections__containsRef = function(c, ref) {
  for (var t1 = $.iterator(c); t1.hasNext$0() === true;) {
    var t2 = t1.next$0();
    if (t2 == null ? ref == null : t2 === ref)
      return true;
  }
  return false;
};

$.toString = function(value) {
  if (typeof value == "object" && value !== null)
    if ($.isJsArray(value))
      return $.Collections_collectionToString(value);
    else
      return value.toString$0();
  if (value === 0 && (1 / value) < 0)
    return '-0.0';
  if (value == null)
    return 'null';
  if (typeof value == "function")
    return 'Closure';
  return String(value);
};

$.concat = function(receiver, other) {
  if (!(typeof other === 'string'))
    throw $.$$throw($.ArgumentError$(other));
  return receiver + other;
};

$.Maps__emitMap = function(m, result, visiting) {
  var t1 = {};
  $.add$1(visiting, m);
  $.add$1(result, '{');
  t1.first_1 = true;
  $.forEach(m, new $.Maps__emitMap_anon(result, t1, visiting));
  $.add$1(result, '}');
  $.removeLast(visiting);
};

$._MessageTraverser_isPrimitive = function(x) {
  return x == null || typeof x === 'string' || typeof x === 'number' || typeof x === 'boolean';
};

$._Deserializer_isPrimitive = function(x) {
  return x == null || typeof x === 'string' || typeof x === 'number' || typeof x === 'boolean';
};

$.CanvasUtil_transform = function(ctx, tx) {
  $.requireArgumentNotNull(ctx, 'ctx');
  $.requireArgumentNotNull(tx, 'tx');
  ctx.transform$6(tx.get$scaleX(), tx.get$shearY(), tx.get$shearX(), tx.get$scaleY(), tx.get$translateX(), tx.get$translateY());
};

$._IDBOpenDBRequestEventsImpl$ = function(_ptr) {
  return new $._IDBOpenDBRequestEventsImpl(_ptr);
};

$.sqrt = function(x) {
  return Math.sqrt($.checkNum(x));
};

$._serializeMessage = function(message) {
  if ($._globalState().get$needSerialization() === true)
    return $._JsSerializer$().traverse$1(message);
  else
    return $._JsCopier$().traverse$1(message);
};

$.IndexOutOfRangeException$ = function(_value) {
  return new $.IndexOutOfRangeException(_value);
};

$.CandidateManagerView$ = function(node) {
  var t1 = new $.CandidateManagerView($.EventHandle$(), $.EventHandle$(), $.ReadOnlyCollection$empty(), node, null);
  t1.HtmlView$1(node);
  return t1;
};

$.IrvRound__getEliminatedCandidates = function(places) {
  if ($.eqB($.get$length(places), 1))
    return [];
  var majorityCount = $.add($.tdiv(places.selectNumbers$1(new $.IrvRound__getEliminatedCandidates_anon()).sum$0(), 2), 1);
  if ($.eqB($.get$length($.index(places, 0)), 1) && $.geB($.index(places, 0).get$voteCount(), majorityCount))
    return [];
  return $.map($.last(places), new $.IrvRound__getEliminatedCandidates_anon0()).toList$0();
};

$._IDBVersionChangeRequestEventsImpl$ = function(_ptr) {
  return new $._IDBVersionChangeRequestEventsImpl(_ptr);
};

$.Mouse_isMouseDirectlyOver = function(element) {
  return $.get$Mouse_isMouseDirectlyOverProperty().get$1(element);
};

$._MessageTraverserVisitedMap$ = function() {
  return new $._MessageTraverserVisitedMap();
};

$._JsSerializer$ = function() {
  var t1 = new $._JsSerializer(0, $._MessageTraverserVisitedMap$());
  t1._JsSerializer$0();
  return t1;
};

$.CancelableEventArgs$ = function() {
  return new $.CancelableEventArgs(false);
};

$.LinkedHashMapImplementation$ = function() {
  var t1 = new $.LinkedHashMapImplementation(null, null);
  t1.LinkedHashMapImplementation$0();
  return t1;
};

$.Collections_map = function(source, destination, f) {
  for (var t1 = $.iterator(source); t1.hasNext$0() === true;)
    destination.push(f.call$1(t1.next$0()));
  return destination;
};

$._DOMWindowCrossFrameImpl__createSafe = function(w) {
  var t1 = $.window();
  if (w == null ? t1 == null : w === t1)
    return w;
  else
    return $._DOMWindowCrossFrameImpl$(w);
};

$._LocationCrossFrameImpl__createSafe = function(location$) {
  var t1 = $.window().get$location();
  if (location$ == null ? t1 == null : location$ === t1)
    return location$;
  else
    return $._LocationCrossFrameImpl$(location$);
};

$.HslColor_HslColor = function(h, s, l) {
  $.requireArgument(!(h == null) && $.isInfinite(h) !== true && $.isNaN(h) !== true, 'h', null);
  h = $.mod(h, 360);
  $.requireArgument($.isInfinite(s) !== true && $.isNaN(s) !== true, 's', 'must be a valid number');
  var t1 = s >= 0 && s <= 1;
  $.requireArgument(t1, 's', 'must be >= 0 && <= 1 but was ' + $.S(s));
  $.requireArgument($.isInfinite(l) !== true && $.isNaN(l) !== true, 'l', 'must be a valid number');
  t1 = l >= 0 && l <= 1;
  $.requireArgument(t1, 'l', 'must be >= 0 && <=1 but was ' + $.S(l));
  return $.HslColor$_internal(h, s, l);
};

$.defineProperty = function(obj, property, value) {
  Object.defineProperty(obj, property,
      {value: value, enumerable: false, writable: true, configurable: true});
};

$.lt = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a < b : $.lt$slow(a, b);
};

$._FileWriterEventsImpl$ = function(_ptr) {
  return new $._FileWriterEventsImpl(_ptr);
};

$._Manager$ = function() {
  var t1 = new $._Manager(0, 0, 1, null, null, null, null, null, null, null, null, null);
  t1._Manager$0();
  return t1;
};

$.sub = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a - b : $.sub$slow(a, b);
};

$._Lists_lastIndexOf$bailout = function(state0, a, element, startIndex) {
  if ($.ltB(startIndex, 0))
    return -1;
  if ($.geB(startIndex, $.get$length(a)))
    startIndex = $.sub($.get$length(a), 1);
  for (var i = startIndex; $.geB(i, 0); i = $.sub(i, 1))
    if ($.eqB($.index(a, i), element))
      return i;
  return -1;
};

$.Arrays_lastIndexOf$bailout = function(state0, a, element, startIndex) {
  if ($.ltB(startIndex, 0))
    return -1;
  if ($.geB(startIndex, $.get$length(a)))
    startIndex = $.sub($.get$length(a), 1);
  for (var i = startIndex; $.geB(i, 0); i = $.sub(i, 1))
    if ($.eqB($.index(a, i), element))
      return i;
  return -1;
};

$.Arrays_indexOf$bailout = function(state0, a, element, startIndex, endIndex) {
  if ($.geB(startIndex, $.get$length(a)))
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (var i = startIndex; i < endIndex; ++i)
    if ($.eqB($.index(a, i), element))
      return i;
  return -1;
};

$._Lists_indexOf$bailout = function(state0, a, element, startIndex, endIndex) {
  if ($.geB(startIndex, $.get$length(a)))
    return -1;
  if ($.ltB(startIndex, 0))
    startIndex = 0;
  for (var i = startIndex; $.ltB(i, endIndex); i = $.add(i, 1))
    if ($.eqB($.index(a, i), element))
      return i;
  return -1;
};

$._Lists_getRange$bailout = function(state0, a, start, length$, accumulator) {
  if ($.ltB(length$, 0))
    throw $.$$throw($.ArgumentError$('length'));
  if ($.ltB(start, 0))
    throw $.$$throw($.IndexOutOfRangeException$(start));
  var end = $.add(start, length$);
  if ($.gtB(end, $.get$length(a)))
    throw $.$$throw($.IndexOutOfRangeException$(end));
  for (var i = start; $.ltB(i, end); i = $.add(i, 1))
    accumulator.push($.index(a, i));
  return accumulator;
};

$.DualPivotQuicksort__dualPivotQuicksort$bailout = function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11, env12, env13) {
  switch (state0) {
    case 1:
      var a = env0;
      var left = env1;
      var right = env2;
      var compare = env3;
      break;
    case 2:
      a = env0;
      left = env1;
      right = env2;
      compare = env3;
      less = env4;
      k = env5;
      index1 = env6;
      index5 = env7;
      el2 = env8;
      pivots_are_equal = env9;
      ak = env10;
      comp = env11;
      el4 = env12;
      great = env13;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      var sixth = $.tdiv($.add($.sub(right, left), 1), 6);
      if (typeof sixth !== 'number')
        throw $.iae(sixth);
      var index1 = left + sixth;
      var index5 = $.sub(right, sixth);
      if (typeof right !== 'number')
        throw $.iae(right);
      var index3 = $.tdiv(left + right, 2);
      var index2 = index3 - sixth;
      var index4 = index3 + sixth;
      var el1 = $.index(a, index1);
      var el2 = $.index(a, index2);
      var el3 = $.index(a, index3);
      var el4 = $.index(a, index4);
      var el5 = $.index(a, index5);
      if ($.gtB(compare.call$2(el1, el2), 0)) {
        var t0 = el1;
        el1 = el2;
        el2 = t0;
      }
      if ($.gtB(compare.call$2(el4, el5), 0)) {
        t0 = el5;
        el5 = el4;
        el4 = t0;
      }
      if ($.gtB(compare.call$2(el1, el3), 0)) {
        t0 = el3;
        el3 = el1;
        el1 = t0;
      }
      if ($.gtB(compare.call$2(el2, el3), 0)) {
        t0 = el3;
        el3 = el2;
        el2 = t0;
      }
      if ($.gtB(compare.call$2(el1, el4), 0)) {
        t0 = el1;
        el1 = el4;
        el4 = t0;
      }
      if ($.gtB(compare.call$2(el3, el4), 0)) {
        t0 = el3;
        el3 = el4;
        el4 = t0;
      }
      if ($.gtB(compare.call$2(el2, el5), 0)) {
        t0 = el5;
        el5 = el2;
        el2 = t0;
      }
      if ($.gtB(compare.call$2(el2, el3), 0)) {
        t0 = el3;
        el3 = el2;
        el2 = t0;
      }
      if ($.gtB(compare.call$2(el4, el5), 0)) {
        t0 = el5;
        el5 = el4;
        el4 = t0;
      }
      $.indexSet(a, index1, el1);
      $.indexSet(a, index3, el3);
      $.indexSet(a, index5, el5);
      $.indexSet(a, index2, $.index(a, left));
      $.indexSet(a, index4, $.index(a, right));
      var less = left + 1;
      var great = right - 1;
      var pivots_are_equal = $.eqB(compare.call$2(el2, el4), 0);
    case 2:
      if (state0 === 2 || state0 === 0 && pivots_are_equal)
        switch (state0) {
          case 0:
            var k = less;
          case 2:
            L0:
              while (true)
                switch (state0) {
                  case 0:
                    if (!(k <= great))
                      break L0;
                  case 2:
                    c$0: {
                      switch (state0) {
                        case 0:
                          var ak = $.index(a, k);
                          var comp = compare.call$2(ak, el2);
                        case 2:
                          state0 = 0;
                          if ($.eqB(comp, 0))
                            break c$0;
                          if ($.ltB(comp, 0)) {
                            if (!(k === less)) {
                              $.indexSet(a, k, $.index(a, less));
                              $.indexSet(a, less, ak);
                            }
                            ++less;
                          } else
                            for (var less0 = less + 1; true;) {
                              comp = compare.call$2($.index(a, great), el2);
                              if ($.gtB(comp, 0)) {
                                --great;
                                continue;
                              } else if ($.ltB(comp, 0)) {
                                $.indexSet(a, k, $.index(a, less));
                                $.indexSet(a, less, $.index(a, great));
                                var great0 = great - 1;
                                $.indexSet(a, great, ak);
                                great = great0;
                                less = less0;
                                break;
                              } else {
                                $.indexSet(a, k, $.index(a, great));
                                great0 = great - 1;
                                $.indexSet(a, great, ak);
                                great = great0;
                                break;
                              }
                            }
                      }
                    }
                    ++k;
                }
        }
      else
        for (k = less; k <= great; ++k) {
          ak = $.index(a, k);
          if ($.ltB(compare.call$2(ak, el2), 0)) {
            if (!(k === less)) {
              $.indexSet(a, k, $.index(a, less));
              $.indexSet(a, less, ak);
            }
            ++less;
          } else if ($.gtB(compare.call$2(ak, el4), 0))
            for (less0 = less + 1; true;)
              if ($.gtB(compare.call$2($.index(a, great), el4), 0)) {
                --great;
                if (great < k)
                  break;
                continue;
              } else {
                if ($.ltB(compare.call$2($.index(a, great), el2), 0)) {
                  $.indexSet(a, k, $.index(a, less));
                  $.indexSet(a, less, $.index(a, great));
                  great0 = great - 1;
                  $.indexSet(a, great, ak);
                  great = great0;
                  less = less0;
                } else {
                  $.indexSet(a, k, $.index(a, great));
                  great0 = great - 1;
                  $.indexSet(a, great, ak);
                  great = great0;
                }
                break;
              }
        }
      var t1 = less - 1;
      $.indexSet(a, left, $.index(a, t1));
      $.indexSet(a, t1, el2);
      $.indexSet(a, right, $.index(a, great + 1));
      $.indexSet(a, great + 1, el4);
      $.DualPivotQuicksort__doSort(a, left, less - 2, compare);
      $.DualPivotQuicksort__doSort(a, great + 2, right, compare);
      if (pivots_are_equal)
        return;
      if (less < index1 && $.gtB(great, index5)) {
        for (; $.eqB(compare.call$2($.index(a, less), el2), 0);)
          ++less;
        for (; $.eqB(compare.call$2($.index(a, great), el4), 0);)
          --great;
        for (k = less; k <= great; ++k) {
          ak = $.index(a, k);
          if ($.eqB(compare.call$2(ak, el2), 0)) {
            if (!(k === less)) {
              $.indexSet(a, k, $.index(a, less));
              $.indexSet(a, less, ak);
            }
            ++less;
          } else if ($.eqB(compare.call$2(ak, el4), 0))
            for (less0 = less + 1; true;)
              if ($.eqB(compare.call$2($.index(a, great), el4), 0)) {
                --great;
                if (great < k)
                  break;
                continue;
              } else {
                if ($.ltB(compare.call$2($.index(a, great), el2), 0)) {
                  $.indexSet(a, k, $.index(a, less));
                  $.indexSet(a, less, $.index(a, great));
                  great0 = great - 1;
                  $.indexSet(a, great, ak);
                  great = great0;
                  less = less0;
                } else {
                  $.indexSet(a, k, $.index(a, great));
                  great0 = great - 1;
                  $.indexSet(a, great, ak);
                  great = great0;
                }
                break;
              }
        }
        $.DualPivotQuicksort__doSort(a, less, great, compare);
      } else
        $.DualPivotQuicksort__doSort(a, less, great, compare);
  }
};

$.RetainedUtil__hitTest$bailout = function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      var element = env0;
      length$ = env1;
      point = env2;
      hits = env3;
      break;
  }
  switch (state0) {
    case 0:
      var point = $.RetainedUtil_transformPointGlobalToLocal(element, point);
      var bounds = $.Box$(0, 0, element.get$width(), element.get$height());
      var hits = $.ListImplementation_List(null);
    case 1:
      if (state0 === 1 || state0 === 0 && bounds.contains$1(point) === true)
        switch (state0) {
          case 0:
            var length$ = element.get$visualChildCount();
          case 1:
            state0 = 0;
            for (var i = 0; $.ltB(i, length$); ++i) {
              hits = $.RetainedUtil__hitTest(element.getVisualChild$1($.sub($.sub(length$, 1), i)), point);
              if (hits.length > 0)
                break;
            }
            hits.push(element);
            return hits;
        }
      else
        return [];
  }
};

$.Futures_wait$bailout = function(state0, futures, t1) {
  if ($.isEmpty(futures) === true)
    return $.Future_Future$immediate($.CTC1);
  var completer = $.Completer_Completer();
  var result = completer.get$future();
  t1.remaining_1 = $.get$length(futures);
  var values = $.ListImplementation_List($.get$length(futures));
  for (var i = 0; $.ltB(i, $.get$length(futures)); ++i) {
    var future = $.index(futures, i);
    future.then$1(new $.Futures_wait_anon(completer, i, t1, result, values));
    future.handleException$1(new $.Futures_wait_anon0(future, completer, result));
  }
  return result;
};

$.Arrays_copy$bailout = function(state0, src, srcStart, dst, dstStart, count) {
  if (srcStart < dstStart)
    for (var i = srcStart + count - 1, j = dstStart + count - 1; i >= srcStart; --i, --j)
      $.indexSet(dst, j, $.index(src, i));
  else
    for (var t1 = srcStart + count, i = srcStart, j = dstStart; i < t1; ++i, ++j)
      $.indexSet(dst, j, $.index(src, i));
};

$.StringImplementation__toJsStringArray$bailout = function(state0, strings) {
  $.checkNull(strings);
  var length$ = $.get$length(strings);
  if ($.isJsArray(strings)) {
    for (var i = 0; $.ltB(i, length$); ++i) {
      var string = $.index(strings, i);
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
    }
    var array = strings;
  } else {
    array = $.ListImplementation_List(length$);
    for (i = 0; $.ltB(i, length$); ++i) {
      string = $.index(strings, i);
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
      if (i >= array.length)
        throw $.ioore(i);
      array[i] = string;
    }
  }
  return array;
};

$.CollectionUtil_allUnique$bailout = function(state0, items) {
  $.requireArgumentNotNull(items, 'items');
  for (var i = 0; $.ltB(i, $.get$length(items)); ++i)
    for (var j = i + 1; $.ltB(j, $.get$length(items)); ++j)
      if ($.eqB($.index(items, i), $.index(items, j)))
        return false;
  return true;
};

$.listInsertRange$bailout = function(state0, receiver, start, length$, initialValue) {
  if (length$ === 0)
    return;
  $.checkNull(start);
  $.checkNull(length$);
  if (length$ < 0)
    throw $.$$throw($.ArgumentError$(length$));
  var receiverLength = receiver.length;
  if (start < 0 || start > receiverLength)
    throw $.$$throw($.IndexOutOfRangeException$(start));
  var t1 = receiverLength + length$;
  $.set$length(receiver, t1);
  var t2 = start + length$;
  $.Arrays_copy(receiver, start, receiver, t2, receiverLength - start);
  if (!(initialValue == null))
    for (var i = start; i < t2; ++i)
      $.indexSet(receiver, i, initialValue);
  $.set$length(receiver, t1);
};

$.DualPivotQuicksort_insertionSort_$bailout = function(state0, a, left, right, compare) {
  for (var i = left + 1; $.leB(i, right); ++i) {
    var el = $.index(a, i);
    var j = i;
    while (true) {
      if (!(j > left && $.gtB(compare.call$2($.index(a, j - 1), el), 0)))
        break;
      var j0 = j - 1;
      $.indexSet(a, j, $.index(a, j0));
      j = j0;
    }
    $.indexSet(a, j, el);
  }
};

$.toStringWrapper.call$0 = $.toStringWrapper;
$.toStringWrapper.$name = "toStringWrapper";
$._irvElectionIsolate.call$0 = $._irvElectionIsolate;
$._irvElectionIsolate.$name = "_irvElectionIsolate";
$._completeMeasurementFutures.call$0 = $._completeMeasurementFutures;
$._completeMeasurementFutures.$name = "_completeMeasurementFutures";
$._condorcetElectionIsolate.call$0 = $._condorcetElectionIsolate;
$._condorcetElectionIsolate.$name = "_condorcetElectionIsolate";
$._voterHexMapperIsolate.call$0 = $._voterHexMapperIsolate;
$._voterHexMapperIsolate.$name = "_voterHexMapperIsolate";
$.typeNameInIE.call$1 = $.typeNameInIE;
$.typeNameInIE.$name = "typeNameInIE";
$._distanceElectionIsolate.call$0 = $._distanceElectionIsolate;
$._distanceElectionIsolate.$name = "_distanceElectionIsolate";
$.constructorNameFallback.call$1 = $.constructorNameFallback;
$.constructorNameFallback.$name = "constructorNameFallback";
$.dynamicBind.call$4 = $.dynamicBind;
$.dynamicBind.$name = "dynamicBind";
$.typeNameInFirefox.call$1 = $.typeNameInFirefox;
$.typeNameInFirefox.$name = "typeNameInFirefox";
$.typeNameInSafari.call$1 = $.typeNameInSafari;
$.typeNameInSafari.$name = "typeNameInSafari";
$.typeNameInChrome.call$1 = $.typeNameInChrome;
$.typeNameInChrome.$name = "typeNameInChrome";
$.typeNameInOpera.call$1 = $.typeNameInOpera;
$.typeNameInOpera.$name = "typeNameInOpera";
$.invokeClosure.call$5 = $.invokeClosure;
$.invokeClosure.$name = "invokeClosure";
$._timerFactory.call$3 = $._timerFactory;
$._timerFactory.$name = "_timerFactory";
$._pluralityElectionIsolate.call$0 = $._pluralityElectionIsolate;
$._pluralityElectionIsolate.$name = "_pluralityElectionIsolate";
Isolate.$finishClasses($$);
$$ = {};
Isolate.makeConstantList = function(list) {
  list.immutable$list = true;
  list.fixed$length = true;
  return list;
};
$.CTC1 = Isolate.makeConstantList([]);
$.CTC42 = 'Cannot removeLast on immutable List.';
$.CTC12 = new Isolate.$isolateProperties.UnsupportedOperationException('Cannot removeLast on immutable List.');
$.CTC43 = 'structured clone of ArrayBufferView';
$.CTC9 = new Isolate.$isolateProperties.NotImplementedException('structured clone of ArrayBufferView');
$.CTC31 = new Isolate.$isolateProperties.ConstantMap(0, {}, Isolate.$isolateProperties.CTC1);
$.CTC44 = null;
$.CTC33 = new Isolate.$isolateProperties.NotImplementedException(null);
$.CTC45 = '';
$.CTC35 = new Isolate.$isolateProperties.UnsupportedOperationException('');
$.CTC46 = '^#[_a-zA-Z]\\w*$';
$.CTC47 = false;
$.CTC = new Isolate.$isolateProperties.JSSyntaxRegExp('^#[_a-zA-Z]\\w*$', false, false);
$.CTC48 = 'structured clone of ArrayBuffer';
$.CTC8 = new Isolate.$isolateProperties.NotImplementedException('structured clone of ArrayBuffer');
$.CTC14 = new Isolate.$isolateProperties._DeletedKeySentinel();
$.CTC49 = 'Cannot sort immutable List.';
$.CTC18 = new Isolate.$isolateProperties.UnsupportedOperationException('Cannot sort immutable List.');
$.CTC50 = 'frozen class set cannot be modified';
$.CTC30 = new Isolate.$isolateProperties.UnsupportedOperationException('frozen class set cannot be modified');
$.CTC51 = 'The input sequence contains more than one element.';
$.CTC29 = new Isolate.$isolateProperties.InvalidOperationException('The input sequence contains more than one element.');
$.CTC52 = 'structured clone of Date';
$.CTC3 = new Isolate.$isolateProperties.NotImplementedException('structured clone of Date');
$.CTC53 = 'TODO(jacobr): should we impl?';
$.CTC34 = new Isolate.$isolateProperties.UnsupportedOperationException('TODO(jacobr): should we impl?');
$.CTC54 = 'childList';
$.CTC55 = 'attributes';
$.CTC56 = 'characterData';
$.CTC57 = 'subtree';
$.CTC58 = 'attributeOldValue';
$.CTC59 = 'characterDataOldValue';
$.CTC60 = Isolate.makeConstantList(['childList', 'attributes', 'characterData', 'subtree', 'attributeOldValue', 'characterDataOldValue']);
$.CTC61 = true;
$.CTC39 = new Isolate.$isolateProperties.ConstantMap(6, {'childList': true, 'attributes': true, 'characterData': true, 'subtree': true, 'attributeOldValue': true, 'characterDataOldValue': true}, Isolate.$isolateProperties.CTC60);
$.CTC62 = 'Cannot add to immutable List.';
$.CTC2 = new Isolate.$isolateProperties.UnsupportedOperationException('Cannot add to immutable List.');
$.CTC63 = 'IDBKey containing Date';
$.CTC16 = new Isolate.$isolateProperties.NotImplementedException('IDBKey containing Date');
$.CTC64 = '[-[\\]{}()*+?.,\\\\^$|#\\s]';
$.CTC13 = new Isolate.$isolateProperties.JSSyntaxRegExp('[-[\\]{}()*+?.,\\\\^$|#\\s]', false, false);
$.CTC65 = 'Cannot insertRange on immutable List.';
$.CTC23 = new Isolate.$isolateProperties.UnsupportedOperationException('Cannot insertRange on immutable List.');
$.CTC66 = 'Incorrect number or type of arguments';
$.CTC21 = new Isolate.$isolateProperties.ExceptionImplementation('Incorrect number or type of arguments');
$.CTC67 = 0;
$.CTC68 = new Isolate.$isolateProperties._SimpleClientRect(0, 0, 0, 0);
$.CTC40 = new Isolate.$isolateProperties.EmptyElementRect(Isolate.$isolateProperties.CTC68, Isolate.$isolateProperties.CTC68, Isolate.$isolateProperties.CTC68, Isolate.$isolateProperties.CTC68, Isolate.$isolateProperties.CTC1);
$.CTC69 = 'Cannot removeRange on immutable List.';
$.CTC22 = new Isolate.$isolateProperties.UnsupportedOperationException('Cannot removeRange on immutable List.');
$.CTC70 = 'structured clone of Blob';
$.CTC6 = new Isolate.$isolateProperties.NotImplementedException('structured clone of Blob');
$.CTC25 = new Isolate.$isolateProperties.EventArgs();
$.CTC71 = 'offsetX is only supported on elements';
$.CTC27 = new Isolate.$isolateProperties.UnsupportedOperationException('offsetX is only supported on elements');
$.CTC72 = 'structured clone of RegExp';
$.CTC4 = new Isolate.$isolateProperties.NotImplementedException('structured clone of RegExp');
$.CTC73 = new Isolate.$isolateProperties.Coordinate(0, 0);
$.CTC74 = 'Invalid list length';
$.CTC36 = new Isolate.$isolateProperties.ArgumentError('Invalid list length');
$.CTC75 = 10;
$.CTC28 = new Isolate.$isolateProperties.Box(0, 0, 10, 10);
$.CTC41 = new Isolate.$isolateProperties.Object();
$.CTC76 = 'The input sequence is empty.';
$.CTC19 = new Isolate.$isolateProperties.InvalidOperationException('The input sequence is empty.');
$.CTC77 = '^\\[name=["\'][^\'"]+[\'"]\\]$';
$.CTC37 = new Isolate.$isolateProperties.JSSyntaxRegExp('^\\[name=["\'][^\'"]+[\'"]\\]$', false, false);
$.CTC24 = new Isolate.$isolateProperties._Random();
$.CTC26 = new Isolate.$isolateProperties._UndefinedValue();
$.CTC32 = new Isolate.$isolateProperties.IllegalAccessException();
$.CTC78 = '^[*a-zA-Z0-9]+$';
$.CTC38 = new Isolate.$isolateProperties.JSSyntaxRegExp('^[*a-zA-Z0-9]+$', false, false);
$.CTC79 = 'structured clone of File';
$.CTC5 = new Isolate.$isolateProperties.NotImplementedException('structured clone of File');
$.CTC80 = 'structured clone of other type';
$.CTC10 = new Isolate.$isolateProperties.NotImplementedException('structured clone of other type');
$.CTC81 = '^(?:([^:/?#.]+):)?(?://(?:([^/?#]*)@)?([\\w\\d\\-\\u0100-\\uffff.%]*)(?::([0-9]+))?)?([^?#]+)?(?:\\?([^#]*))?(?:#(.*))?$';
$.CTC17 = new Isolate.$isolateProperties.JSSyntaxRegExp('^(?:([^:/?#.]+):)?(?://(?:([^/?#]*)@)?([\\w\\d\\-\\u0100-\\uffff.%]*)(?::([0-9]+))?)?([^?#]+)?(?:\\?([^#]*))?(?:#(.*))?$', false, false);
$.CTC82 = 'Mutation operations are not supported';
$.CTC20 = new Isolate.$isolateProperties.UnsupportedOperationException('Mutation operations are not supported');
$.CTC0 = new Isolate.$isolateProperties.NullPointerException(null, Isolate.$isolateProperties.CTC1);
$.CTC83 = 'structured clone of ImageData';
$.CTC7 = new Isolate.$isolateProperties.NotImplementedException('structured clone of ImageData');
$.CTC11 = new Isolate.$isolateProperties.NoMoreElementsException();
$.CTC15 = new Isolate.$isolateProperties.EmptyQueueException();
$.Uri__COMPONENT_PATH = 5;
$.Property_Undefined = Isolate.$isolateProperties.CTC26;
$._BufferingSendPort__idCount = 0;
$._lazyPort = null;
$.LocationData__candidateHues = null;
$.Uri__splitRe = Isolate.$isolateProperties.CTC17;
$.Uri__COMPONENT_DOMAIN = 3;
$._getTypeNameOf = null;
$.LocationData_bounds = Isolate.$isolateProperties.CTC28;
$._pendingMeasurementFrameCallbacks = null;
$.DualPivotQuicksort__INSERTION_SORT_THRESHOLD = 32;
$.Primitives_hashCodeSeed = 0;
$._TimerFactory__factory = null;
$.Primitives_DOLLAR_CHAR_VALUE = 36;
$.LocationData_span = 10;
$.HashMapImplementation__DELETED_KEY = Isolate.$isolateProperties.CTC14;
$.Uri__COMPONENT_PORT = 4;
$.Uri__COMPONENT_SCHEME = 1;
$._botHelperRandom = null;
$.LocationData__ACharCode = 65;
$.GlobalId__globalId = 0;
$.Uri__COMPONENT_FRAGMENT = 7;
$._ReceivePortImpl__nextFreeId = 1;
$.LocationData_maxCandidateCount = 26;
$.IrvView__roundCellClass = 'irv_round';
$.Uri__COMPONENT_QUERY_DATA = 6;
$._SPAWNED_SIGNAL = 'spawned';
$.HashMapImplementation__INITIAL_CAPACITY = 8;
$._grayHex = '#999999';
$._pendingRequests = null;
$._measurementScheduler = null;
$.Uri__COMPONENT_USER_INFO = 2;
$._cachedBrowserPrefix = null;
Isolate.$lazy($, 'isMouseDirectlyOverProperty', 'Mouse_isMouseDirectlyOverProperty', 'get$Mouse_isMouseDirectlyOverProperty', function() {
  return $.Property$('IsMouseDirectlyOver', false);
});
Isolate.$lazy($, 'isMouseOverProperty', 'Mouse_isMouseOverProperty', 'get$Mouse_isMouseOverProperty', function() {
  return $.Property$('IsMouseOver', false);
});
Isolate.$lazy($, '_stageMouseCacheProperty', 'Mouse__stageMouseCacheProperty', 'get$Mouse__stageMouseCacheProperty', function() {
  return $.Property$('_stageMouseCacheProperty', null);
});
var $ = null;
Isolate.$finishClasses($$);
$$ = {};
Isolate = Isolate.$finishIsolateConstructor(Isolate);
var $ = new Isolate();
$.$defineNativeClass = function(cls, fields, methods) {
  var generateGetterSetter =   function(field, prototype) {
    var len = field.length;
    var lastChar = field[len - 1];
    var needsGetter = lastChar == '?' || lastChar == '=';
    var needsSetter = lastChar == '!' || lastChar == '=';
    if (needsGetter || needsSetter) field = field.substring(0, len - 1);
    if (needsGetter) {
      var getterString = "return this." + field + ";";
        prototype["get$" + field] = new Function(getterString);
    }
    if (needsSetter) {
      var setterString = "this." + field + " = v;";
      prototype["set$" + field] = new Function("v", setterString);
    }
    return field;
  };
  for (var i = 0; i < fields.length; i++) {
    generateGetterSetter(fields[i], methods);
  }
  for (var method in methods) {
    $.dynamicFunction(method)[cls] = methods[method];
  }
};

(function(table) {
  for (var key in table) {
    $.defineProperty(Object.prototype, key, table[key]);
  }
})({
 is$JavaScriptIndexingBehavior: function() { return false; },
 is$ArrayBufferView: function() { return false; },
 is$_FileListImpl: function() { return false; },
 is$ArrayBuffer: function() { return false; },
 is$_FileImpl: function() { return false; },
 is$_ArrayBufferViewImpl: function() { return false; },
 is$_ImageDataImpl: function() { return false; },
 toString$0: function() { return $.toStringForNativeObject(this); },
 is$IDBKeyRange: function() { return false; },
 is$File: function() { return false; },
 is$Blob: function() { return false; },
 is$_BlobImpl: function() { return false; },
 is$Element: function() { return false; },
 is$List: function() { return false; },
 is$_ArrayBufferImpl: function() { return false; },
 is$Location: function() { return false; },
 is$Map: function() { return false; },
 hashCode$0: function() { return $.hashCodeForNativeObject(this); },
 is$ImageData: function() { return false; },
 is$Collection: function() { return false; }
});

$.$defineNativeClass('AbstractWorker', [], {
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $._AbstractWorkerEventsImpl$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLAnchorElement', ["name?"], {
 toString$0: function() {
  return this.toString();
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('WebKitAnimation', ["name?"], {
});

$.$defineNativeClass('HTMLAppletElement', ["height=", "name?", "width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLAreaElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('ArrayBuffer', [], {
 is$_ArrayBufferImpl: function() { return true; },
 is$ArrayBuffer: function() { return true; }
});

$.$defineNativeClass('ArrayBufferView', [], {
 is$_ArrayBufferViewImpl: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Attr', ["name?", "value="], {
});

$.$defineNativeClass('AudioBuffer', ["length?"], {
});

$.$defineNativeClass('AudioContext', [], {
 get$on: function() {
  return $._AudioContextEventsImpl$(this);
}
});

$.$defineNativeClass('HTMLAudioElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('AudioParam', ["name?", "value="], {
});

$.$defineNativeClass('HTMLBRElement', [], {
 clear$0: function() { return this.clear.call$0(); },
 clear$1: function(arg0) { return this.clear.call$1(arg0); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLBaseElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLBaseFontElement', ["color!"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('BatteryManager', [], {
 get$on: function() {
  return $._BatteryManagerEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('Blob', [], {
 is$_BlobImpl: function() { return true; },
 is$Blob: function() { return true; }
});

$.$defineNativeClass('HTMLBodyElement', ["background!"], {
 get$on: function() {
  return $._BodyElementEventsImpl$(this);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLButtonElement', ["disabled!", "name?", "value="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('CSSFontFaceRule', ["style?"], {
});

$.$defineNativeClass('WebKitCSSKeyframeRule', ["style?"], {
});

$.$defineNativeClass('WebKitCSSKeyframesRule', ["name?"], {
});

$.$defineNativeClass('WebKitCSSMatrix', ["b?"], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('CSSPageRule', ["style?"], {
});

$.$defineNativeClass('CSSRuleList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC18);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub($.get$length(this), 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC22);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC23);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('CSSStyleDeclaration', ["length?"], {
 _getPropertyValue$1: function(propertyName) {
  return this.getPropertyValue(propertyName);
},
 getPropertyValue$1: function(propertyName) {
  var propValue = this._getPropertyValue$1(propertyName);
  return !(propValue == null) ? propValue : '';
},
 setProperty$3: function(propertyName, value, priority) {
    this.setProperty(propertyName, value, priority);
    // Bug #2772, IE9 requires a poke to actually apply the value.
    if (this.setAttribute) {
      this.setAttribute(propertyName, value);
    }
  
},
 set$background: function(value) {
  this.setProperty$3('background', value, '');
},
 get$clear: function() {
  return this.getPropertyValue$1('clear');
},
 clear$0: function() { return this.get$clear().call$0(); },
 clear$1: function(arg0) { return this.get$clear().call$1(arg0); },
 get$clip: function() {
  return this.getPropertyValue$1('clip');
},
 clip$0: function() { return this.get$clip().call$0(); },
 set$color: function(value) {
  this.setProperty$3('color', value, '');
},
 set$cursor: function(value) {
  this.setProperty$3('cursor', value, '');
},
 get$filter: function() {
  return this.getPropertyValue$1($.S($._browserPrefix()) + 'filter');
},
 filter$1: function(arg0) { return this.get$filter().call$1(arg0); },
 set$font: function(value) {
  this.setProperty$3('font', value, '');
},
 set$fontStyle: function(value) {
  this.setProperty$3('font-style', value, '');
},
 get$height: function() {
  return this.getPropertyValue$1('height');
},
 set$height: function(value) {
  this.setProperty$3('height', value, '');
},
 get$left: function() {
  return this.getPropertyValue$1('left');
},
 set$textAlign: function(value) {
  this.setProperty$3('text-align', value, '');
},
 get$top: function() {
  return this.getPropertyValue$1('top');
},
 get$transform: function() {
  return this.getPropertyValue$1($.S($._browserPrefix()) + 'transform');
},
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.get$transform().call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 get$width: function() {
  return this.getPropertyValue$1('width');
},
 set$width: function(value) {
  this.setProperty$3('width', value, '');
}
});

$.$defineNativeClass('CSSStyleRule', ["style?"], {
});

$.$defineNativeClass('WebKitCSSTransformValue', [], {
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('CSSValueList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC18);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub($.get$length(this), 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC22);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC23);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('HTMLCanvasElement', ["height=", "width="], {
 getContext$1: function(contextId) {
  return this.getContext(contextId);
},
 get$context2d: function() {
  return this.getContext$1('2d');
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('CanvasRenderingContext2D', ["fillStyle!", "font!", "globalAlpha!", "shadowBlur!", "shadowColor!", "shadowOffsetX!", "shadowOffsetY!", "textAlign!", "textBaseline!"], {
 beginPath$0: function() {
  return this.beginPath();
},
 bezierCurveTo$6: function(cp1x, cp1y, cp2x, cp2y, x, y) {
  return this.bezierCurveTo(cp1x,cp1y,cp2x,cp2y,x,y);
},
 clearRect$4: function(x, y, width, height) {
  return this.clearRect(x,y,width,height);
},
 clip$0: function() {
  return this.clip();
},
 closePath$0: function() {
  return this.closePath();
},
 drawImage$9: function(canvas_OR_image_OR_video, sx_OR_x, sy_OR_y, sw_OR_width, height_OR_sh, dx, dy, dw, dh) {
  return this.drawImage(canvas_OR_image_OR_video,sx_OR_x,sy_OR_y,sw_OR_width,height_OR_sh,dx,dy,dw,dh);
},
 drawImage$3: function(canvas_OR_image_OR_video,sx_OR_x,sy_OR_y) {
  return this.drawImage(canvas_OR_image_OR_video,sx_OR_x,sy_OR_y);
},
 fill$0: function() {
  return this.fill();
},
 fillText$4: function(text, x, y, maxWidth) {
  return this.fillText(text,x,y,maxWidth);
},
 fillText$3: function(text,x,y) {
  return this.fillText(text,x,y);
},
 moveTo$2: function(x, y) {
  return this.moveTo(x,y);
},
 rect$4: function(x, y, width, height) {
  return this.rect(x,y,width,height);
},
 restore$0: function() {
  return this.restore();
},
 save$0: function() {
  return this.save();
},
 transform$6: function(m11, m12, m21, m22, dx, dy) {
  return this.transform(m11,m12,m21,m22,dx,dy);
},
 translate$2: function(tx, ty) {
  return this.translate(tx,ty);
}
});

$.$defineNativeClass('CharacterData', ["length?"], {
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('ClientRect', ["height?", "left?", "top?", "width?"], {
});

$.$defineNativeClass('ClientRectList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC18);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub($.get$length(this), 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC22);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC23);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

_ConsoleImpl = (typeof console == 'undefined' ? {} : console);
_ConsoleImpl.count$1 = function(arg) {
  return this.count(arg);
};
_ConsoleImpl.group$1 = function(arg) {
  return this.group(arg);
};
$.$defineNativeClass('HTMLContentElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLDListElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('DOMApplicationCache', [], {
 get$on: function() {
  return $._DOMApplicationCacheEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 update$0: function() {
  return this.update();
}
});

$.$defineNativeClass('DOMError', ["name?"], {
});

$.$defineNativeClass('DOMException', ["message?", "name?"], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('DOMFileSystem', ["name?"], {
});

$.$defineNativeClass('DOMFileSystemSync', ["name?"], {
});

$.$defineNativeClass('MimeTypeArray', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC18);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub($.get$length(this), 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC22);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC23);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('PluginArray', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC18);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub($.get$length(this), 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC22);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC23);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('Plugin', ["length?", "name?"], {
});

$.$defineNativeClass('Selection', [], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('DOMSettableTokenList', ["value="], {
});

$.$defineNativeClass('DOMStringList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC18);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub($.get$length(this), 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC22);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC23);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 contains$1: function(string) {
  return this.contains(string);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('DOMTokenList', ["length?"], {
 contains$1: function(token) {
  return this.contains(token);
},
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('HTMLDataListElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('DataTransferItemList', ["length?"], {
 add$2: function(data_OR_file, type) {
  return this.add(data_OR_file,type);
},
 add$1: function(data_OR_file) {
  return this.add(data_OR_file);
},
 clear$0: function() {
  return this.clear();
}
});

$.$defineNativeClass('DataView', [], {
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('DedicatedWorkerContext', [], {
 get$on: function() {
  return $._DedicatedWorkerContextEventsImpl$(this);
},
 postMessage$2: function(message, messagePorts) {
  var t1 = $ === messagePorts;
  if (t1)
    messagePorts = null;
  if (!t1) {
    this._postMessage_1$2($._convertDartToNative_SerializedScriptValue(message), messagePorts);
    return;
  }
  this._postMessage_2$1($._convertDartToNative_SerializedScriptValue(message));
  return;
},
 postMessage$1: function(message) {
  return this.postMessage$2(message,$)
},
 _postMessage_1$2: function(message, messagePorts) {
  return this.postMessage(message,messagePorts);
},
 _postMessage_2$1: function(message) {
  return this.postMessage(message);
}
});

$.$defineNativeClass('HTMLDetailsElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLDirectoryElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLDivElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('DocumentFragment', [], {
 get$elements: function() {
  if (this._elements == null)
    this._elements = $._FilteredElementList$(this);
  return this._elements;
},
 query$1: function(selectors) {
  return this.$dom_querySelector$1(selectors);
},
 queryAll$1: function(selectors) {
  return $._FrozenElementList$_wrap(this.$dom_querySelectorAll$1(selectors));
},
 set$innerHTML: function(value) {
  if (Object.getPrototypeOf(this).hasOwnProperty('set$innerHTML')) {
  {
  $.clear(this.get$nodes());
  var e = $.Element_Element$tag('div');
  e.set$innerHTML(value);
  var nodes = $.ListImplementation_List$from(e.get$nodes());
  $.addAll(this.get$nodes(), nodes);
}
  } else {
    return Object.prototype.set$innerHTML.call(this, value);
  }

},
 get$rect: function() {
  return $._createMeasurementFuture(new $._DocumentFragmentImpl_rect_anon(), $.Completer_Completer());
},
 rect$4: function(arg0, arg1, arg2, arg3) { return this.get$rect().call$4(arg0, arg1, arg2, arg3); },
 get$hidden: function() {
  return false;
},
 get$translate: function() {
  return false;
},
 translate$2: function(arg0, arg1) { return this.get$translate().call$2(arg0, arg1); },
 get$id: function() {
  return '';
},
 get$parent: function() {
  return;
},
 get$attributes: function() {
  return $.CTC31;
},
 get$classes: function() {
  return $._FrozenCSSClassSet$();
},
 get$dataAttributes: function() {
  return $.CTC31;
},
 get$style: function() {
  return $.Element_Element$tag('div').get$style();
},
 blur$0: function() {
},
 get$blur: function() { return new $.BoundClosure0(this, 'blur$0'); },
 click$0: function() {
},
 get$click: function() { return new $.BoundClosure0(this, 'click$0'); },
 set$hidden: function(value) {
  throw $.$$throw($.UnsupportedOperationException$('Hidden can\'t be set for document fragments.'));
},
 set$id: function(value) {
  throw $.$$throw($.UnsupportedOperationException$('ID can\'t be set for document fragments.'));
},
 get$on: function() {
  return $._ElementEventsImpl$(this);
},
 $dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 $dom_querySelectorAll$1: function(selectors) {
  return this.querySelectorAll(selectors);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLDocument', [], {
 get$on: function() {
  return $._DocumentEventsImpl$(this);
},
 $dom_createElement$1: function(tagName) {
  return this.createElement(tagName);
},
 $dom_getElementById$1: function(elementId) {
  return this.getElementById(elementId);
},
 $dom_getElementsByName$1: function(elementName) {
  return this.getElementsByName(elementName);
},
 $dom_getElementsByTagName$1: function(tagname) {
  return this.getElementsByTagName(tagname);
},
 $dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 $dom_querySelectorAll$1: function(selectors) {
  return this.querySelectorAll(selectors);
},
 query$1: function(selectors) {
  if ($.CTC.hasMatch$1(selectors) === true)
    return this.$dom_getElementById$1($.substring$1(selectors, 1));
  return this.$dom_querySelector$1(selectors);
},
 queryAll$1: function(selectors) {
  if ($.CTC37.hasMatch$1(selectors) === true) {
    var mutableMatches = this.$dom_getElementsByName$1($.substring$2(selectors, 7, selectors.length - 2));
    if (typeof mutableMatches !== 'string' && (typeof mutableMatches !== 'object' || mutableMatches === null || mutableMatches.constructor !== Array && !mutableMatches.is$JavaScriptIndexingBehavior()))
      return this.queryAll$1$bailout(1, mutableMatches);
    var len = mutableMatches.length;
    var copyOfMatches = $.ListImplementation_List(len);
    for (var t1 = mutableMatches.length, i = 0; i < len; ++i) {
      if (i >= t1)
        throw $.ioore(i);
      copyOfMatches[i] = mutableMatches[i];
    }
    return $._FrozenElementList$_wrap(copyOfMatches);
  } else if ($.CTC38.hasMatch$1(selectors) === true) {
    mutableMatches = this.$dom_getElementsByTagName$1(selectors);
    if (typeof mutableMatches !== 'string' && (typeof mutableMatches !== 'object' || mutableMatches === null || mutableMatches.constructor !== Array && !mutableMatches.is$JavaScriptIndexingBehavior()))
      return this.queryAll$1$bailout(2, mutableMatches);
    len = mutableMatches.length;
    copyOfMatches = $.ListImplementation_List(len);
    for (t1 = mutableMatches.length, i = 0; i < len; ++i) {
      if (i >= t1)
        throw $.ioore(i);
      copyOfMatches[i] = mutableMatches[i];
    }
    return $._FrozenElementList$_wrap(copyOfMatches);
  } else
    return $._FrozenElementList$_wrap(this.$dom_querySelectorAll$1(selectors));
},
 queryAll$1$bailout: function(state0, env0) {
  switch (state0) {
    case 1:
      mutableMatches = env0;
      break;
    case 2:
      mutableMatches = env0;
      break;
  }
  switch (state0) {
    case 0:
    default:
      if (state0 === 1 || state0 === 0 && $.CTC37.hasMatch$1(selectors) === true)
        switch (state0) {
          case 0:
            var mutableMatches = this.$dom_getElementsByName$1($.substring$2(selectors, 7, selectors.length - 2));
          case 1:
            state0 = 0;
            var len = $.get$length(mutableMatches);
            var copyOfMatches = $.ListImplementation_List(len);
            for (var i = 0; $.ltB(i, len); ++i) {
              var t1 = $.index(mutableMatches, i);
              if (i >= copyOfMatches.length)
                throw $.ioore(i);
              copyOfMatches[i] = t1;
            }
            return $._FrozenElementList$_wrap(copyOfMatches);
        }
      else
        switch (state0) {
          case 0:
          case 2:
            if (state0 === 2 || state0 === 0 && $.CTC38.hasMatch$1(selectors) === true)
              switch (state0) {
                case 0:
                  mutableMatches = this.$dom_getElementsByTagName$1(selectors);
                case 2:
                  state0 = 0;
                  len = $.get$length(mutableMatches);
                  copyOfMatches = $.ListImplementation_List(len);
                  for (i = 0; $.ltB(i, len); ++i) {
                    t1 = $.index(mutableMatches, i);
                    if (i >= copyOfMatches.length)
                      throw $.ioore(i);
                    copyOfMatches[i] = t1;
                  }
                  return $._FrozenElementList$_wrap(copyOfMatches);
              }
            else
              return $._FrozenElementList$_wrap(this.$dom_querySelectorAll$1(selectors));
        }
  }
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('DocumentType', ["name?"], {
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('Element', ["hidden=", "id=", "innerHTML!", "clientHeight?", "clientLeft?", "clientTop?", "clientWidth?", "offsetHeight?", "offsetLeft?", "offsetTop?", "offsetWidth?", "scrollHeight?", "scrollLeft?", "scrollTop?", "scrollWidth?", "style?"], {
 get$attributes: function() {
  return $._ElementAttributeMap$(this);
},
 set$elements: function(value) {
  if (Object.getPrototypeOf(this).hasOwnProperty('set$elements')) {
  {
  var elements = this.get$elements();
  $.clear(elements);
  $.addAll(elements, value);
}
  } else {
    return Object.prototype.set$elements.call(this, value);
  }

},
 get$elements: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$elements')) {
  {
  return $._ChildrenElementList$_wrap(this);
}
  } else {
    return Object.prototype.get$elements.call(this);
  }

},
 query$1: function(selectors) {
  return this.$dom_querySelector$1(selectors);
},
 queryAll$1: function(selectors) {
  return $._FrozenElementList$_wrap(this.$dom_querySelectorAll$1(selectors));
},
 get$classes: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$classes')) {
  {
  return $._CssClassSet$(this);
}
  } else {
    return Object.prototype.get$classes.call(this);
  }

},
 get$dataAttributes: function() {
  return $._DataAttributeMap$(this.get$attributes());
},
 get$rect: function() {
  return $._createMeasurementFuture(new $._ElementImpl_rect_anon(this), $.Completer_Completer());
},
 rect$4: function(arg0, arg1, arg2, arg3) { return this.get$rect().call$4(arg0, arg1, arg2, arg3); },
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $._ElementEventsImpl$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 get$$$dom_children: function() {
return this.children;
},
 translate$2: function(arg0, arg1) { return this.translate.call$2(arg0, arg1); },
 click$0: function() {
  return this.click();
},
 get$click: function() { return new $.BoundClosure0(this, 'click$0'); },
 get$$$dom_className: function() {
return this.className;
},
 set$$$dom_className: function(value) {
this.className = value;
},
 get$$$dom_firstElementChild: function() {
return this.firstElementChild;
},
 get$$$dom_lastElementChild: function() {
return this.lastElementChild;
},
 blur$0: function() {
  return this.blur();
},
 get$blur: function() { return new $.BoundClosure0(this, 'blur$0'); },
 $dom_getAttribute$1: function(name) {
  return this.getAttribute(name);
},
 getBoundingClientRect$0: function() {
  return this.getBoundingClientRect();
},
 getClientRects$0: function() {
  return this.getClientRects();
},
 $dom_hasAttribute$1: function(name) {
  return this.hasAttribute(name);
},
 $dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 $dom_querySelectorAll$1: function(selectors) {
  return this.querySelectorAll(selectors);
},
 $dom_removeAttribute$1: function(name) {
  return this.removeAttribute(name);
},
 $dom_setAttribute$2: function(name, value) {
  return this.setAttribute(name,value);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLEmbedElement', ["height=", "name?", "width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('EntryArray', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC18);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub($.get$length(this), 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC22);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC23);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('EntryArraySync', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC18);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub($.get$length(this), 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC22);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC23);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('Entry', ["name?"], {
 moveTo$4: function(parent, name, successCallback, errorCallback) {
  return this.moveTo(parent,name,$.convertDartClosureToJS(successCallback, 1),$.convertDartClosureToJS(errorCallback, 1));
},
 moveTo$2: function(parent$,name$) {
  return this.moveTo(parent$,name$);
},
 remove$2: function(successCallback, errorCallback) {
  return this.remove($.convertDartClosureToJS(successCallback, 0),$.convertDartClosureToJS(errorCallback, 1));
},
 remove$1: function(successCallback) {
  successCallback = $.convertDartClosureToJS(successCallback, 0);
  return this.remove(successCallback);
}
});

$.$defineNativeClass('EntrySync', ["name?"], {
 moveTo$2: function(parent, name) {
  return this.moveTo(parent,name);
},
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('ErrorEvent', ["message?"], {
});

$.$defineNativeClass('EventException', ["message?", "name?"], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('Event', [], {
 get$target: function() {
  return $._convertNativeToDart_EventTarget(this.get$_target());
},
 get$_target: function() {
return this.target;
},
 preventDefault$0: function() {
  return this.preventDefault();
}
});

$.$defineNativeClass('EventSource', [], {
 get$on: function() {
  return $._EventSourceEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('EventTarget', [], {
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $._EventsImpl$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_addEventListener$3')) {
  {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
  } else {
    return Object.prototype.$dom_addEventListener$3.call(this, type, listener, useCapture);
  }

},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_removeEventListener$3')) {
  {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
  } else {
    return Object.prototype.$dom_removeEventListener$3.call(this, type, listener, useCapture);
  }

}
});

$.$defineNativeClass('HTMLFieldSetElement', ["disabled!", "elements?", "name?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('FileException', ["message?", "name?"], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('File', ["name?"], {
 is$_FileImpl: function() { return true; },
 is$File: function() { return true; },
 is$Blob: function() { return true; }
});

$.$defineNativeClass('FileList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC18);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub($.get$length(this), 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC22);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC23);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$_FileListImpl: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('FileReader', [], {
 get$on: function() {
  return $._FileReaderEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('FileWriter', ["length?"], {
 get$on: function() {
  return $._FileWriterEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('FileWriterSync', ["length?"], {
});

$.$defineNativeClass('Float32Array', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
this[index] = value
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC18);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub($.get$length(this), 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC22);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC23);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Float64Array', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
this[index] = value
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC18);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub($.get$length(this), 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC22);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC23);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('HTMLFontElement', ["color!"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLFormElement', ["length?", "name?"], {
 reset$0: function() {
  return this.reset();
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLFrameElement', ["height?", "location=", "name?", "width?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLFrameSetElement', [], {
 get$on: function() {
  return $._FrameSetElementEventsImpl$(this);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('Gamepad', ["id?", "index?"], {
});

$.$defineNativeClass('GamepadList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC18);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub($.get$length(this), 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC22);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC23);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('HTMLHRElement', ["width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLAllCollection', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC18);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub($.get$length(this), 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC22);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC23);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('HTMLCollection', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC18);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub($.get$length(this), 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC22);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC23);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('HTMLOptionsCollection', [], {
 get$length: function() {
return this.length;
},
 set$length: function(value) {
this.length = value;
},
 remove$1: function(index) {
  return this.remove(index);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('HTMLHeadElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLHeadingElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLHtmlElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('XMLHttpRequestException', ["message?", "name?"], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('XMLHttpRequest', [], {
 get$on: function() {
  return $._HttpRequestEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 send$1: function(data) {
  return this.send(data);
}
});

$.$defineNativeClass('XMLHttpRequestUpload', [], {
 get$on: function() {
  return $._HttpRequestUploadEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBCursor', [], {
 get$key: function() {
  return $._convertNativeToDart_IDBKey(this.get$_key());
},
 get$_key: function() {
return this.key;
}
});

$.$defineNativeClass('IDBCursorWithValue', [], {
 get$value: function() {
  return $._convertNativeToDart_IDBAny(this.get$_lib_value());
},
 get$_lib_value: function() {
return this.value;
}
});

$.$defineNativeClass('IDBDatabaseException', ["message?", "name?"], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('IDBDatabase', ["name?"], {
 get$on: function() {
  return $._IDBDatabaseEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBIndex', ["name?"], {
 count$1: function(key_OR_range) {
  var t1 = $ === key_OR_range;
  if (t1)
    key_OR_range = null;
  var t2 = !t1;
  if (t1)
    return this._count_1$0();
  if (typeof key_OR_range === 'object' && key_OR_range !== null && key_OR_range.is$IDBKeyRange() || key_OR_range == null)
    return this._count_2$1(key_OR_range);
  if (t2)
    return this._count_3$1(key_OR_range);
  throw $.$$throw($.CTC21);
},
 _count_1$0: function() {
  return this.count();
},
 _count_2$1: function(range) {
  return this.count(range);
},
 _count_3$1: function(key) {
  return this.count(key);
},
 get$1: function(key) {
  var t1 = $ === key;
  if (t1)
    key = null;
  t1 = !t1;
  if (typeof key === 'object' && key !== null && key.is$IDBKeyRange() || key == null)
    return this._get_1$1(key);
  if (t1)
    return this._get_2$1(key);
  throw $.$$throw($.CTC21);
},
 _get_1$1: function(key) {
  return this.get(key);
},
 _get_2$1: function(key) {
  return this.get(key);
}
});

$.$defineNativeClass('IDBKeyRange', [], {
 is$IDBKeyRange: function() { return true; }
});

$.$defineNativeClass('IDBObjectStore', ["name?"], {
 add$2: function(value, key) {
  var t1 = $ === key;
  if (t1)
    key = null;
  if (!t1)
    return this._add_1$2($._convertDartToNative_SerializedScriptValue(value), key);
  return this._add_2$1($._convertDartToNative_SerializedScriptValue(value));
},
 add$1: function(value) {
  return this.add$2(value,$)
},
 _add_1$2: function(value, key) {
  return this.add(value,key);
},
 _add_2$1: function(value) {
  return this.add(value);
},
 clear$0: function() {
  return this.clear();
},
 count$1: function(key_OR_range) {
  var t1 = $ === key_OR_range;
  if (t1)
    key_OR_range = null;
  var t2 = !t1;
  if (t1)
    return this._count_1$0();
  if (typeof key_OR_range === 'object' && key_OR_range !== null && key_OR_range.is$IDBKeyRange() || key_OR_range == null)
    return this._count_2$1(key_OR_range);
  if (t2)
    return this._count_3$1(key_OR_range);
  throw $.$$throw($.CTC21);
},
 _count_1$0: function() {
  return this.count();
},
 _count_2$1: function(range) {
  return this.count(range);
},
 _count_3$1: function(key) {
  return this.count(key);
},
 index$1: function(name) {
  return this.index(name);
},
 get$index: function() { return new $.BoundClosure(this, 'index$1'); }
});

$.$defineNativeClass('IDBOpenDBRequest', [], {
 get$on: function() {
  return $._IDBOpenDBRequestEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBRequest', [], {
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $._IDBRequestEventsImpl$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_addEventListener$3')) {
  {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
  } else {
    return Object.prototype.$dom_addEventListener$3.call(this, type, listener, useCapture);
  }

},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_removeEventListener$3')) {
  {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
  } else {
    return Object.prototype.$dom_removeEventListener$3.call(this, type, listener, useCapture);
  }

}
});

$.$defineNativeClass('IDBTransaction', [], {
 get$on: function() {
  return $._IDBTransactionEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBVersionChangeRequest', [], {
 get$on: function() {
  return $._IDBVersionChangeRequestEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLIFrameElement', ["height=", "name?", "width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('ImageData', ["height?", "width?"], {
 is$_ImageDataImpl: function() { return true; },
 is$ImageData: function() { return true; }
});

$.$defineNativeClass('HTMLImageElement', ["height=", "name?", "width=", "x?", "y?"], {
 complete$1: function(arg0) { return this.complete.call$1(arg0); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLInputElement', ["disabled!", "height=", "name?", "value=", "width="], {
 get$on: function() {
  return $._InputElementEventsImpl$(this);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('Int16Array', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
this[index] = value
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC18);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub($.get$length(this), 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC22);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC23);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Int32Array', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
this[index] = value
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC18);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub($.get$length(this), 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC22);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC23);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Int8Array', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
this[index] = value
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC18);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub($.get$length(this), 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC22);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC23);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('JavaScriptAudioNode', [], {
 get$on: function() {
  return $._JavaScriptAudioNodeEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLKeygenElement', ["disabled!", "name?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLLIElement', ["value="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLLabelElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLLegendElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLLinkElement', ["disabled!"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('History', ["length?"], {
});

$.$defineNativeClass('Location', [], {
 toString$0: function() {
  return this.toString();
},
 is$Location: function() { return true; }
});

$.$defineNativeClass('LocalMediaStream', [], {
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('DOMWindow', ["name?", "navigator?"], {
 get$location: function() {
  return this._get_location$0();
},
 set$location: function(value) {
  return this._set_location$1(value);
},
 _get_location$0: function() {
  var result = this.get$_location();
  if ($._LocalWindowImpl__isDartLocation(result) === true)
    return result;
  if (null == this._location_wrapper)
    this._location_wrapper = $._LocationWrapper$(result);
  return this._location_wrapper;
},
 _set_location$1: function(value) {
  if (typeof value === 'object' && value !== null && !!value.is$_LocationWrapper)
    this.set$_location(value._ptr);
  else
    this.set$_location(value);
},
 get$_location: function() {
return this.location
},
 set$_location: function(value) {
this.location = value
},
 requestAnimationFrame$1: function(callback) {
  this._ensureRequestAnimationFrame$0();
  return this._requestAnimationFrame$1(callback);
},
 _requestAnimationFrame$1: function(callback) {
  return this.requestAnimationFrame($.convertDartClosureToJS(callback, 1));
},
 _ensureRequestAnimationFrame$0: function() {
   if (this.requestAnimationFrame && this.cancelAnimationFrame) return;
   var vendors = ['ms', 'moz', 'webkit', 'o'];
   for (var i = 0; i < vendors.length && !this.requestAnimationFrame; ++i) {
     this.requestAnimationFrame = this[vendors[i] + 'RequestAnimationFrame'];
     this.cancelAnimationFrame =
         this[vendors[i]+'CancelAnimationFrame'] ||
         this[vendors[i]+'CancelRequestAnimationFrame'];
   }
   if (this.requestAnimationFrame && this.cancelAnimationFrame) return;
   this.requestAnimationFrame = function(callback) {
      return window.setTimeout(function() {
        callback(Date.now());
      }, 16 /* 16ms ~= 60fps */);
   };
   this.cancelAnimationFrame = function(id) { clearTimeout(id); }

},
 get$on: function() {
  return $._LocalWindowEventsImpl$(this);
},
 get$top: function() {
  return $._convertNativeToDart_Window(this.get$_top());
},
 get$_top: function() {
return this.top;
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 blur$0: function() {
  return this.blur();
},
 get$blur: function() { return new $.BoundClosure0(this, 'blur$0'); },
 clearInterval$1: function(handle) {
  return this.clearInterval(handle);
},
 clearTimeout$1: function(handle) {
  return this.clearTimeout(handle);
},
 close$0: function() {
  return this.close();
},
 moveTo$2: function(x, y) {
  return this.moveTo(x,y);
},
 postMessage$3: function(message, targetOrigin, messagePorts) {
  var t1 = $ === message;
  if (t1)
    message = null;
  t1 = !t1;
  var t2 = $ === messagePorts;
  if (t2)
    messagePorts = null;
  if (t1 && t2) {
    this._postMessage_1$2($._convertDartToNative_SerializedScriptValue(message), targetOrigin);
    return;
  }
  if (t1)
    t1 = typeof messagePorts === 'object' && messagePorts !== null && (messagePorts.constructor === Array || messagePorts.is$List()) || messagePorts == null;
  else
    t1 = false;
  if (t1) {
    this._postMessage_2$3($._convertDartToNative_SerializedScriptValue(message), targetOrigin, messagePorts);
    return;
  }
  throw $.$$throw($.CTC21);
},
 postMessage$2: function(message,targetOrigin) {
  return this.postMessage$3(message,targetOrigin,$)
},
 _postMessage_1$2: function(message, targetOrigin) {
  return this.postMessage(message,targetOrigin);
},
 _postMessage_2$3: function(message, targetOrigin, messagePorts) {
  return this.postMessage(message,targetOrigin,messagePorts);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 setInterval$2: function(handler, timeout) {
  return this.setInterval($.convertDartClosureToJS(handler, 0),timeout);
},
 setTimeout$2: function(handler, timeout) {
  return this.setTimeout($.convertDartClosureToJS(handler, 0),timeout);
}
});

$.$defineNativeClass('HTMLMapElement', ["name?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLMarqueeElement', ["height=", "width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('MediaController', [], {
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLMediaElement', [], {
 get$on: function() {
  return $._MediaElementEventsImpl$(this);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('MediaKeyEvent', ["message?"], {
});

$.$defineNativeClass('MediaList', ["length?"], {
});

$.$defineNativeClass('MediaQueryList', [], {
 matches$2: function(arg0, arg1) { return this.matches.call$2(arg0, arg1); }
});

$.$defineNativeClass('MediaSource', [], {
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('MediaStream', [], {
 get$on: function() {
  return $._MediaStreamEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_addEventListener$3')) {
  {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
  } else {
    return Object.prototype.$dom_addEventListener$3.call(this, type, listener, useCapture);
  }

},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_removeEventListener$3')) {
  {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
  } else {
    return Object.prototype.$dom_removeEventListener$3.call(this, type, listener, useCapture);
  }

}
});

$.$defineNativeClass('MediaStreamList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC18);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub($.get$length(this), 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC22);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC23);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('MediaStreamTrack', [], {
 get$on: function() {
  return $._MediaStreamTrackEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('MediaStreamTrackList', ["length?"], {
 get$on: function() {
  return $._MediaStreamTrackListEventsImpl$(this);
},
 add$1: function(track) {
  return this.add(track);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 remove$1: function(track) {
  return this.remove(track);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLMenuElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('MessageEvent', ["ports?"], {
});

$.$defineNativeClass('MessagePort', [], {
 get$on: function() {
  return $._MessagePortEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 postMessage$2: function(message, messagePorts) {
  var t1 = $ === messagePorts;
  if (t1)
    messagePorts = null;
  if (!t1) {
    this._postMessage_1$2($._convertDartToNative_SerializedScriptValue(message), messagePorts);
    return;
  }
  this._postMessage_2$1($._convertDartToNative_SerializedScriptValue(message));
  return;
},
 postMessage$1: function(message) {
  return this.postMessage$2(message,$)
},
 _postMessage_1$2: function(message, messagePorts) {
  return this.postMessage(message,messagePorts);
},
 _postMessage_2$1: function(message) {
  return this.postMessage(message);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLMetaElement', ["name?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLMeterElement', ["value="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLModElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('MouseEvent', ["clientX?", "clientY?", "toElement?", "x?", "y?"], {
 get$offsetX: function() {
  if (!!this.offsetX)
    return this.get$_offsetX();
  else {
    var target = this.get$target();
    if (!(typeof target === 'object' && target !== null && target.is$Element()))
      throw $.$$throw($.CTC27);
    return $.sub(this.clientX, this.get$target().getBoundingClientRect$0().get$left());
  }
},
 get$offsetY: function() {
  if (!!this.offsetY)
    return this.get$_offsetY();
  else {
    var target = this.get$target();
    if (!(typeof target === 'object' && target !== null && target.is$Element()))
      throw $.$$throw($.CTC27);
    return $.sub(this.clientY, this.get$target().getBoundingClientRect$0().get$top());
  }
},
 get$_offsetX: function() {
return this.offsetX
},
 get$_offsetY: function() {
return this.offsetY
}
});

$.$defineNativeClass('MutationObserver', [], {
 observe$9: function(target, options, childList, attributes, characterData, subtree, attributeOldValue, characterDataOldValue, attributeFilter) {
  var parsedOptions = {};
  if (!(options == null))
    $.forEach(options, new $._MutationObserverImpl_observe_anon(parsedOptions));
  var t1 = new $._MutationObserverImpl_observe_override(parsedOptions);
  t1.call$2('childList', childList);
  t1.call$2('attributes', attributes);
  t1.call$2('characterData', characterData);
  t1.call$2('subtree', subtree);
  t1.call$2('attributeOldValue', attributeOldValue);
  t1.call$2('characterDataOldValue', characterDataOldValue);
  if (!(attributeFilter == null))
    t1.call$2('attributeFilter', attributeFilter);
  this._call$2(target, parsedOptions);
},
 observe$3$attributes: function(target,options,attributes) {
  return this.observe$9(target,options,null,attributes,null,null,null,null,null)
},
 _call$2: function(target, options) {
  return this.observe(target,options);
}
});

$.$defineNativeClass('NamedNodeMap', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC18);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub($.get$length(this), 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC22);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC23);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('Navigator', ["userAgent?"], {
});

$.$defineNativeClass('Node', [], {
 get$nodes: function() {
  return $._ChildNodeListLazy$(this);
},
 remove$0: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('remove$0')) {
  {
  if (!(this.get$parent() == null))
    this.get$parent().$dom_removeChild$1(this);
}
  } else {
    return Object.prototype.remove$0.call(this);
  }

},
 replaceWith$1: function(otherNode) {
  try {
    var parent$ = this.get$parent();
    parent$.$dom_replaceChild$2(otherNode, this);
  } catch (exception) {
    $.unwrapException(exception);
  }

  return this;
},
 get$$$dom_attributes: function() {
return this.attributes;
},
 get$$$dom_childNodes: function() {
return this.childNodes;
},
 get$parent: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$parent')) {
  {
return this.parentNode;
}
  } else {
    return Object.prototype.get$parent.call(this);
  }

},
 set$text: function(value) {
this.textContent = value;
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_appendChild$1: function(newChild) {
  return this.appendChild(newChild);
},
 contains$1: function(other) {
  return this.contains(other);
},
 $dom_removeChild$1: function(oldChild) {
  return this.removeChild(oldChild);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_replaceChild$2: function(newChild, oldChild) {
  return this.replaceChild(newChild,oldChild);
}
});

$.$defineNativeClass('NodeIterator', [], {
 filter$1: function(arg0) { return this.filter.call$1(arg0); }
});

$.$defineNativeClass('NodeList', ["length?"], {
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  this._parent.$dom_appendChild$1(value);
},
 addLast$1: function(value) {
  this._parent.$dom_appendChild$1(value);
},
 addAll$1: function(collection) {
  for (var t1 = $.iterator(collection); t1.hasNext$0() === true;) {
    var t2 = t1.next$0();
    this._parent.$dom_appendChild$1(t2);
  }
},
 removeLast$0: function() {
  var result = this.last$0();
  if (!(result == null))
    this._parent.$dom_removeChild$1(result);
  return result;
},
 clear$0: function() {
  this._parent.set$text('');
},
 operator$indexSet$2: function(index, value) {
  this._parent.$dom_replaceChild$2(value, this.operator$index$1(index));
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._NodeListWrapper$($._Collections_filter(this, [], f));
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 lastIndexOf$2: function(element, start) {
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,0)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 get$first: function() {
  return this.operator$index$1(0);
},
 first$0: function() { return this.get$first().call$0(); },
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot removeRange on immutable List.'));
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot insertRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._NodeListWrapper$($._Lists_getRange(this, start, rangeLength, []));
},
 operator$index$1: function(index) {
return this[index];
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('Notification', [], {
 get$on: function() {
  return $._NotificationEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 cancel$0: function() {
  return this.cancel();
},
 close$0: function() {
  return this.close();
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLOListElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLObjectElement', ["height=", "name?", "width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLOptGroupElement', ["disabled!"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLOptionElement', ["disabled!", "index?", "value="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLOutputElement', ["name?", "value="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLParagraphElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLParamElement', ["name?", "value="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('PeerConnection00', [], {
 get$on: function() {
  return $._PeerConnection00EventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('WebKitPoint', ["x?", "y?"], {
});

$.$defineNativeClass('PositionError', ["message?"], {
});

$.$defineNativeClass('HTMLPreElement', ["width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLProgressElement', ["value="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLQuoteElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('RTCIceCandidateEvent', ["candidate?"], {
});

$.$defineNativeClass('RTCIceCandidate', ["candidate?"], {
});

$.$defineNativeClass('RTCPeerConnection', [], {
 get$on: function() {
  return $._RTCPeerConnectionEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('RadioNodeList', ["value="], {
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('RangeException', ["message?", "name?"], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('Range', [], {
 getBoundingClientRect$0: function() {
  return this.getBoundingClientRect();
},
 getClientRects$0: function() {
  return this.getClientRects();
},
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('Rect', ["left?", "top?"], {
});

$.$defineNativeClass('SQLError', ["message?"], {
});

$.$defineNativeClass('SQLException', ["message?"], {
});

$.$defineNativeClass('SQLResultSetRowList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC18);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub($.get$length(this), 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC22);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC23);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SVGAElement', [], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGAltGlyphDefElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGAltGlyphElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGAltGlyphItemElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGAngle', ["value="], {
});

$.$defineNativeClass('SVGAnimateColorElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGAnimateElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGAnimateMotionElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGAnimateTransformElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGAnimatedLengthList', [], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC18);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub($.get$length(this), 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC22);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC23);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SVGAnimatedNumberList', [], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC18);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub($.get$length(this), 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC22);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC23);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SVGAnimatedTransformList', [], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC18);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub($.get$length(this), 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC22);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC23);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SVGAnimationElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGCircleElement', ["r?"], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGClipPathElement', [], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGComponentTransferFunctionElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGCursorElement', ["x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGDefsElement', [], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGDescElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGDocument', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGElement', [], {
 get$classes: function() {
  if (this.get$_cssClassSet() == null)
    this.set$_cssClassSet($._AttributeClassSet$(this.get$_ptr()));
  return this.get$_cssClassSet();
},
 get$elements: function() {
  return $._FilteredElementList$(this);
},
 set$elements: function(value) {
  var elements = this.get$elements();
  $.clear(elements);
  $.addAll(elements, value);
},
 set$innerHTML: function(svg) {
  var container = $.Element_Element$tag('div');
  container.set$innerHTML('<svg version="1.1">' + $.S(svg) + '</svg>');
  this.set$elements($.index(container.get$elements(), 0).get$elements());
},
 get$id: function() {
return this.id;
},
 set$id: function(value) {
this.id = value;
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGElementInstance', [], {
 get$on: function() {
  return $._SVGElementInstanceEventsImpl$(this);
}
});

$.$defineNativeClass('SVGElementInstanceList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC18);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub($.get$length(this), 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC22);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC23);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SVGEllipseElement', [], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGException', ["message?", "name?"], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('SVGFEBlendElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEColorMatrixElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEComponentTransferElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFECompositeElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEConvolveMatrixElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEDiffuseLightingElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEDisplacementMapElement', ["height?", "width?", "x?", "y?"], {
 scale$1: function(arg0) { return this.scale.call$1(arg0); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEDistantLightElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEDropShadowElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEFloodElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEFuncAElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEFuncBElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEFuncGElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEFuncRElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEGaussianBlurElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEImageElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEMergeElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEMergeNodeElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEMorphologyElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEOffsetElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFEPointLightElement', ["x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFESpecularLightingElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFESpotLightElement', ["x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFETileElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFETurbulenceElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFilterElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFontElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFontFaceElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFontFaceFormatElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFontFaceNameElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFontFaceSrcElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGFontFaceUriElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGForeignObjectElement', ["height?", "width?", "x?", "y?"], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGGElement', [], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGGlyphElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGGlyphRefElement', ["x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGGradientElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGHKernElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGImageElement', ["height?", "width?", "x?", "y?"], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGLength', ["value="], {
});

$.$defineNativeClass('SVGLengthList', [], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC18);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub($.get$length(this), 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC22);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC23);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 clear$0: function() {
  return this.clear();
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SVGLineElement', [], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGLinearGradientElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGMPathElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGMarkerElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGMaskElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGMatrix', ["b?"], {
 scale$1: function(scaleFactor) {
  return this.scale(scaleFactor);
},
 translate$2: function(x, y) {
  return this.translate(x,y);
}
});

$.$defineNativeClass('SVGMetadataElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGMissingGlyphElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGNumber', ["value="], {
});

$.$defineNativeClass('SVGNumberList', [], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC18);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub($.get$length(this), 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC22);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC23);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 clear$0: function() {
  return this.clear();
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SVGPathElement', [], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGPathSegArcAbs', ["x?", "y?"], {
});

$.$defineNativeClass('SVGPathSegArcRel', ["x?", "y?"], {
});

$.$defineNativeClass('SVGPathSegCurvetoCubicAbs', ["x?", "y?"], {
});

$.$defineNativeClass('SVGPathSegCurvetoCubicRel', ["x?", "y?"], {
});

$.$defineNativeClass('SVGPathSegCurvetoCubicSmoothAbs', ["x?", "y?"], {
});

$.$defineNativeClass('SVGPathSegCurvetoCubicSmoothRel', ["x?", "y?"], {
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticAbs', ["x?", "y?"], {
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticRel', ["x?", "y?"], {
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticSmoothAbs', ["x?", "y?"], {
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticSmoothRel', ["x?", "y?"], {
});

$.$defineNativeClass('SVGPathSegLinetoAbs', ["x?", "y?"], {
});

$.$defineNativeClass('SVGPathSegLinetoHorizontalAbs', ["x?"], {
});

$.$defineNativeClass('SVGPathSegLinetoHorizontalRel', ["x?"], {
});

$.$defineNativeClass('SVGPathSegLinetoRel', ["x?", "y?"], {
});

$.$defineNativeClass('SVGPathSegLinetoVerticalAbs', ["y?"], {
});

$.$defineNativeClass('SVGPathSegLinetoVerticalRel', ["y?"], {
});

$.$defineNativeClass('SVGPathSegList', [], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC18);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub($.get$length(this), 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC22);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC23);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 clear$0: function() {
  return this.clear();
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SVGPathSegMovetoAbs', ["x?", "y?"], {
});

$.$defineNativeClass('SVGPathSegMovetoRel', ["x?", "y?"], {
});

$.$defineNativeClass('SVGPatternElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGPoint', ["x?", "y?"], {
});

$.$defineNativeClass('SVGPointList', [], {
 clear$0: function() {
  return this.clear();
}
});

$.$defineNativeClass('SVGPolygonElement', [], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGPolylineElement', [], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGRadialGradientElement', ["r?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGRectElement', ["height?", "width?", "x?", "y?"], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGRect', ["height=", "width=", "x?", "y?"], {
});

$.$defineNativeClass('SVGSVGElement', ["height?", "width?", "x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGScriptElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGSetElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGStopElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGStringList', [], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC18);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub($.get$length(this), 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC22);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC23);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 clear$0: function() {
  return this.clear();
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SVGStyleElement', ["disabled!"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGSwitchElement', [], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGSymbolElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGTRefElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGTSpanElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGTextContentElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGTextElement', [], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGTextPathElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGTextPositioningElement', ["x?", "y?"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGTitleElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGTransformList', [], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC18);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub($.get$length(this), 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC22);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC23);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 clear$0: function() {
  return this.clear();
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SVGUseElement', ["height?", "width?", "x?", "y?"], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGVKernElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGViewElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SVGViewSpec', [], {
 transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) { return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5); }
});

$.$defineNativeClass('Screen', ["height?", "width?"], {
});

$.$defineNativeClass('HTMLScriptElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLSelectElement', ["disabled!", "length=", "name?", "value="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLShadowElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('ShadowRoot', ["innerHTML!"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SharedWorkerContext', ["name?"], {
 get$on: function() {
  return $._SharedWorkerContextEventsImpl$(this);
}
});

$.$defineNativeClass('SourceBufferList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC18);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub($.get$length(this), 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC22);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC23);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('HTMLSourceElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLSpanElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('SpeechGrammarList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC18);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub($.get$length(this), 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC22);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC23);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SpeechInputResultList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC18);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub($.get$length(this), 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC22);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC23);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('SpeechRecognitionError', ["message?"], {
});

$.$defineNativeClass('SpeechRecognition', [], {
 get$on: function() {
  return $._SpeechRecognitionEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('SpeechRecognitionResult', ["length?"], {
});

$.$defineNativeClass('SpeechRecognitionResultList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC18);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub($.get$length(this), 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC22);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC23);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('StorageEvent', ["key?"], {
});

$.$defineNativeClass('Storage', [], {
 containsKey$1: function(key) {
  return !(this.$dom_getItem$1(key) == null);
},
 operator$index$1: function(key) {
  return this.$dom_getItem$1(key);
},
 operator$indexSet$2: function(key, value) {
  return this.$dom_setItem$2(key, value);
},
 putIfAbsent$2: function(key, ifAbsent) {
  if (this.containsKey$1(key) !== true)
    this.operator$indexSet$2(key, ifAbsent.call$0());
  return this.operator$index$1(key);
},
 remove$1: function(key) {
  var value = this.operator$index$1(key);
  this.$dom_removeItem$1(key);
  return value;
},
 clear$0: function() {
  return this.$dom_clear$0();
},
 forEach$1: function(f) {
  for (var i = 0; true; ++i) {
    var key = this.$dom_key$1(i);
    if (key == null)
      return;
    f.call$2(key, this.operator$index$1(key));
  }
},
 getKeys$0: function() {
  var keys = [];
  this.forEach$1(new $._StorageImpl_getKeys_anon(keys));
  return keys;
},
 getValues$0: function() {
  var values = [];
  this.forEach$1(new $._StorageImpl_getValues_anon(values));
  return values;
},
 get$length: function() {
  return this.get$$$dom_length();
},
 isEmpty$0: function() {
  return this.$dom_key$1(0) == null;
},
 get$$$dom_length: function() {
return this.length;
},
 $dom_clear$0: function() {
  return this.clear();
},
 $dom_getItem$1: function(key) {
  return this.getItem(key);
},
 $dom_key$1: function(index) {
  return this.key(index);
},
 $dom_removeItem$1: function(key) {
  return this.removeItem(key);
},
 $dom_setItem$2: function(key, data) {
  return this.setItem(key,data);
},
 is$Map: function() { return true; }
});

$.$defineNativeClass('HTMLStyleElement', ["disabled!"], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('StyleSheet', ["disabled!"], {
});

$.$defineNativeClass('StyleSheetList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC18);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub($.get$length(this), 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC22);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC23);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('HTMLTableCaptionElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableCellElement', ["colSpan!", "height=", "rowSpan!", "width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableColElement', ["width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableElement', ["width="], {
 insertRow$1: function(index) {
  return this.insertRow(index);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableRowElement', [], {
 insertCell$1: function(index) {
  return this.insertCell(index);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableSectionElement', [], {
 insertRow$1: function(index) {
  return this.insertRow(index);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTextAreaElement', ["disabled!", "name?", "value="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('TextMetrics', ["width?"], {
});

$.$defineNativeClass('TextTrackCue', ["id=", "text!"], {
 get$on: function() {
  return $._TextTrackCueEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('TextTrackCueList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC18);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub($.get$length(this), 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC22);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC23);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('TextTrack', [], {
 get$on: function() {
  return $._TextTrackEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('TextTrackList', ["length?"], {
 get$on: function() {
  return $._TextTrackListEventsImpl$(this);
},
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC18);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub($.get$length(this), 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC22);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC23);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('TimeRanges', ["length?"], {
});

$.$defineNativeClass('HTMLTitleElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('Touch', ["clientX?", "clientY?"], {
 get$_target: function() {
return this.target;
}
});

$.$defineNativeClass('TouchList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC18);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub($.get$length(this), 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC22);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC23);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('HTMLTrackElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('TreeWalker', [], {
 filter$1: function(arg0) { return this.filter.call$1(arg0); }
});

$.$defineNativeClass('HTMLUListElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('Uint16Array', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
this[index] = value
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC18);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub($.get$length(this), 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC22);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC23);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Uint32Array', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
this[index] = value
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC18);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub($.get$length(this), 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC22);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC23);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Uint8Array', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
this[index] = value
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC18);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub($.get$length(this), 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC22);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC23);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Uint8ClampedArray', [], {
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('HTMLUnknownElement', [], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLVideoElement', ["height=", "width="], {
 is$Element: function() { return true; }
});

$.$defineNativeClass('WebGLActiveInfo', ["name?"], {
});

$.$defineNativeClass('WebGLRenderingContext', [], {
 clear$1: function(mask) {
  return this.clear(mask);
}
});

$.$defineNativeClass('WebKitAnimationList', ["length?"], {
 operator$index$1: function(index) {
return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedOperationException$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addLast$1: function(value) {
  throw $.$$throw($.CTC2);
},
 addAll$1: function(collection) {
  throw $.$$throw($.CTC2);
},
 forEach$1: function(f) {
  return $._Collections_forEach(this, f);
},
 map$1: function(f) {
  return $._Collections_map(this, [], f);
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 every$1: function(f) {
  return $._Collections_every(this, f);
},
 isEmpty$0: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.CTC18);
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 lastIndexOf$2: function(element, start) {
  if (start == null)
    start = $.sub($.get$length(this), 1);
  return $._Lists_lastIndexOf(this, element, start);
},
 lastIndexOf$1: function(element) {
  return this.lastIndexOf$2(element,null)
},
 last$0: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.CTC12);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.CTC22);
},
 insertRange$3: function(start, rangeLength, initialValue) {
  throw $.$$throw($.CTC23);
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('WebKitCSSFilterValue', [], {
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('WebKitNamedFlow', ["name?"], {
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('WebSocket', [], {
 get$on: function() {
  return $._WebSocketEventsImpl$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$2: function(code, reason) {
  return this.close(code,reason);
},
 close$0: function() {
  return this.close();
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 send$1: function(data) {
  return this.send(data);
}
});

$.$defineNativeClass('WorkerContext', ["location?", "navigator?"], {
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $._WorkerContextEventsImpl$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 clearInterval$1: function(handle) {
  return this.clearInterval(handle);
},
 clearTimeout$1: function(handle) {
  return this.clearTimeout(handle);
},
 close$0: function() {
  return this.close();
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 setInterval$2: function(handler, timeout) {
  return this.setInterval($.convertDartClosureToJS(handler, 0),timeout);
},
 setTimeout$2: function(handler, timeout) {
  return this.setTimeout($.convertDartClosureToJS(handler, 0),timeout);
}
});

$.$defineNativeClass('Worker', [], {
 get$on: function() {
  return $._WorkerEventsImpl$(this);
},
 postMessage$2: function(message, messagePorts) {
  var t1 = $ === messagePorts;
  if (t1)
    messagePorts = null;
  if (!t1) {
    this._postMessage_1$2($._convertDartToNative_SerializedScriptValue(message), messagePorts);
    return;
  }
  this._postMessage_2$1($._convertDartToNative_SerializedScriptValue(message));
  return;
},
 postMessage$1: function(message) {
  return this.postMessage$2(message,$)
},
 _postMessage_1$2: function(message, messagePorts) {
  return this.postMessage(message,messagePorts);
},
 _postMessage_2$1: function(message) {
  return this.postMessage(message);
},
 terminate$0: function() {
  return this.terminate();
}
});

$.$defineNativeClass('WorkerLocation', [], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('WorkerNavigator', ["userAgent?"], {
});

$.$defineNativeClass('XPathException', ["message?", "name?"], {
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('XSLTProcessor', [], {
 reset$0: function() {
  return this.reset();
}
});

$.$defineNativeClass('Worker', [], {
 get$id: function() {
  return this.id;
},
 set$id: function(i) {
  this.id = i;
},
 set$onmessage: function(f) {
  this.onmessage = f;
},
 postMessage$1: function(msg) {
  return this.postMessage(msg);
}
});

$.$defineNativeClass('DOMWindow', [], {
 setTimeout$2: function(handler, timeout) {
  return this.setTimeout($.convertDartClosureToJS(handler, 0),timeout);
},
 setInterval$2: function(handler, timeout) {
  return this.setInterval($.convertDartClosureToJS(handler, 0),timeout);
},
 clearTimeout$1: function(handle) {
  return this.clearTimeout(handle);
},
 clearInterval$1: function(handle) {
  return this.clearInterval(handle);
}
});

// 354 dynamic classes.
// 401 classes
// 34 !leaf
(function(){
  var v0/*class(_SVGTextPositioningElementImpl)*/ = 'SVGTextPositioningElement|SVGTextElement|SVGTSpanElement|SVGTRefElement|SVGAltGlyphElement|SVGTextElement|SVGTSpanElement|SVGTRefElement|SVGAltGlyphElement';
  var v1/*class(_Uint8ArrayImpl)*/ = 'Uint8Array|Uint8ClampedArray|Uint8ClampedArray';
  var v2/*class(_SVGTextContentElementImpl)*/ = [v0/*class(_SVGTextPositioningElementImpl)*/,v0/*class(_SVGTextPositioningElementImpl)*/,'SVGTextContentElement|SVGTextPathElement|SVGTextPathElement'].join('|');
  var v3/*class(_SVGGradientElementImpl)*/ = 'SVGGradientElement|SVGRadialGradientElement|SVGLinearGradientElement|SVGRadialGradientElement|SVGLinearGradientElement';
  var v4/*class(_SVGComponentTransferFunctionElementImpl)*/ = 'SVGComponentTransferFunctionElement|SVGFEFuncRElement|SVGFEFuncGElement|SVGFEFuncBElement|SVGFEFuncAElement|SVGFEFuncRElement|SVGFEFuncGElement|SVGFEFuncBElement|SVGFEFuncAElement';
  var v5/*class(_SVGAnimationElementImpl)*/ = 'SVGAnimationElement|SVGSetElement|SVGAnimateTransformElement|SVGAnimateMotionElement|SVGAnimateElement|SVGAnimateColorElement|SVGSetElement|SVGAnimateTransformElement|SVGAnimateMotionElement|SVGAnimateElement|SVGAnimateColorElement';
  var v6/*class(_SVGElementImpl)*/ = [v2/*class(_SVGTextContentElementImpl)*/,v3/*class(_SVGGradientElementImpl)*/,v4/*class(_SVGComponentTransferFunctionElementImpl)*/,v5/*class(_SVGAnimationElementImpl)*/,v2/*class(_SVGTextContentElementImpl)*/,v3/*class(_SVGGradientElementImpl)*/,v4/*class(_SVGComponentTransferFunctionElementImpl)*/,v5/*class(_SVGAnimationElementImpl)*/,'SVGElement|SVGViewElement|SVGVKernElement|SVGUseElement|SVGTitleElement|SVGSymbolElement|SVGSwitchElement|SVGStyleElement|SVGStopElement|SVGScriptElement|SVGSVGElement|SVGRectElement|SVGPolylineElement|SVGPolygonElement|SVGPatternElement|SVGPathElement|SVGMissingGlyphElement|SVGMetadataElement|SVGMaskElement|SVGMarkerElement|SVGMPathElement|SVGLineElement|SVGImageElement|SVGHKernElement|SVGGlyphRefElement|SVGGlyphElement|SVGGElement|SVGForeignObjectElement|SVGFontFaceUriElement|SVGFontFaceSrcElement|SVGFontFaceNameElement|SVGFontFaceFormatElement|SVGFontFaceElement|SVGFontElement|SVGFilterElement|SVGFETurbulenceElement|SVGFETileElement|SVGFESpotLightElement|SVGFESpecularLightingElement|SVGFEPointLightElement|SVGFEOffsetElement|SVGFEMorphologyElement|SVGFEMergeNodeElement|SVGFEMergeElement|SVGFEImageElement|SVGFEGaussianBlurElement|SVGFEFloodElement|SVGFEDropShadowElement|SVGFEDistantLightElement|SVGFEDisplacementMapElement|SVGFEDiffuseLightingElement|SVGFEConvolveMatrixElement|SVGFECompositeElement|SVGFEComponentTransferElement|SVGFEColorMatrixElement|SVGFEBlendElement|SVGEllipseElement|SVGDescElement|SVGDefsElement|SVGCursorElement|SVGClipPathElement|SVGCircleElement|SVGAltGlyphItemElement|SVGAltGlyphDefElement|SVGAElement|SVGViewElement|SVGVKernElement|SVGUseElement|SVGTitleElement|SVGSymbolElement|SVGSwitchElement|SVGStyleElement|SVGStopElement|SVGScriptElement|SVGSVGElement|SVGRectElement|SVGPolylineElement|SVGPolygonElement|SVGPatternElement|SVGPathElement|SVGMissingGlyphElement|SVGMetadataElement|SVGMaskElement|SVGMarkerElement|SVGMPathElement|SVGLineElement|SVGImageElement|SVGHKernElement|SVGGlyphRefElement|SVGGlyphElement|SVGGElement|SVGForeignObjectElement|SVGFontFaceUriElement|SVGFontFaceSrcElement|SVGFontFaceNameElement|SVGFontFaceFormatElement|SVGFontFaceElement|SVGFontElement|SVGFilterElement|SVGFETurbulenceElement|SVGFETileElement|SVGFESpotLightElement|SVGFESpecularLightingElement|SVGFEPointLightElement|SVGFEOffsetElement|SVGFEMorphologyElement|SVGFEMergeNodeElement|SVGFEMergeElement|SVGFEImageElement|SVGFEGaussianBlurElement|SVGFEFloodElement|SVGFEDropShadowElement|SVGFEDistantLightElement|SVGFEDisplacementMapElement|SVGFEDiffuseLightingElement|SVGFEConvolveMatrixElement|SVGFECompositeElement|SVGFEComponentTransferElement|SVGFEColorMatrixElement|SVGFEBlendElement|SVGEllipseElement|SVGDescElement|SVGDefsElement|SVGCursorElement|SVGClipPathElement|SVGCircleElement|SVGAltGlyphItemElement|SVGAltGlyphDefElement|SVGAElement'].join('|');
  var v7/*class(_MediaElementImpl)*/ = 'HTMLMediaElement|HTMLVideoElement|HTMLAudioElement|HTMLVideoElement|HTMLAudioElement';
  var v8/*class(_ElementImpl)*/ = [v6/*class(_SVGElementImpl)*/,v7/*class(_MediaElementImpl)*/,v6/*class(_SVGElementImpl)*/,v7/*class(_MediaElementImpl)*/,'Element|HTMLUnknownElement|HTMLUListElement|HTMLTrackElement|HTMLTitleElement|HTMLTextAreaElement|HTMLTableSectionElement|HTMLTableRowElement|HTMLTableElement|HTMLTableColElement|HTMLTableCellElement|HTMLTableCaptionElement|HTMLStyleElement|HTMLSpanElement|HTMLSourceElement|HTMLShadowElement|HTMLSelectElement|HTMLScriptElement|HTMLQuoteElement|HTMLProgressElement|HTMLPreElement|HTMLParamElement|HTMLParagraphElement|HTMLOutputElement|HTMLOptionElement|HTMLOptGroupElement|HTMLObjectElement|HTMLOListElement|HTMLModElement|HTMLMeterElement|HTMLMetaElement|HTMLMenuElement|HTMLMarqueeElement|HTMLMapElement|HTMLLinkElement|HTMLLegendElement|HTMLLabelElement|HTMLLIElement|HTMLKeygenElement|HTMLInputElement|HTMLImageElement|HTMLIFrameElement|HTMLHtmlElement|HTMLHeadingElement|HTMLHeadElement|HTMLHRElement|HTMLFrameSetElement|HTMLFrameElement|HTMLFormElement|HTMLFontElement|HTMLFieldSetElement|HTMLEmbedElement|HTMLDivElement|HTMLDirectoryElement|HTMLDetailsElement|HTMLDataListElement|HTMLDListElement|HTMLContentElement|HTMLCanvasElement|HTMLButtonElement|HTMLBodyElement|HTMLBaseFontElement|HTMLBaseElement|HTMLBRElement|HTMLAreaElement|HTMLAppletElement|HTMLAnchorElement|HTMLElement|HTMLUnknownElement|HTMLUListElement|HTMLTrackElement|HTMLTitleElement|HTMLTextAreaElement|HTMLTableSectionElement|HTMLTableRowElement|HTMLTableElement|HTMLTableColElement|HTMLTableCellElement|HTMLTableCaptionElement|HTMLStyleElement|HTMLSpanElement|HTMLSourceElement|HTMLShadowElement|HTMLSelectElement|HTMLScriptElement|HTMLQuoteElement|HTMLProgressElement|HTMLPreElement|HTMLParamElement|HTMLParagraphElement|HTMLOutputElement|HTMLOptionElement|HTMLOptGroupElement|HTMLObjectElement|HTMLOListElement|HTMLModElement|HTMLMeterElement|HTMLMetaElement|HTMLMenuElement|HTMLMarqueeElement|HTMLMapElement|HTMLLinkElement|HTMLLegendElement|HTMLLabelElement|HTMLLIElement|HTMLKeygenElement|HTMLInputElement|HTMLImageElement|HTMLIFrameElement|HTMLHtmlElement|HTMLHeadingElement|HTMLHeadElement|HTMLHRElement|HTMLFrameSetElement|HTMLFrameElement|HTMLFormElement|HTMLFontElement|HTMLFieldSetElement|HTMLEmbedElement|HTMLDivElement|HTMLDirectoryElement|HTMLDetailsElement|HTMLDataListElement|HTMLDListElement|HTMLContentElement|HTMLCanvasElement|HTMLButtonElement|HTMLBodyElement|HTMLBaseFontElement|HTMLBaseElement|HTMLBRElement|HTMLAreaElement|HTMLAppletElement|HTMLAnchorElement|HTMLElement'].join('|');
  var v9/*class(_DocumentImpl)*/ = 'HTMLDocument|SVGDocument|SVGDocument';
  var v10/*class(_DocumentFragmentImpl)*/ = 'DocumentFragment|ShadowRoot|ShadowRoot';
  var v11/*class(_CharacterDataImpl)*/ = 'CharacterData|Text|CDATASection|CDATASection|Comment|Text|CDATASection|CDATASection|Comment';
  var v12/*class(_MouseEventImpl)*/ = 'MouseEvent|WheelEvent|WheelEvent';
  var v13/*class(_WorkerContextImpl)*/ = 'WorkerContext|SharedWorkerContext|DedicatedWorkerContext|SharedWorkerContext|DedicatedWorkerContext';
  var v14/*class(_NodeImpl)*/ = [v8/*class(_ElementImpl)*/,v9/*class(_DocumentImpl)*/,v10/*class(_DocumentFragmentImpl)*/,v11/*class(_CharacterDataImpl)*/,v8/*class(_ElementImpl)*/,v9/*class(_DocumentImpl)*/,v10/*class(_DocumentFragmentImpl)*/,v11/*class(_CharacterDataImpl)*/,'Node|ProcessingInstruction|Notation|EntityReference|Entity|DocumentType|Attr|ProcessingInstruction|Notation|EntityReference|Entity|DocumentType|Attr'].join('|');
  var v15/*class(_MediaStreamImpl)*/ = 'MediaStream|LocalMediaStream|LocalMediaStream';
  var v16/*class(_IDBRequestImpl)*/ = 'IDBRequest|IDBVersionChangeRequest|IDBOpenDBRequest|IDBVersionChangeRequest|IDBOpenDBRequest';
  var v17/*class(_AbstractWorkerImpl)*/ = 'AbstractWorker|Worker|SharedWorker|Worker|SharedWorker';
  var table = [
    // [dynamic-dispatch-tag, tags of classes implementing dynamic-dispatch-tag]
    ['SVGTextPositioningElement', v0/*class(_SVGTextPositioningElementImpl)*/],
    ['SVGTextContentElement', v2/*class(_SVGTextContentElementImpl)*/],
    ['HTMLMediaElement', v7/*class(_MediaElementImpl)*/],
    ['MediaStream', v15/*class(_MediaStreamImpl)*/],
    ['StyleSheet', 'StyleSheet|CSSStyleSheet|CSSStyleSheet'],
    ['MouseEvent', v12/*class(_MouseEventImpl)*/],
    ['AbstractWorker', v17/*class(_AbstractWorkerImpl)*/],
    ['Uint8Array', v1/*class(_Uint8ArrayImpl)*/],
    ['ArrayBufferView', [v1/*class(_Uint8ArrayImpl)*/,v1/*class(_Uint8ArrayImpl)*/,'ArrayBufferView|Uint32Array|Uint16Array|Int8Array|Int32Array|Int16Array|Float64Array|Float32Array|DataView|Uint32Array|Uint16Array|Int8Array|Int32Array|Int16Array|Float64Array|Float32Array|DataView'].join('|')],
    ['SVGGradientElement', v3/*class(_SVGGradientElementImpl)*/],
    ['SVGComponentTransferFunctionElement', v4/*class(_SVGComponentTransferFunctionElementImpl)*/],
    ['SVGAnimationElement', v5/*class(_SVGAnimationElementImpl)*/],
    ['SVGElement', v6/*class(_SVGElementImpl)*/],
    ['Element', v8/*class(_ElementImpl)*/],
    ['HTMLDocument', v9/*class(_DocumentImpl)*/],
    ['DocumentFragment', v10/*class(_DocumentFragmentImpl)*/],
    ['CharacterData', v11/*class(_CharacterDataImpl)*/],
    ['Node', v14/*class(_NodeImpl)*/],
    ['NodeList', 'NodeList|RadioNodeList|RadioNodeList'],
    ['AudioParam', 'AudioParam|AudioGain|AudioGain'],
    ['Blob', 'Blob|File|File'],
    ['WorkerContext', v13/*class(_WorkerContextImpl)*/],
    ['CSSValueList', 'CSSValueList|WebKitCSSFilterValue|WebKitCSSTransformValue|WebKitCSSFilterValue|WebKitCSSTransformValue'],
    ['DOMTokenList', 'DOMTokenList|DOMSettableTokenList|DOMSettableTokenList'],
    ['Entry', 'Entry|FileEntry|DirectoryEntry|FileEntry|DirectoryEntry'],
    ['EntrySync', 'EntrySync|FileEntrySync|DirectoryEntrySync|FileEntrySync|DirectoryEntrySync'],
    ['Event', [v12/*class(_MouseEventImpl)*/,v12/*class(_MouseEventImpl)*/,v12/*class(_MouseEventImpl)*/,v12/*class(_MouseEventImpl)*/,'Event|WebGLContextEvent|UIEvent|TouchEvent|TextEvent|SVGZoomEvent|KeyboardEvent|CompositionEvent|TouchEvent|TextEvent|SVGZoomEvent|KeyboardEvent|CompositionEvent|WebKitTransitionEvent|TrackEvent|StorageEvent|SpeechRecognitionEvent|SpeechRecognitionError|SpeechInputEvent|RTCIceCandidateEvent|ProgressEvent|XMLHttpRequestProgressEvent|XMLHttpRequestProgressEvent|PopStateEvent|PageTransitionEvent|OverflowEvent|OfflineAudioCompletionEvent|MutationEvent|MessageEvent|MediaStreamTrackEvent|MediaStreamEvent|MediaKeyEvent|IDBVersionChangeEvent|IDBVersionChangeEvent|HashChangeEvent|ErrorEvent|DeviceOrientationEvent|DeviceMotionEvent|CustomEvent|CloseEvent|BeforeLoadEvent|AudioProcessingEvent|WebKitAnimationEvent|WebGLContextEvent|UIEvent|TouchEvent|TextEvent|SVGZoomEvent|KeyboardEvent|CompositionEvent|TouchEvent|TextEvent|SVGZoomEvent|KeyboardEvent|CompositionEvent|WebKitTransitionEvent|TrackEvent|StorageEvent|SpeechRecognitionEvent|SpeechRecognitionError|SpeechInputEvent|RTCIceCandidateEvent|ProgressEvent|XMLHttpRequestProgressEvent|XMLHttpRequestProgressEvent|PopStateEvent|PageTransitionEvent|OverflowEvent|OfflineAudioCompletionEvent|MutationEvent|MessageEvent|MediaStreamTrackEvent|MediaStreamEvent|MediaKeyEvent|IDBVersionChangeEvent|IDBVersionChangeEvent|HashChangeEvent|ErrorEvent|DeviceOrientationEvent|DeviceMotionEvent|CustomEvent|CloseEvent|BeforeLoadEvent|AudioProcessingEvent|WebKitAnimationEvent'].join('|')],
    ['IDBRequest', v16/*class(_IDBRequestImpl)*/],
    ['EventTarget', [v13/*class(_WorkerContextImpl)*/,v14/*class(_NodeImpl)*/,v15/*class(_MediaStreamImpl)*/,v16/*class(_IDBRequestImpl)*/,v17/*class(_AbstractWorkerImpl)*/,v13/*class(_WorkerContextImpl)*/,v14/*class(_NodeImpl)*/,v15/*class(_MediaStreamImpl)*/,v16/*class(_IDBRequestImpl)*/,v17/*class(_AbstractWorkerImpl)*/,'EventTarget|WebSocket|WebKitNamedFlow|TextTrack|TextTrackCue|SpeechRecognition|SVGElementInstance|RTCPeerConnection|Performance|PeerConnection00|Notification|MessagePort|MediaStreamTrackList|MediaStreamTrack|MediaSource|MediaController|DOMWindow|IDBTransaction|IDBDatabase|XMLHttpRequestUpload|XMLHttpRequest|FileWriter|FileReader|EventSource|DOMApplicationCache|BatteryManager|AudioContext|WebSocket|WebKitNamedFlow|TextTrack|TextTrackCue|SpeechRecognition|SVGElementInstance|RTCPeerConnection|Performance|PeerConnection00|Notification|MessagePort|MediaStreamTrackList|MediaStreamTrack|MediaSource|MediaController|DOMWindow|IDBTransaction|IDBDatabase|XMLHttpRequestUpload|XMLHttpRequest|FileWriter|FileReader|EventSource|DOMApplicationCache|BatteryManager|AudioContext'].join('|')],
    ['HTMLCollection', 'HTMLCollection|HTMLOptionsCollection|HTMLOptionsCollection'],
    ['IDBCursor', 'IDBCursor|IDBCursorWithValue|IDBCursorWithValue']];
$.dynamicSetMetadata(table);
})();

var $globalThis = $;
var $globalState;
var $globals;
var $isWorker = false;
var $supportsWorkers = false;
var $thisScriptUrl;
function $static_init(){};

function $initGlobals(context) {
  context.isolateStatics = new Isolate();
}
function $setGlobals(context) {
  $ = context.isolateStatics;
  $globalThis = $;
}
$.main.call$0 = $.main

//
// BEGIN invoke [main].
//
if (typeof document != 'undefined' && document.readyState != 'complete') {
  document.addEventListener('readystatechange', function () {
    if (document.readyState == 'complete') {
      if (typeof dartMainRunner == 'function') {
        dartMainRunner(function() { $.startRootIsolate($.main); });
      } else {
        $.startRootIsolate($.main);
      }
    }
  }, false);
} else {
  if (typeof dartMainRunner == 'function') {
    dartMainRunner(function() { $.startRootIsolate($.main); });
  } else {
    $.startRootIsolate($.main);
  }
}
//
// END invoke [main].
//

function init() {
Isolate.$isolateProperties = {};
Isolate.$defineClass = function(cls, fields, prototype) {
  var generateGetterSetter =   function(field, prototype) {
    var len = field.length;
    var lastChar = field[len - 1];
    var needsGetter = lastChar == '?' || lastChar == '=';
    var needsSetter = lastChar == '!' || lastChar == '=';
    if (needsGetter || needsSetter) field = field.substring(0, len - 1);
    if (needsGetter) {
      var getterString = "return this." + field + ";";
        prototype["get$" + field] = new Function(getterString);
    }
    if (needsSetter) {
      var setterString = "this." + field + " = v;";
      prototype["set$" + field] = new Function("v", setterString);
    }
    return field;
  };
  var constructor;
  if (typeof fields == 'function') {
    constructor = fields;
  } else {
    var str = "function " + cls + "(";
    var body = "";
    for (var i = 0; i < fields.length; i++) {
      if (i != 0) str += ", ";
      var field = fields[i];
      field = generateGetterSetter(field, prototype);
      str += field;
      body += "this." + field + " = " + field + ";\n";
    }
    str += ") {" + body + "}\n";
    str += "return " + cls + ";";
    constructor = new Function(str)();
  }
  constructor.prototype = prototype;
  return constructor;
};
var supportsProto = false;
var tmp = Isolate.$defineClass('c', ['f?'], {}).prototype;
if (tmp.__proto__) {
  tmp.__proto__ = {};
  if (typeof tmp.get$f !== "undefined") supportsProto = true;
}
Isolate.$pendingClasses = {};
Isolate.$finishClasses = function(collectedClasses) {
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var cls in collectedClasses) {
    if (hasOwnProperty.call(collectedClasses, cls)) {
      var desc = collectedClasses[cls];
      Isolate.$isolateProperties[cls] = Isolate.$defineClass(cls, desc[''], desc);
      if (desc['super'] !== "") Isolate.$pendingClasses[cls] = desc['super'];
    }
  }
  var pendingClasses = Isolate.$pendingClasses;
  Isolate.$pendingClasses = {};
  var finishedClasses = {};
  function finishClass(cls) {
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    if (hasOwnProperty.call(finishedClasses, cls)) return;
    finishedClasses[cls] = true;
    var superclass = pendingClasses[cls];
    if (!superclass) return;
    finishClass(superclass);
    var constructor = Isolate.$isolateProperties[cls];
    var superConstructor = Isolate.$isolateProperties[superclass];
    var prototype = constructor.prototype;
    if (supportsProto) {
      prototype.__proto__ = superConstructor.prototype;
      prototype.constructor = constructor;
    } else {
      function tmp() {};
      tmp.prototype = superConstructor.prototype;
      var newPrototype = new tmp();
      constructor.prototype = newPrototype;
      newPrototype.constructor = constructor;
      for (var member in prototype) {
        if (member == '' || member == 'super') continue;
        if (hasOwnProperty.call(prototype, member)) {
          newPrototype[member] = prototype[member];
        }
      }
    }
  }
  for (var cls in pendingClasses) finishClass(cls);
};
Isolate.$lazy = function(prototype, staticName, fieldName, getterName, lazyValue) {
  var sentinelUndefined = {};
  var sentinelInProgress = {};
  prototype[fieldName] = sentinelUndefined;
  var getter = new Function("{ return $." + fieldName + ";}");
  prototype[getterName] = function() {
    var result = $[fieldName];
    try {
      if (result === sentinelUndefined) {
        $[fieldName] = sentinelInProgress;
        try {
          result = $[fieldName] = lazyValue();
        } catch (e) {
          if ($[fieldName] === sentinelInProgress) {
            $[fieldName] = null;
          }
          throw e;
        }
      } else if (result === sentinelInProgress) {
        $.throwCyclicInit(staticName);
      }
      return result;
    } finally {
      $[getterName] = getter;
    }
  };
};
Isolate.$finishIsolateConstructor = function(oldIsolate) {
  var isolateProperties = oldIsolate.$isolateProperties;
  var isolatePrototype = oldIsolate.prototype;
  var str = "{\n";
  str += "var properties = Isolate.$isolateProperties;\n";
  for (var staticName in isolateProperties) {
    if (Object.prototype.hasOwnProperty.call(isolateProperties, staticName)) {
      str += "this." + staticName + "= properties." + staticName + ";\n";
    }
  }
  str += "}\n";
  var newIsolate = new Function(str);
  newIsolate.prototype = isolatePrototype;
  isolatePrototype.constructor = newIsolate;
  newIsolate.$isolateProperties = isolateProperties;
  return newIsolate;
};
}

//@ sourceMappingURL=vote_demo.dart.js.map