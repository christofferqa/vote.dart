// Generated by dart2js, the Dart to JavaScript compiler.
// The code supports the following hooks:
// dartPrint(message)   - if this function is defined it is called
//                        instead of the Dart [print] method.
// dartMainRunner(main) - if this function is defined, the Dart [main]
//                        method will not be invoked directly.
//                        Instead, a closure that will invoke [main] is
//                        passed to [dartMainRunner].
function Isolate() {}
init();

var $$ = {};
var $ = Isolate.$isolateProperties;
$$.DartError = {"": "Object;",
  get$stack: function() {
    return this.stack;
  },
  toString$0: function() {
    var dartException = this.dartException;
    if (!!Error.captureStackTrace || this.get$stack() == null)
      return $.toString(dartException);
    else
      return $.S(dartException) + "\n" + $.S(this.get$stack());
  },
  DartError$1: function(dartException) {
    this.dartException = dartException;
    this.toString = $.DartError_toStringWrapper.call$0;
  }
};

$$.StackTrace = {"": "Object;stack",
  toString$0: function() {
    var t1 = this.stack;
    if (typeof t1 !== "string")
      return this.toString$0$bailout1(1, t1);
    return t1;
  },
  toString$0$bailout1: function(state0, t1) {
    return !(t1 == null) ? t1 : "";
  }
};

$$.Closure = {"": "Object;",
  toString$0: function() {
    return "Closure";
  }
};

$$.Dynamic_ = {"": "Object;"};

$$.Null = {"": "Object;"};

$$.MetaInfo = {"": "Object;_tag>,_tags,_liblib2$_set>"};

$$.JSSyntaxRegExp = {"": "Object;_pattern,_isMultiLine,_isCaseSensitive",
  firstMatch$1: function(str) {
    var m, matchStart, t1;
    m = $.regExpExec(this, $.checkString(str));
    if (m == null)
      return;
    matchStart = m.index;
    t1 = $.length($.$$index(m, 0));
    if (typeof t1 !== "number")
      throw $.iae(t1);
    return $._MatchImplementation$(this.get$pattern(), str, matchStart, matchStart + t1, m);
  },
  hasMatch$1: function(str) {
    return $.regExpTest(this, $.checkString(str));
  },
  allMatches$1: function(str) {
    $.checkString(str);
    return $._AllMatchesIterable$(this, str);
  },
  get$pattern: function() {
    return this._pattern;
  },
  get$isMultiLine: function() {
    return this._isMultiLine;
  },
  get$isCaseSensitive: function() {
    return this._isCaseSensitive;
  },
  $isJSSyntaxRegExp: true
};

$$._MatchImplementation = {"": "Object;pattern>,str,start,end,_groups",
  $index: function(index) {
    var t1 = this._groups;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.$$index$bailout(1, index, t1);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  $$index$bailout: function(state0, index, t1) {
    return $.$$index(t1, index);
  }
};

$$._AllMatchesIterable = {"": "Iterable;_re,_str",
  get$iterator: function() {
    return $._AllMatchesIterator$(this._re, this._str);
  }
};

$$._AllMatchesIterator = {"": "Object;_re,_str,_liblib2$_current",
  get$current: function() {
    return this._liblib2$_current;
  },
  moveNext$0: function() {
    this._liblib2$_current = this._re.firstMatch$1(this._str);
    return !(this._liblib2$_current == null);
  }
};

$$.StringMatch = {"": "Object;start,str,pattern>",
  $index: function(g) {
    return this.group$1(g);
  },
  group$1: function(group_) {
    if ($.$$eq(group_, 0) !== true)
      throw $.$$throw($.RangeError$value(group_));
    return this.pattern;
  }
};

$$.JsStringBuffer = {"": "Object;_contents",
  get$length: function() {
    return this._contents.length;
  },
  get$isEmpty: function() {
    return $.$$eq(this.get$length(), 0);
  },
  add$1: function(obj) {
    var t1, t2;
    if (typeof obj !== "string")
      return this.add$1$bailout(1, obj);
    t1 = this._contents;
    t2 = obj;
    this._contents = t1 + t2;
  },
  add$1$bailout: function(state0, obj) {
    var t1, t2;
    t1 = this._contents;
    t2 = typeof obj === "string" ? obj : $.S(obj);
    this._contents = t1 + t2;
  },
  addAll$1: function(objects) {
    var t1, t2, t3;
    for (t1 = $.iterator(objects); t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      t3 = this._contents;
      t2 = typeof t2 === "string" ? t2 : $.S(t2);
      this._contents = t3 + t2;
    }
  },
  clear$0: function() {
    this._contents = "";
  },
  toString$0: function() {
    return this._contents;
  }
};

$$.Collection = {"": "Iterable;",
  addAll$1: function(elements) {
    var t1;
    for (t1 = $.iterator(elements); t1.moveNext$0() === true;)
      this.add$1(t1.get$current());
  },
  removeAll$1: function(elements) {
    $.IterableMixinWorkaround_removeAll(this, elements);
  },
  removeMatching$1: function(test) {
    $.IterableMixinWorkaround_removeMatching(this, test);
  },
  clear$0: function() {
    $.IterableMixinWorkaround_removeMatching(this, new $.Collection_clear_anon());
  },
  $isCollection: function() {
    return true;
  }
};

$$.DateTime = {"": "Object;millisecondsSinceEpoch>,isUtc",
  $eq: function(other) {
    if (other == null)
      return false;
    if (!(typeof other === "object" && other !== null && !!other.$isDateTime))
      return false;
    return $.$$eq(this.millisecondsSinceEpoch, other.millisecondsSinceEpoch);
  },
  $lt: function(other) {
    var t1, t3;
    t1 = this.millisecondsSinceEpoch;
    t3 = other.get$millisecondsSinceEpoch();
    if (typeof t1 !== "number")
      return this.$$lt$bailout(1, other, t1);
    if (typeof t3 !== "number")
      return this.$$lt$bailout(2, 0, t1, t3);
    return t1 < t3;
  },
  $$lt$bailout: function(state0, other, t1, t3) {
    switch (state0) {
      case 0:
        t1 = this.millisecondsSinceEpoch;
      case 1:
        state0 = 0;
        t3 = other.get$millisecondsSinceEpoch();
      case 2:
        state0 = 0;
        return $.$$lt(t1, t3);
    }
  },
  $le: function(other) {
    return $.$$le(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
  },
  $gt: function(other) {
    var t1, t3;
    t1 = this.millisecondsSinceEpoch;
    t3 = other.get$millisecondsSinceEpoch();
    if (typeof t1 !== "number")
      return this.$$gt$bailout(1, other, t1);
    if (typeof t3 !== "number")
      return this.$$gt$bailout(2, 0, t1, t3);
    return t1 > t3;
  },
  $$gt$bailout: function(state0, other, t1, t3) {
    switch (state0) {
      case 0:
        t1 = this.millisecondsSinceEpoch;
      case 1:
        state0 = 0;
        t3 = other.get$millisecondsSinceEpoch();
      case 2:
        state0 = 0;
        return $.$$gt(t1, t3);
    }
  },
  $ge: function(other) {
    return $.$$ge(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
  },
  compareTo$1: function(other) {
    return $.compareTo(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
  },
  get$hashCode: function() {
    return this.millisecondsSinceEpoch;
  },
  toString$0: function() {
    var t1, t2, t3, y, m, d, h, min, sec, ms;
    t1 = new $.DateTime_toString_fourDigits();
    t2 = new $.DateTime_toString_threeDigits();
    t3 = new $.DateTime_toString_twoDigits();
    y = t1.call$1(this.get$year());
    m = t3.call$1(this.get$month());
    d = t3.call$1(this.get$day());
    h = t3.call$1(this.get$hour());
    min = t3.call$1(this.get$minute());
    sec = t3.call$1(this.get$second());
    ms = t2.call$1(this.get$millisecond());
    if (this.isUtc === true)
      return $.S(y) + "-" + $.S(m) + "-" + $.S(d) + " " + $.S(h) + ":" + $.S(min) + ":" + $.S(sec) + "." + $.S(ms) + "Z";
    else
      return $.S(y) + "-" + $.S(m) + "-" + $.S(d) + " " + $.S(h) + ":" + $.S(min) + ":" + $.S(sec) + "." + $.S(ms);
  },
  add$1: function(duration) {
    var ms, t2;
    ms = this.millisecondsSinceEpoch;
    t2 = duration.get$inMilliseconds();
    if (typeof ms !== "number")
      return this.add$1$bailout(1, duration, ms);
    if (typeof t2 !== "number")
      return this.add$1$bailout(2, 0, ms, t2);
    return $.DateTime$fromMillisecondsSinceEpoch(ms + t2, this.isUtc);
  },
  add$1$bailout: function(state0, duration, ms, t2) {
    switch (state0) {
      case 0:
        ms = this.millisecondsSinceEpoch;
      case 1:
        state0 = 0;
        t2 = duration.get$inMilliseconds();
      case 2:
        state0 = 0;
        return $.DateTime$fromMillisecondsSinceEpoch($.$$add(ms, t2), this.isUtc);
    }
  },
  get$year: function() {
    return $.Primitives_getYear(this);
  },
  get$month: function() {
    return $.Primitives_getMonth(this);
  },
  get$day: function() {
    return $.Primitives_getDay(this);
  },
  get$hour: function() {
    return $.Primitives_getHours(this);
  },
  get$minute: function() {
    return $.Primitives_getMinutes(this);
  },
  get$second: function() {
    return $.Primitives_getSeconds(this);
  },
  get$millisecond: function() {
    return $.Primitives_getMilliseconds(this);
  },
  DateTime$fromMillisecondsSinceEpoch$2$isUtc: function(millisecondsSinceEpoch, isUtc) {
    if ($.$$gt($.abs(millisecondsSinceEpoch), 8640000000000000) === true)
      throw $.$$throw($.ArgumentError$(millisecondsSinceEpoch));
    if (isUtc == null)
      throw $.$$throw($.ArgumentError$(isUtc));
  },
  DateTime$_now$0: function() {
    $.Primitives_lazyAsJsDate(this);
  },
  $isDateTime: true
};

$$.NullThrownError = {"": "Object;",
  toString$0: function() {
    return "Throw of null.";
  }
};

$$.ArgumentError = {"": "Object;message>",
  toString$0: function() {
    if (!(this.get$message() == null))
      return "Illegal argument(s): " + $.S(this.get$message());
    return "Illegal argument(s)";
  }
};

$$.RangeError = {"": "ArgumentError;message",
  toString$0: function() {
    return "RangeError: " + $.S(this.message);
  }
};

$$.NoSuchMethodError = {"": "Object;_receiver,_memberName,_arguments,_namedArguments,_existingArgumentNames",
  toString$0: function() {
    var t1, t2, t3, t4, actualParameters, i, formalParameters;
    t1 = {};
    t1.sb_0 = $.JsStringBuffer$("");
    t1.i_1 = 0;
    t2 = this._arguments;
    if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.$isJavaScriptIndexingBehavior()))
      return this.toString$0$bailout1(1, t1, t2);
    for (; $.$$lt(t1.i_1, t2.length) === true; t1.i_1 = $.$$add(t1.i_1, 1)) {
      if ($.$$gt(t1.i_1, 0) === true)
        $.add(t1.sb_0, ", ");
      t3 = t1.sb_0;
      t4 = t1.i_1;
      if (t4 !== (t4 | 0))
        throw $.iae(t4);
      if (t4 < 0 || t4 >= t2.length)
        throw $.ioore(t4);
      $.add(t3, $.Error_safeToString(t2[t4]));
    }
    t2 = this._namedArguments;
    if (!(t2 == null))
      $.forEach(t2, new $.NoSuchMethodError_toString_anon(t1));
    t2 = this._existingArgumentNames;
    if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.$isJavaScriptIndexingBehavior()))
      return this.toString$0$bailout1(2, t1, t2);
    actualParameters = $.toString(t1.sb_0);
    t1.sb_0 = $.JsStringBuffer$("");
    for (i = 0; i < t2.length; ++i) {
      if (i > 0)
        $.add(t1.sb_0, ", ");
      t3 = t1.sb_0;
      if (i >= t2.length)
        throw $.ioore(i);
      $.add(t3, t2[i]);
    }
    formalParameters = $.toString(t1.sb_0);
    t2 = this._memberName;
    return "NoSuchMethodError: incorrect number of arguments passed to method named '" + $.S(t2) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Tried calling: " + $.S(t2) + "(" + $.S(actualParameters) + ")\n" + "Found: " + $.S(t2) + "(" + $.S(formalParameters) + ")";
  },
  toString$0$bailout1: function(state0, t1, t2) {
    switch (state0) {
      case 0:
        t1 = {};
        t1.sb_0 = $.JsStringBuffer$("");
        t1.i_1 = 0;
        t2 = this._arguments;
      case 1:
        state0 = 0;
        if (!(t2 == null))
          for (t3 = $.getInterceptor$JSArrayJSString(t2); $.$$lt(t1.i_1, t3.get$length(t2)) === true; t1.i_1 = $.$$add(t1.i_1, 1)) {
            if ($.$$gt(t1.i_1, 0) === true)
              $.add(t1.sb_0, ", ");
            $.add(t1.sb_0, $.Error_safeToString(t3.$index(t2, t1.i_1)));
          }
        t2 = this._namedArguments;
        if (!(t2 == null))
          $.forEach(t2, new $.NoSuchMethodError_toString_anon(t1));
        t2 = this._existingArgumentNames;
      case 2:
        var t3, actualParameters, i, formalParameters;
        state0 = 0;
        if (t2 == null)
          return "NoSuchMethodError : method not found: '" + $.S(this._memberName) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Arguments: [" + $.S(t1.sb_0) + "]";
        else {
          actualParameters = $.toString(t1.sb_0);
          t1.sb_0 = $.JsStringBuffer$("");
          for (t3 = $.getInterceptor$JSArrayJSString(t2), i = 0; $.CONSTANT5.$lt(i, t3.get$length(t2)); ++i) {
            if (i > 0)
              $.add(t1.sb_0, ", ");
            $.add(t1.sb_0, t3.$index(t2, i));
          }
          formalParameters = $.toString(t1.sb_0);
          t2 = this._memberName;
          return "NoSuchMethodError: incorrect number of arguments passed to method named '" + $.S(t2) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Tried calling: " + $.S(t2) + "(" + $.S(actualParameters) + ")\n" + "Found: " + $.S(t2) + "(" + $.S(formalParameters) + ")";
        }
    }
  }
};

$$.UnsupportedError = {"": "Object;message>",
  toString$0: function() {
    return "Unsupported operation: " + $.S(this.get$message());
  }
};

$$.UnimplementedError = {"": "Object;message>",
  toString$0: function() {
    var t1 = this.message;
    return !(t1 == null) ? "UnimplementedError: " + $.S(t1) : "UnimplementedError";
  }
};

$$.StateError = {"": "Object;message>",
  toString$0: function() {
    return "Bad state: " + $.S(this.get$message());
  }
};

$$.ConcurrentModificationError = {"": "Object;modifiedObject",
  toString$0: function() {
    var t1 = this.modifiedObject;
    if (t1 == null)
      return "Concurrent modification during iteration.";
    return "Concurrent modification during iteration: " + $.S($.Error_safeToString(t1)) + ".";
  }
};

$$.StackOverflowError = {"": "Object;",
  toString$0: function() {
    return "Stack Overflow";
  }
};

$$.RuntimeError = {"": "Object;message",
  toString$0: function() {
    return "RuntimeError: " + this.message;
  }
};

$$._ExceptionImplementation = {"": "Object;message",
  toString$0: function() {
    var t1 = this.message;
    if (t1 == null)
      return "Exception";
    return "Exception: " + $.S(t1);
  },
  $isException: true
};

$$.FormatException = {"": "Object;message",
  toString$0: function() {
    return "FormatException: " + $.S(this.message);
  },
  $isException: true
};

$$.IllegalJSRegExpException = {"": "FormatException;message"};

$$.Iterable = {"": "Object;",
  map$1: function(f) {
    return $.MappedIterable$(this, f);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  contains$1: function(element) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0() === true;)
      if ($.$$eq(t1.get$current(), element) === true)
        return true;
    return false;
  },
  get$contains: function() {
    return new $.BoundClosure$1(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
  },
  reduce$2: function(initialValue, combine) {
    var t1, value;
    for (t1 = this.get$iterator(), value = initialValue; t1.moveNext$0() === true;)
      value = combine.call$2(value, t1.get$current());
    return value;
  },
  join$1: function(separator) {
    var iterator, buffer;
    if (typeof separator !== "string")
      return this.join$1$bailout(1, separator);
    iterator = this.get$iterator();
    if (iterator.moveNext$0() !== true)
      return "";
    buffer = $.JsStringBuffer$("");
    if (separator === "")
      do
        buffer.add$1($.S(iterator.get$current()));
      while (iterator.moveNext$0() === true);
    else {
      buffer.add$1($.S(iterator.get$current()));
      for (; iterator.moveNext$0() === true;) {
        buffer.add$1(separator);
        buffer.add$1($.S(iterator.get$current()));
      }
    }
    return buffer.toString$0();
  },
  join$1$bailout: function(state0, separator) {
    var iterator, buffer;
    iterator = this.get$iterator();
    if (iterator.moveNext$0() !== true)
      return "";
    buffer = $.JsStringBuffer$("");
    if (separator == null || $.$$eq(separator, "") === true)
      do
        buffer.add$1($.S(iterator.get$current()));
      while (iterator.moveNext$0() === true);
    else {
      buffer.add$1($.S(iterator.get$current()));
      for (; iterator.moveNext$0() === true;) {
        buffer.add$1(separator);
        buffer.add$1($.S(iterator.get$current()));
      }
    }
    return buffer.toString$0();
  },
  any$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0() === true;)
      if (f.call$1(t1.get$current()) === true)
        return true;
    return false;
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.HashSet_HashSet$from(this);
  },
  get$length: function() {
    var it, count;
    it = this.get$iterator();
    for (count = 0; it.moveNext$0() === true;)
      ++count;
    return count;
  },
  get$isEmpty: function() {
    return this.get$iterator().moveNext$0() !== true;
  },
  get$first: function() {
    var it = this.get$iterator();
    if (it.moveNext$0() !== true)
      throw $.$$throw($.StateError$("No elements"));
    return it.get$current();
  },
  get$last: function() {
    var it, result;
    it = this.get$iterator();
    if (it.moveNext$0() !== true)
      throw $.$$throw($.StateError$("No elements"));
    do
      result = it.get$current();
    while (it.moveNext$0() === true);
    return result;
  },
  firstMatching$2$orElse: function(test, orElse) {
    var t1, t2;
    for (t1 = this.get$iterator(); t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      if (test.call$1(t2) === true)
        return t2;
    }
    if (!(orElse == null))
      return orElse.call$0();
    throw $.$$throw($.StateError$("No matching element"));
  },
  singleMatching$1: function(test) {
    var t1, result, foundMatching, result0;
    for (t1 = this.get$iterator(), result = null, foundMatching = false; t1.moveNext$0() === true;) {
      result0 = t1.get$current();
      if (test.call$1(result0) === true) {
        if (foundMatching)
          throw $.$$throw($.StateError$("More than one matching element"));
        result = result0;
        foundMatching = true;
      }
    }
    if (foundMatching)
      return result;
    throw $.$$throw($.StateError$("No matching element"));
  },
  elementAt$1: function(index) {
    var t1, remaining, t2;
    if (typeof index !== "number")
      return this.elementAt$1$bailout(1, index);
    if (!(typeof index === "number" && Math.floor(index) === index) || index < 0)
      throw $.$$throw($.RangeError$value(index));
    for (t1 = this.get$iterator(), remaining = index; t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      if (remaining === 0)
        return t2;
      --remaining;
    }
    throw $.$$throw($.RangeError$value(index));
  },
  elementAt$1$bailout: function(state0, index) {
    var t1, remaining, t2, t3;
    if (!(typeof index === "number" && Math.floor(index) === index) || index < 0)
      throw $.$$throw($.RangeError$value(index));
    for (t1 = this.get$iterator(), remaining = index; t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      t3 = $.getInterceptor(remaining);
      if (t3.$eq(remaining, 0) === true)
        return t2;
      remaining = t3.$sub(remaining, 1);
    }
    throw $.$$throw($.RangeError$value(index));
  }
};

$$.Iterator = {"": "Object;"};

$$.Object = {"": ";",
  $eq: function(other) {
    if (other == null)
      return false;
    return this === other;
  },
  get$hashCode: function() {
    return $.Primitives_objectHashCode(this);
  },
  toString$0: function() {
    return "Instance of '" + $.S($.Primitives_objectTypeName(this)) + "'";
  }
};

$$.ObjectInterceptor = {"": "Object;",
  $mod: function(receiver, a0) {
    return receiver.$mod(a0);
  },
  $and: function(receiver, a0) {
    return receiver.$and(a0);
  },
  $mul: function(receiver, a0) {
    return receiver.$mul(a0);
  },
  $add: function(receiver, a0) {
    return receiver.$add(a0);
  },
  $sub: function(receiver, a0) {
    return receiver.$sub(a0);
  },
  $div: function(receiver, a0) {
    return receiver.$div(a0);
  },
  $lt: function(receiver, a0) {
    return receiver.$lt(a0);
  },
  $shl: function(receiver, a0) {
    return receiver.$shl(a0);
  },
  $le: function(receiver, a0) {
    return receiver.$le(a0);
  },
  $eq: function(receiver, a0) {
    return receiver.$eq(a0);
  },
  $gt: function(receiver, a0) {
    return receiver.$gt(a0);
  },
  $ge: function(receiver, a0) {
    return receiver.$ge(a0);
  },
  $shr: function(receiver, a0) {
    return receiver.$shr(a0);
  },
  abs$0: function(receiver) {
    return receiver.abs$0();
  },
  get$add: function(receiver) {
    return receiver.get$add();
  },
  add$1: function(receiver, a0) {
    return receiver.add$1(a0);
  },
  addAll$1: function(receiver, a0) {
    return receiver.addAll$1(a0);
  },
  addLast$1: function(receiver, a0) {
    return receiver.addLast$1(a0);
  },
  allMatches$1: function(receiver, a0) {
    return receiver.allMatches$1(a0);
  },
  any$1: function(receiver, a0) {
    return receiver.any$1(a0);
  },
  ceil$0: function(receiver) {
    return receiver.ceil$0();
  },
  charCodeAt$1: function(receiver, a0) {
    return receiver.charCodeAt$1(a0);
  },
  clear$0: function(receiver) {
    return receiver.clear$0();
  },
  codeUnitAt$1: function(receiver, a0) {
    return receiver.codeUnitAt$1(a0);
  },
  compareTo$1: function(receiver, a0) {
    return receiver.compareTo$1(a0);
  },
  concat$1: function(receiver, a0) {
    return receiver.concat$1(a0);
  },
  get$contains: function(receiver) {
    return receiver.get$contains();
  },
  contains$1: function(receiver, a0) {
    return receiver.contains$1(a0);
  },
  contains$2: function(receiver, a0, a1) {
    return receiver.contains$2(a0, a1);
  },
  elementAt$1: function(receiver, a0) {
    return receiver.elementAt$1(a0);
  },
  endsWith$1: function(receiver, a0) {
    return receiver.endsWith$1(a0);
  },
  get$first: function(receiver) {
    return receiver.get$first();
  },
  firstMatching$2$orElse: function(receiver, a0, a1) {
    return receiver.firstMatching$2$orElse(a0, a1);
  },
  floor$0: function(receiver) {
    return receiver.floor$0();
  },
  forEach$1: function(receiver, a0) {
    return receiver.forEach$1(a0);
  },
  getRange$2: function(receiver, a0, a1) {
    return receiver.getRange$2(a0, a1);
  },
  get$hashCode: function(receiver) {
    return receiver.get$hashCode();
  },
  indexOf$1: function(receiver, a0) {
    return receiver.indexOf$1(a0);
  },
  indexOf$2: function(receiver, a0, a1) {
    return receiver.indexOf$2(a0, a1);
  },
  insertRange$3: function(receiver, a0, a1, a2) {
    return receiver.insertRange$3(a0, a1, a2);
  },
  get$isEmpty: function(receiver) {
    return receiver.get$isEmpty();
  },
  get$isInfinite: function(receiver) {
    return receiver.get$isInfinite();
  },
  get$isNaN: function(receiver) {
    return receiver.get$isNaN();
  },
  get$isNegative: function(receiver) {
    return receiver.get$isNegative();
  },
  join$1: function(receiver, a0) {
    return receiver.join$1(a0);
  },
  get$last: function(receiver) {
    return receiver.get$last();
  },
  get$length: function(receiver) {
    return receiver.get$length();
  },
  set$length: function(receiver, value) {
    return receiver.set$length(value);
  },
  map$1: function(receiver, a0) {
    return receiver.map$1(a0);
  },
  remove$1: function(receiver, a0) {
    return receiver.remove$1(a0);
  },
  removeAll$1: function(receiver, a0) {
    return receiver.removeAll$1(a0);
  },
  removeLast$0: function(receiver) {
    return receiver.removeLast$0();
  },
  removeMatching$1: function(receiver, a0) {
    return receiver.removeMatching$1(a0);
  },
  removeRange$2: function(receiver, a0, a1) {
    return receiver.removeRange$2(a0, a1);
  },
  replaceAll$2: function(receiver, a0, a1) {
    return receiver.replaceAll$2(a0, a1);
  },
  round$0: function(receiver) {
    return receiver.round$0();
  },
  singleMatching$1: function(receiver, a0) {
    return receiver.singleMatching$1(a0);
  },
  sort$1: function(receiver, a0) {
    return receiver.sort$1(a0);
  },
  split$1: function(receiver, a0) {
    return receiver.split$1(a0);
  },
  startsWith$1: function(receiver, a0) {
    return receiver.startsWith$1(a0);
  },
  substring$1: function(receiver, a0) {
    return receiver.substring$1(a0);
  },
  substring$2: function(receiver, a0, a1) {
    return receiver.substring$2(a0, a1);
  },
  toInt$0: function(receiver) {
    return receiver.toInt$0();
  },
  toList$0: function(receiver) {
    return receiver.toList$0();
  },
  toLowerCase$0: function(receiver) {
    return receiver.toLowerCase$0();
  },
  toRadixString$1: function(receiver, a0) {
    return receiver.toRadixString$1(a0);
  },
  toSet$0: function(receiver) {
    return receiver.toSet$0();
  },
  toString$0: function(receiver) {
    return receiver.toString$0();
  },
  toStringAsFixed$1: function(receiver, a0) {
    return receiver.toStringAsFixed$1(a0);
  },
  trim$0: function(receiver) {
    return receiver.trim$0();
  },
  truncate$0: function(receiver) {
    return receiver.truncate$0();
  },
  where$1: function(receiver, a0) {
    return receiver.where$1(a0);
  },
  $index: function(receiver, a0) {
    return receiver.$index(a0);
  },
  $indexSet: function(receiver, a0, a1) {
    return receiver.$indexSet(a0, a1);
  },
  $xor: function(receiver, a0) {
    return receiver.$xor(a0);
  },
  get$iterator: function(receiver) {
    return receiver.get$iterator();
  },
  $negate: function(receiver) {
    return receiver.$negate();
  },
  $or: function(receiver, a0) {
    return receiver.$or(a0);
  },
  $tdiv: function(receiver, a0) {
    return receiver.$tdiv(a0);
  }
};

$$.JSFunction = {"": "Object;",
  toString$0: function(receiver) {
    return "Closure";
  },
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSBool = {"": "Object;",
  toString$0: function(receiver) {
    return String(receiver);
  },
  get$hashCode: function(receiver) {
    return receiver ? 519018 : 218159;
  },
  $isbool: true,
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSNull = {"": "Object;",
  toString$0: function(receiver) {
    return "null";
  },
  get$hashCode: function(receiver) {
    return 0;
  },
  $eq: function(receiver, a) {
    return receiver == a;
  }
};

$$.JSArray = {"": "Object;",
  add$1: function(receiver, value) {
    $.checkGrowable(receiver, "add");
    receiver.push(value);
  },
  get$add: function(receiver) {
    return new $.BoundClosure$i1(this, "add$1", receiver);
  },
  removeLast$0: function(receiver) {
    $.checkGrowable(receiver, "removeLast");
    if (receiver.length === 0)
      throw $.$$throw($.RangeError$value(-1));
    return receiver.pop();
  },
  remove$1: function(receiver, element) {
    var i;
    $.checkGrowable(receiver, "remove");
    for (i = 0; i < receiver.length; ++i)
      if ($.$$eq(receiver[i], element) === true) {
        receiver.splice(i, 1);
        return;
      }
  },
  removeAll$1: function(receiver, elements) {
    $.IterableMixinWorkaround_removeAllList(receiver, elements);
  },
  removeMatching$1: function(receiver, test) {
    $.IterableMixinWorkaround_removeMatchingList(receiver, test);
  },
  where$1: function(receiver, f) {
    return $.WhereIterable$(receiver, f);
  },
  addAll$1: function(receiver, collection) {
    var t1;
    for (t1 = $.iterator(collection); t1.moveNext$0() === true;)
      this.add$1(receiver, t1.get$current());
  },
  addLast$1: function(receiver, value) {
    $.checkGrowable(receiver, "addLast");
    receiver.push(value);
  },
  clear$0: function(receiver) {
    this.set$length(receiver, 0);
  },
  forEach$1: function(receiver, f) {
    var t1;
    for (t1 = this.get$iterator(receiver); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  map$1: function(receiver, f) {
    return $.MappedListIterable$(receiver, f, 0, null);
  },
  join$1: function(receiver, separator) {
    var list, i, t1;
    if (separator == null)
      separator = "";
    list = $.List_List(receiver.length);
    for (i = 0; i < receiver.length; ++i) {
      t1 = $.S(receiver[i]);
      if (i >= list.length)
        throw $.ioore(i);
      list[i] = t1;
    }
    return list.join(separator);
  },
  firstMatching$2$orElse: function(receiver, test, orElse) {
    return $.IterableMixinWorkaround_firstMatching(receiver, test, orElse);
  },
  singleMatching$1: function(receiver, test) {
    return $.IterableMixinWorkaround_singleMatching(receiver, test);
  },
  elementAt$1: function(receiver, index) {
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= receiver.length)
      throw $.ioore(index);
    return receiver[index];
  },
  getRange$2: function(receiver, start, $length) {
    var t1, end;
    if (0 === $length)
      return [];
    $.checkNull(start);
    $.checkNull($length);
    t1 = $length < 0;
    if (t1)
      throw $.$$throw($.ArgumentError$($length));
    if (start < 0)
      throw $.$$throw($.RangeError$value(start));
    end = start + $length;
    if (end > receiver.length)
      throw $.$$throw($.RangeError$value($length));
    if (t1)
      throw $.$$throw($.ArgumentError$($length));
    return receiver.slice(start, end);
  },
  insertRange$3: function(receiver, start, $length, initialValue) {
    return $.listInsertRange(receiver, start, $length, initialValue);
  },
  get$first: function(receiver) {
    if (receiver.length > 0)
      return receiver[0];
    throw $.$$throw($.StateError$("No elements"));
  },
  get$last: function(receiver) {
    var t1 = receiver.length;
    if (t1 > 0)
      return receiver[t1 - 1];
    throw $.$$throw($.StateError$("No elements"));
  },
  removeRange$2: function(receiver, start, $length) {
    var receiverLength, t1, t2;
    $.checkGrowable(receiver, "removeRange");
    if ($length === 0)
      return;
    $.checkNull(start);
    $.checkNull($length);
    if ($length < 0)
      throw $.$$throw($.ArgumentError$($length));
    receiverLength = receiver.length;
    if (start < 0 || start >= receiverLength)
      throw $.$$throw($.RangeError$value(start));
    t1 = start + $length;
    if (t1 > receiverLength)
      throw $.$$throw($.RangeError$value(t1));
    t2 = receiverLength - $length;
    $.Arrays_copy(receiver, t1, receiver, start, t2 - start);
    this.set$length(receiver, t2);
  },
  any$1: function(receiver, f) {
    return $.IterableMixinWorkaround_any(receiver, f);
  },
  sort$1: function(receiver, compare) {
    $.checkMutable(receiver, "sort");
    $.IterableMixinWorkaround_sortList(receiver, compare);
  },
  indexOf$2: function(receiver, element, start) {
    if (!(typeof start === "number" && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    return $.Arrays_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  contains$1: function(receiver, other) {
    var t1, i;
    for (t1 = $.getInterceptor(other), i = 0; i < receiver.length; ++i)
      if (t1.$eq(other, receiver[i]) === true)
        return true;
    return false;
  },
  get$contains: function(receiver) {
    return new $.BoundClosure$i1(this, "contains$1", receiver);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  toString$0: function(receiver) {
    return $.ToString_collectionToString(receiver);
  },
  toList$0: function(receiver) {
    return $.List_List$from(receiver);
  },
  toSet$0: function(receiver) {
    return $.HashSet_HashSet$from(receiver);
  },
  get$iterator: function(receiver) {
    return $.ListIterator$(receiver);
  },
  get$hashCode: function(receiver) {
    return $.Primitives_objectHashCode(receiver);
  },
  get$length: function(receiver) {
    return receiver.length;
  },
  set$length: function(receiver, newLength) {
    if (!(typeof newLength === "number" && Math.floor(newLength) === newLength))
      throw $.$$throw($.ArgumentError$(newLength));
    if (newLength < 0)
      throw $.$$throw($.RangeError$value(newLength));
    $.checkGrowable(receiver, "set length");
    receiver.length = newLength;
  },
  $index: function(receiver, index) {
    if (!(typeof index === "number" && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index >= receiver.length || index < 0)
      throw $.$$throw($.RangeError$value(index));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    $.checkMutable(receiver, "indexed set");
    if (!(typeof index === "number" && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index >= receiver.length || index < 0)
      throw $.$$throw($.RangeError$value(index));
    receiver[index] = value;
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSNumber = {"": "Object;",
  compareTo$1: function(receiver, b) {
    var bIsNegative;
    if (!(typeof b === "number"))
      throw $.$$throw($.ArgumentError$(b));
    if (receiver < b)
      return -1;
    else if (receiver > b)
      return 1;
    else if (receiver === b) {
      if (receiver === 0) {
        bIsNegative = this.get$isNegative(b);
        if ($.$$eq(this.get$isNegative(receiver), bIsNegative) === true)
          return 0;
        if (this.get$isNegative(receiver) === true)
          return -1;
        return 1;
      }
      return 0;
    } else if (this.get$isNaN(receiver) === true) {
      if (this.get$isNaN(b) === true)
        return 0;
      return 1;
    } else
      return -1;
  },
  get$isNegative: function(receiver) {
    return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
  },
  get$isNaN: function(receiver) {
    return isNaN(receiver);
  },
  abs$0: function(receiver) {
    return Math.abs(receiver);
  },
  toInt$0: function(receiver) {
    var truncated;
    if (this.get$isNaN(receiver) === true)
      throw $.$$throw($.UnsupportedError$("NaN"));
    if (this.get$isInfinite(receiver) === true)
      throw $.$$throw($.UnsupportedError$("Infinity"));
    truncated = this.truncate$0(receiver);
    return truncated == -0.0 ? 0 : truncated;
  },
  ceil$0: function(receiver) {
    return Math.ceil(receiver);
  },
  floor$0: function(receiver) {
    return Math.floor(receiver);
  },
  get$isInfinite: function(receiver) {
    return receiver == Infinity || receiver == -Infinity;
  },
  round$0: function(receiver) {
    if (receiver < 0)
      return -Math.round(-receiver);
    else
      return Math.round(receiver);
  },
  truncate$0: function(receiver) {
    return receiver < 0 ? this.ceil$0(receiver) : this.floor$0(receiver);
  },
  toStringAsFixed$1: function(receiver, fractionDigits) {
    var result;
    $.checkNum(fractionDigits);
    if (fractionDigits < 0 || fractionDigits > 20)
      throw $.$$throw($.RangeError$(fractionDigits));
    result = receiver.toFixed(fractionDigits);
    if (receiver === 0 && this.get$isNegative(receiver) === true)
      return "-" + result;
    return result;
  },
  toRadixString$1: function(receiver, radix) {
    $.checkNum(radix);
    if (radix < 2 || radix > 36)
      throw $.$$throw($.RangeError$(radix));
    return receiver.toString(radix);
  },
  toString$0: function(receiver) {
    if (receiver === 0 && (1 / receiver) < 0)
      return "-0.0";
    else
      return String(receiver);
  },
  get$hashCode: function(receiver) {
    return receiver & 0x1FFFFFFF;
  },
  $negate: function(receiver) {
    return -receiver;
  },
  $add: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver + other;
  },
  $sub: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver - other;
  },
  $div: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver / other;
  },
  $mul: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver * other;
  },
  $mod: function(receiver, other) {
    var result = receiver % other;
    if (result === 0)
      return 0;
    if (result > 0)
      return result;
    if (other < 0)
      return result - other;
    else
      return result + other;
  },
  $tdiv: function(receiver, other) {
    return this.truncate$0(receiver / other);
  },
  $shl: function(receiver, other) {
    if (other < 0)
      throw $.$$throw($.ArgumentError$(other));
    if (other > 31)
      return 0;
    return (receiver << other) >>> 0;
  },
  $shr: function(receiver, other) {
    if (other < 0)
      throw $.$$throw($.ArgumentError$(other));
    if (receiver > 0) {
      if (other > 31)
        return 0;
      return receiver >>> other;
    }
    if (other > 31)
      other = 31;
    return (receiver >> other) >>> 0;
  },
  $and: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return (receiver & other) >>> 0;
  },
  $or: function(receiver, other) {
    return (receiver | other) >>> 0;
  },
  $xor: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return (receiver ^ other) >>> 0;
  },
  $lt: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver < other;
  },
  $gt: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver > other;
  },
  $le: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver <= other;
  },
  $ge: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver >= other;
  },
  $isJSNumber: true,
  $isnum: true,
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSInt = {"": "JSNumber;", $is$int: true, $isnum: true,
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSDouble = {"": "JSNumber;", $is$double: true, $isnum: true,
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSString = {"": "Object;",
  charCodeAt$1: function(receiver, index) {
    return this.codeUnitAt$1(receiver, index);
  },
  codeUnitAt$1: function(receiver, index) {
    if (index < 0)
      throw $.$$throw($.RangeError$value(index));
    if (index >= receiver.length)
      throw $.$$throw($.RangeError$value(index));
    return receiver.charCodeAt(index);
  },
  allMatches$1: function(receiver, str) {
    $.checkString(str);
    return $.allMatchesInStringUnchecked(receiver, str);
  },
  concat$1: function(receiver, other) {
    if (!(typeof other === "string"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver + other;
  },
  endsWith$1: function(receiver, other) {
    var otherLength, t1;
    $.checkString(other);
    otherLength = other.length;
    t1 = receiver.length;
    if (otherLength > t1)
      return false;
    return other === this.substring$1(receiver, t1 - otherLength);
  },
  replaceAll$2: function(receiver, from, to) {
    $.checkString(to);
    return $.stringReplaceAllUnchecked(receiver, from, to);
  },
  split$1: function(receiver, pattern) {
    $.checkNull(pattern);
    return receiver.split(pattern);
  },
  startsWith$1: function(receiver, other) {
    var otherLength;
    $.checkString(other);
    otherLength = other.length;
    if (otherLength > receiver.length)
      return false;
    return other == receiver.substring(0, otherLength);
  },
  substring$2: function(receiver, startIndex, endIndex) {
    var t1;
    $.checkNum(startIndex);
    if (endIndex == null)
      endIndex = receiver.length;
    $.checkNum(endIndex);
    t1 = $.getInterceptor$JSNumber(startIndex);
    if (t1.$lt(startIndex, 0) === true)
      throw $.$$throw($.RangeError$value(startIndex));
    if (t1.$gt(startIndex, endIndex) === true)
      throw $.$$throw($.RangeError$value(startIndex));
    if ($.$$gt(endIndex, receiver.length) === true)
      throw $.$$throw($.RangeError$value(endIndex));
    return receiver.substring(startIndex, endIndex);
  },
  substring$1: function($receiver, startIndex) {
    return this.substring$2($receiver, startIndex, null);
  },
  toLowerCase$0: function(receiver) {
    return receiver.toLowerCase();
  },
  trim$0: function(receiver) {
    return receiver.trim();
  },
  indexOf$2: function(receiver, other, start) {
    $.checkNull(other);
    if (!(typeof start === "number" && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    if (!(typeof other === "string"))
      throw $.$$throw($.ArgumentError$(other));
    if (start < 0)
      return -1;
    return receiver.indexOf(other, start);
  },
  indexOf$1: function($receiver, other) {
    return this.indexOf$2($receiver, other, 0);
  },
  contains$2: function(receiver, other, startIndex) {
    $.checkNull(other);
    return $.stringContainsUnchecked(receiver, other, startIndex);
  },
  contains$1: function($receiver, other) {
    return this.contains$2($receiver, other, 0);
  },
  get$contains: function(receiver) {
    return new $.Bound_contains_JSString(this, "contains$2", receiver);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  compareTo$1: function(receiver, other) {
    var t1;
    if (!(typeof other === "string"))
      throw $.$$throw($.ArgumentError$(other));
    if (receiver === other)
      t1 = 0;
    else
      t1 = receiver < other ? -1 : 1;
    return t1;
  },
  toString$0: function(receiver) {
    return receiver;
  },
  get$hashCode: function(receiver) {
    var hash, i, hash0, hash1;
    for (hash = 0, i = 0; i < receiver.length; ++i, hash = hash1) {
      hash0 = 536870911 & hash + receiver.charCodeAt(i);
      hash1 = 536870911 & hash0 + ((524287 & hash0) << 10 >>> 0);
      hash1 = hash1 ^ (hash1 >> 6);
    }
    hash0 = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
    hash0 = hash0 ^ (hash0 >> 11);
    return 536870911 & hash0 + ((16383 & hash0) << 15 >>> 0);
  },
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    if (!(typeof index === "number" && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index >= receiver.length || index < 0)
      throw $.$$throw($.RangeError$value(index));
    return receiver[index];
  },
  $isString: true,
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$._HashMapImpl = {"": "Object;_keys>,_values>,_loadLimit,_numberOfEntries,_numberOfDeleted",
  _probeForAdding$1: function(key) {
    var t1, t3, hash, numberOfProbes, insertionIndex, existingKey, numberOfProbes0;
    if (key == null)
      throw $.$$throw($.ArgumentError$(null));
    t1 = $.hashCode(key);
    t3 = this._keys.length;
    if (t1 !== (t1 | 0))
      return this._probeForAdding$1$bailout(1, key, t1);
    hash = (t1 & t3 - 1) >>> 0;
    for (numberOfProbes = 1, insertionIndex = -1; true; numberOfProbes = numberOfProbes0) {
      t1 = this._keys;
      if (hash < 0 || hash >= t1.length)
        throw $.ioore(hash);
      existingKey = t1[hash];
      if (existingKey == null) {
        if (insertionIndex < 0)
          return hash;
        return insertionIndex;
      } else if ($.$$eq(existingKey, key) === true)
        return hash;
      else if (insertionIndex < 0 && existingKey === $.CONSTANT3)
        insertionIndex = hash;
      numberOfProbes0 = numberOfProbes + 1;
      hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
      if (hash !== (hash | 0))
        return this._probeForAdding$1$bailout(2, key, 0, hash, numberOfProbes0, insertionIndex);
    }
  },
  _probeForAdding$1$bailout: function(state0, key, t1, hash, numberOfProbes0, insertionIndex) {
    switch (state0) {
      case 0:
        if (key == null)
          throw $.$$throw($.ArgumentError$(null));
        t1 = $.hashCode(key);
      case 1:
        state0 = 0;
        hash = $.$$and(t1, this._keys.length - 1);
        numberOfProbes = 1;
        insertionIndex = -1;
      case 2:
        var numberOfProbes, existingKey;
        L0:
          while (true)
            switch (state0) {
              case 0:
                if (!true)
                  break L0;
                t1 = this._keys;
                if (hash !== (hash | 0))
                  throw $.iae(hash);
                if (hash < 0 || hash >= t1.length)
                  throw $.ioore(hash);
                existingKey = t1[hash];
                if (existingKey == null) {
                  if (insertionIndex < 0)
                    return hash;
                  return insertionIndex;
                } else if ($.$$eq(existingKey, key) === true)
                  return hash;
                else if (insertionIndex < 0 && existingKey === $.CONSTANT3)
                  insertionIndex = hash;
                numberOfProbes0 = numberOfProbes + 1;
                hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
              case 2:
                state0 = 0;
                numberOfProbes = numberOfProbes0;
            }
    }
  },
  _probeForLookup$1: function(key) {
    var hash, numberOfProbes, t1, existingKey, numberOfProbes0;
    if (key == null)
      throw $.$$throw($.ArgumentError$(null));
    hash = $.$$and($.hashCode(key), this._keys.length - 1);
    if (hash !== (hash | 0))
      return this._probeForLookup$1$bailout(1, key, hash);
    for (numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
      t1 = this._keys;
      if (hash !== (hash | 0))
        throw $.iae(hash);
      if (hash < 0 || hash >= t1.length)
        throw $.ioore(hash);
      existingKey = t1[hash];
      if (existingKey == null)
        return -1;
      if ($.$$eq(existingKey, key) === true)
        return hash;
      numberOfProbes0 = numberOfProbes + 1;
      hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
    }
  },
  _probeForLookup$1$bailout: function(state0, key, hash) {
    var numberOfProbes, t1, existingKey, numberOfProbes0;
    for (numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
      t1 = this._keys;
      if (hash !== (hash | 0))
        throw $.iae(hash);
      if (hash < 0 || hash >= t1.length)
        throw $.ioore(hash);
      existingKey = t1[hash];
      if (existingKey == null)
        return -1;
      if ($.$$eq(existingKey, key) === true)
        return hash;
      numberOfProbes0 = numberOfProbes + 1;
      hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
    }
  },
  _ensureCapacity$0: function() {
    var newNumberOfEntries, capacity, t1;
    newNumberOfEntries = $.$$add(this._numberOfEntries, 1);
    if ($.$$ge(newNumberOfEntries, this._loadLimit) === true) {
      this._grow$1(this._keys.length * 2);
      return;
    }
    capacity = this._keys.length;
    if (typeof newNumberOfEntries !== "number")
      throw $.iae(newNumberOfEntries);
    t1 = this._numberOfDeleted;
    if (t1 > capacity - newNumberOfEntries - t1)
      this._grow$1(capacity);
  },
  _grow$1: function(newCapacity) {
    var capacity, oldKeys, oldValues, i, key, value, newIndex, t1;
    capacity = this._keys.length;
    this._loadLimit = $.$$tdiv($.$$mul(newCapacity, 3), 4);
    oldKeys = this._keys;
    oldValues = this._values;
    this._keys = $.List_List$fixedLength(newCapacity, null);
    this._values = $.List_List$fixedLength(newCapacity, null);
    for (i = 0; i < capacity; ++i) {
      if (i >= oldKeys.length)
        throw $.ioore(i);
      key = oldKeys[i];
      if (key == null || key === $.CONSTANT3)
        continue;
      if (i >= oldValues.length)
        throw $.ioore(i);
      value = oldValues[i];
      newIndex = this._probeForAdding$1(key);
      t1 = this._keys;
      if (newIndex !== (newIndex | 0))
        throw $.iae(newIndex);
      if (newIndex < 0 || newIndex >= t1.length)
        throw $.ioore(newIndex);
      t1[newIndex] = key;
      t1 = this._values;
      if (newIndex >= t1.length)
        throw $.ioore(newIndex);
      t1[newIndex] = value;
    }
    this._numberOfDeleted = 0;
  },
  clear$0: function() {
    var t1, $length, t2, t3, i;
    this._numberOfEntries = 0;
    this._numberOfDeleted = 0;
    t1 = this._keys;
    $length = t1.length;
    for (t2 = this._values, t3 = t2.length, i = 0; i < $length; ++i) {
      t1[i] = null;
      if (i >= t3)
        throw $.ioore(i);
      t2[i] = null;
    }
  },
  $indexSet: function(key, value) {
    var index, t1;
    this._ensureCapacity$0();
    index = this._probeForAdding$1(key);
    t1 = this._keys;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    t1 = t1[index];
    if (t1 == null || t1 === $.CONSTANT3) {
      t1 = this._numberOfEntries;
      if (typeof t1 !== "number")
        return this.$$indexSet$bailout(1, key, value, t1, index);
      this._numberOfEntries = t1 + 1;
    }
    t1 = this._keys;
    if (index >= t1.length)
      throw $.ioore(index);
    t1[index] = key;
    t1 = this._values;
    if (index >= t1.length)
      throw $.ioore(index);
    t1[index] = value;
  },
  $$indexSet$bailout: function(state0, key, value, t1, index) {
    switch (state0) {
      case 0:
        this._ensureCapacity$0();
        index = this._probeForAdding$1(key);
        t1 = this._keys;
        if (index !== (index | 0))
          throw $.iae(index);
        if (index < 0 || index >= t1.length)
          throw $.ioore(index);
        t1 = t1[index];
      case 1:
        if (state0 === 1 || state0 === 0 && (t1 == null || t1 === $.CONSTANT3))
          switch (state0) {
            case 0:
              t1 = this._numberOfEntries;
            case 1:
              state0 = 0;
              this._numberOfEntries = $.$$add(t1, 1);
          }
        t1 = this._keys;
        if (index >= t1.length)
          throw $.ioore(index);
        t1[index] = key;
        t1 = this._values;
        if (index >= t1.length)
          throw $.ioore(index);
        t1[index] = value;
    }
  },
  $index: function(key) {
    var index, t1;
    index = this._probeForLookup$1(key);
    if (typeof index !== "number")
      return this.$$index$bailout(1, index);
    if (index < 0)
      return;
    t1 = this._values;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  $$index$bailout: function(state0, index) {
    var t1;
    if ($.$$lt(index, 0) === true)
      return;
    t1 = this._values;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  putIfAbsent$2: function(key, ifAbsent) {
    var index, t1, value;
    index = this._probeForLookup$1(key);
    if (typeof index !== "number")
      return this.putIfAbsent$2$bailout(1, key, ifAbsent, index);
    if (index >= 0) {
      t1 = this._values;
      if (index !== (index | 0))
        throw $.iae(index);
      if (index < 0 || index >= t1.length)
        throw $.ioore(index);
      return t1[index];
    }
    value = ifAbsent.call$0();
    this.$indexSet(key, value);
    return value;
  },
  putIfAbsent$2$bailout: function(state0, key, ifAbsent, index) {
    var t1, value;
    if ($.$$ge(index, 0) === true) {
      t1 = this._values;
      if (index !== (index | 0))
        throw $.iae(index);
      if (index < 0 || index >= t1.length)
        throw $.ioore(index);
      return t1[index];
    }
    value = ifAbsent.call$0();
    this.$indexSet(key, value);
    return value;
  },
  remove$1: function(key) {
    var index, t1, t3, value;
    index = this._probeForLookup$1(key);
    if (typeof index !== "number")
      return this.remove$1$bailout(1, index);
    if (index >= 0) {
      t1 = this._numberOfEntries;
      if (typeof t1 !== "number")
        return this.remove$1$bailout(2, index, t1);
      this._numberOfEntries = t1 - 1;
      t3 = this._values;
      if (index !== (index | 0))
        throw $.iae(index);
      if (index < 0 || index >= t3.length)
        throw $.ioore(index);
      value = t3[index];
      t3[index] = null;
      t3 = this._keys;
      if (index >= t3.length)
        throw $.ioore(index);
      t3[index] = $.CONSTANT3;
      this._numberOfDeleted = this._numberOfDeleted + 1;
      return value;
    }
    return;
  },
  remove$1$bailout: function(state0, index, t1) {
    switch (state0) {
      case 0:
        index = this._probeForLookup$1(key);
      case 1:
        state0 = 0;
      case 2:
        var t3, value;
        if (state0 === 2 || state0 === 0 && $.$$ge(index, 0) === true)
          switch (state0) {
            case 0:
              t1 = this._numberOfEntries;
            case 2:
              state0 = 0;
              this._numberOfEntries = $.$$sub(t1, 1);
              t3 = this._values;
              if (index !== (index | 0))
                throw $.iae(index);
              if (index < 0 || index >= t3.length)
                throw $.ioore(index);
              value = t3[index];
              t3[index] = null;
              t3 = this._keys;
              if (index >= t3.length)
                throw $.ioore(index);
              t3[index] = $.CONSTANT3;
              this._numberOfDeleted = this._numberOfDeleted + 1;
              return value;
          }
        return;
    }
  },
  get$isEmpty: function() {
    return $.$$eq(this._numberOfEntries, 0);
  },
  get$length: function() {
    return this._numberOfEntries;
  },
  forEach$1: function(f) {
    var it, t1, t2, t3;
    it = $._HashMapImplIndexIterator$(this);
    for (; it.moveNext$0() === true;) {
      t1 = this._keys;
      t2 = it.get$current();
      if (t2 !== (t2 | 0))
        throw $.iae(t2);
      if (t2 < 0 || t2 >= t1.length)
        throw $.ioore(t2);
      t2 = t1[t2];
      t1 = this._values;
      t3 = it.get$current();
      if (t3 !== (t3 | 0))
        throw $.iae(t3);
      if (t3 < 0 || t3 >= t1.length)
        throw $.ioore(t3);
      f.call$2(t2, t1[t3]);
    }
  },
  get$keys: function() {
    return $._HashMapImplKeyIterable$(this);
  },
  get$values: function() {
    return $._HashMapImplValueIterable$(this);
  },
  containsKey$1: function(key) {
    return $.$$eq(this._probeForLookup$1(key), -1) !== true;
  },
  toString$0: function() {
    return $.ToString_mapToString(this);
  },
  _HashMapImpl$0: function() {
    this._numberOfEntries = 0;
    this._numberOfDeleted = 0;
    this._loadLimit = $._HashMapImpl__computeLoadLimit(8);
    this._keys = $.List_List$fixedLength(8, null);
    this._values = $.List_List$fixedLength(8, null);
  },
  $isMap: function() {
    return true;
  }
};

$$._HashMapImplKeyIterable = {"": "Iterable;_map",
  get$iterator: function() {
    return $._HashMapImplKeyIterator$(this._map);
  }
};

$$._HashMapImplValueIterable = {"": "Iterable;_map",
  get$iterator: function() {
    return $._HashMapImplValueIterator$(this._map);
  }
};

$$._HashMapImplIterator = {"": "Object;",
  moveNext$0: function() {
    var t1, $length, t3, newIndex, t2, key;
    t1 = this._map;
    $length = $.length(t1.get$_keys());
    if (typeof $length !== "number")
      return this.moveNext$0$bailout(1, $length, t1);
    t3 = this._index;
    if (typeof t3 !== "number")
      return this.moveNext$0$bailout(2, $length, t1, t3);
    newIndex = t3 + 1;
    for (t2 = t1.get$_keys(); newIndex < $length;) {
      if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.$isJavaScriptIndexingBehavior()))
        return this.moveNext$0$bailout(3, $length, t1, t2, newIndex, $.CONSTANT4);
      if (newIndex !== (newIndex | 0))
        throw $.iae(newIndex);
      if (newIndex < 0 || newIndex >= t2.length)
        throw $.ioore(newIndex);
      key = t2[newIndex];
      if (!(key == null) && !(key === $.CONSTANT3)) {
        this._liblib$_current = this._computeCurrentFromIndex$3(newIndex, t2, t1.get$_values());
        this._index = newIndex;
        return true;
      }
      ++newIndex;
    }
    this._index = $length;
    this._liblib$_current = null;
    return false;
  },
  moveNext$0$bailout: function(state0, $length, t1, t3, newIndex, t2) {
    switch (state0) {
      case 0:
        t1 = this._map;
        $length = $.length(t1.get$_keys());
      case 1:
        state0 = 0;
        t3 = this._index;
      case 2:
        state0 = 0;
        newIndex = $.$$add(t3, 1);
      case 3:
        var key;
        L0:
          while (true)
            switch (state0) {
              case 0:
                t2 = $.getInterceptor$JSNumber(newIndex);
                if (!(t2.$lt(newIndex, $length) === true))
                  break L0;
                t3 = t1.get$_keys();
              case 3:
                state0 = 0;
                key = $.$$index(t3, newIndex);
                if (!(key == null) && !(key === $.CONSTANT3)) {
                  this._liblib$_current = this._computeCurrentFromIndex$3(newIndex, t1.get$_keys(), t1.get$_values());
                  this._index = newIndex;
                  return true;
                }
                newIndex = t2.$add(newIndex, 1);
            }
        this._index = $length;
        this._liblib$_current = null;
        return false;
    }
  },
  get$current: function() {
    return this._liblib$_current;
  }
};

$$._HashMapImplKeyIterator = {"": "_HashMapImplIterator;_map,_index,_liblib$_current",
  _computeCurrentFromIndex$3: function(index, keys, values) {
    return $.$$index(keys, index);
  }
};

$$._HashMapImplValueIterator = {"": "_HashMapImplIterator;_map,_index,_liblib$_current",
  _computeCurrentFromIndex$3: function(index, keys, values) {
    return $.$$index(values, index);
  }
};

$$._HashMapImplIndexIterator = {"": "_HashMapImplIterator;_map,_index,_liblib$_current",
  _computeCurrentFromIndex$3: function(index, keys, values) {
    return index;
  }
};

$$._DeletedKeySentinel = {"": "Object;"};

$$._KeyValuePair = {"": "Object;key>,value="};

$$._LinkedHashMapImpl = {"": "Object;_list,_map",
  $indexSet: function(key, value) {
    var t1, t3;
    if (this._map.containsKey$1(key) === true) {
      t1 = this._map;
      if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
        return this.$$indexSet$bailout(1, key, value, t1);
      if (key !== (key | 0))
        throw $.iae(key);
      if (key < 0 || key >= t1.length)
        throw $.ioore(key);
      t1[key].get$element().set$value(value);
    } else {
      this._list.addLast$1($._KeyValuePair$(key, value));
      t1 = this._map;
      t3 = this._list.lastEntry$0();
      if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.$isJavaScriptIndexingBehavior())
        return this.$$indexSet$bailout(2, key, 0, t1);
      if (key !== (key | 0))
        throw $.iae(key);
      if (key < 0 || key >= t1.length)
        throw $.ioore(key);
      t1[key] = t3;
    }
  },
  $$indexSet$bailout: function(state0, key, value, t1) {
    switch (state0) {
      case 0:
      default:
        if (state0 === 1 || state0 === 0 && this._map.containsKey$1(key) === true)
          switch (state0) {
            case 0:
              t1 = this._map;
            case 1:
              state0 = 0;
              $.$$index(t1, key).get$element().set$value(value);
          }
        else
          switch (state0) {
            case 0:
              this._list.addLast$1($._KeyValuePair$(key, value));
              t1 = this._map;
            case 2:
              state0 = 0;
              $.$$indexSet(t1, key, this._list.lastEntry$0());
          }
    }
  },
  $index: function(key) {
    var t1, entry;
    t1 = this._map;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.$$index$bailout(1, key, t1);
    if (key !== (key | 0))
      throw $.iae(key);
    if (key < 0 || key >= t1.length)
      throw $.ioore(key);
    entry = t1[key];
    if (entry == null)
      return;
    return entry.get$element().get$value();
  },
  $$index$bailout: function(state0, key, t1) {
    var entry = $.$$index(t1, key);
    if (entry == null)
      return;
    return entry.get$element().get$value();
  },
  remove$1: function(key) {
    var entry = $.remove(this._map, key);
    if (entry == null)
      return;
    entry.remove$0();
    return entry.get$element().get$value();
  },
  putIfAbsent$2: function(key, ifAbsent) {
    var value = this.$index(key);
    if (this.$index(key) == null && this._map.containsKey$1(key) !== true) {
      value = ifAbsent.call$0();
      this.$indexSet(key, value);
    }
    return value;
  },
  get$keys: function() {
    return $.MappedIterable$(this._list, new $._LinkedHashMapImpl_keys_anon());
  },
  get$values: function() {
    return $.MappedIterable$(this._list, new $._LinkedHashMapImpl_values_anon());
  },
  forEach$1: function(f) {
    this._list.forEach$1(new $._LinkedHashMapImpl_forEach_anon(f));
  },
  containsKey$1: function(key) {
    return this._map.containsKey$1(key);
  },
  get$length: function() {
    return $.length(this._map);
  },
  get$isEmpty: function() {
    return $.$$eq(this.get$length(), 0);
  },
  clear$0: function() {
    $.clear(this._map);
    this._list.clear$0();
  },
  toString$0: function() {
    return $.ToString_mapToString(this);
  },
  _LinkedHashMapImpl$0: function() {
    this._map = $.HashMap_HashMap();
    this._list = $.DoubleLinkedQueue$();
  },
  $isMap: function() {
    return true;
  }
};

$$.DoubleLinkedQueueEntry = {"": "Object;_previous=,_next=,_element",
  _link$2: function(p, n) {
    this._next = n;
    this._previous = p;
    p.set$_next(this);
    n.set$_previous(this);
  },
  prepend$1: function(e) {
    $.DoubleLinkedQueueEntry$(e)._link$2(this._previous, this);
  },
  remove$0: function() {
    var t1 = this._next;
    this._previous.set$_next(t1);
    t1 = this._previous;
    this._next.set$_previous(t1);
    this._next = null;
    this._previous = null;
    return this._element;
  },
  _asNonSentinelEntry$0: function() {
    return this;
  },
  previousEntry$0: function() {
    return this._previous._asNonSentinelEntry$0();
  },
  nextEntry$0: function() {
    return this._next._asNonSentinelEntry$0();
  },
  get$element: function() {
    return this._element;
  },
  DoubleLinkedQueueEntry$1: function(e) {
    this._element = e;
  }
};

$$._DoubleLinkedQueueEntrySentinel = {"": "DoubleLinkedQueueEntry;_previous,_next,_element",
  remove$0: function() {
    throw $.$$throw($.StateError$("Empty queue"));
  },
  _asNonSentinelEntry$0: function() {
    return;
  },
  get$element: function() {
    throw $.$$throw($.StateError$("Empty queue"));
  },
  _DoubleLinkedQueueEntrySentinel$0: function() {
    this._link$2(this, this);
  }
};

$$.DoubleLinkedQueue = {"": "Collection;_sentinel",
  addLast$1: function(value) {
    this._sentinel.prepend$1(value);
  },
  add$1: function(value) {
    this._sentinel.prepend$1(value);
  },
  addAll$1: function(iterable) {
    var t1, t2;
    for (t1 = $.iterator(iterable); t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      this._sentinel.prepend$1(t2);
    }
  },
  removeLast$0: function() {
    return this._sentinel._previous.remove$0();
  },
  removeFirst$0: function() {
    return this._sentinel._next.remove$0();
  },
  remove$1: function(o) {
    var entry = this._sentinel.nextEntry$0();
    for (; !(entry === this._sentinel);) {
      if ($.$$eq(entry.get$element(), o) === true) {
        entry.remove$0();
        return;
      }
      entry = entry.get$_next();
    }
  },
  removeAll$1: function(elements) {
    $.IterableMixinWorkaround_removeAllList(this, elements);
  },
  removeMatching$1: function(test) {
    var entry, next;
    entry = this._sentinel.nextEntry$0();
    for (; !(entry === this._sentinel); entry = next) {
      next = entry.get$_next();
      if (test.call$1(entry.get$element()) === true)
        entry.remove$0();
    }
  },
  get$first: function() {
    return this._sentinel._next.get$element();
  },
  get$last: function() {
    return this._sentinel._previous.get$element();
  },
  lastEntry$0: function() {
    return this._sentinel.previousEntry$0();
  },
  get$isEmpty: function() {
    var t1 = this._sentinel;
    return t1._next === t1;
  },
  clear$0: function() {
    var t1 = this._sentinel;
    t1._next = t1;
    t1 = this._sentinel;
    t1._previous = t1;
  },
  get$iterator: function() {
    return $._DoubleLinkedQueueIterator$(this._sentinel);
  },
  toString$0: function() {
    return $.ToString_collectionToString(this);
  },
  DoubleLinkedQueue$0: function() {
    this._sentinel = $._DoubleLinkedQueueEntrySentinel$();
  },
  $isCollection: function() {
    return true;
  }
};

$$._DoubleLinkedQueueIterator = {"": "Object;_sentinel,_currentEntry,_liblib$_current",
  moveNext$0: function() {
    var t1, t2;
    t1 = this._currentEntry;
    if (t1 == null)
      return false;
    this._currentEntry = t1.get$_next();
    t1 = this._currentEntry;
    t2 = this._sentinel;
    if (t1 == null ? t2 == null : t1 === t2) {
      this._currentEntry = null;
      this._liblib$_current = null;
      this._sentinel = null;
      return false;
    }
    this._liblib$_current = t1.get$element();
    return true;
  },
  get$current: function() {
    return this._liblib$_current;
  }
};

$$.HashSet = {"": "Collection;_backingMap",
  clear$0: function() {
    this._backingMap.clear$0();
  },
  add$1: function(value) {
    this._backingMap.$indexSet(value, value);
  },
  get$add: function() {
    return new $.BoundClosure$1(this, "add$1");
  },
  remove$1: function(value) {
    var t1 = this._backingMap;
    if (t1.containsKey$1(value) !== true)
      return false;
    t1.remove$1(value);
    return true;
  },
  contains$1: function(value) {
    return this._backingMap.containsKey$1(value);
  },
  get$contains: function() {
    return new $.BoundClosure$1(this, "contains$1");
  },
  forEach$1: function(f) {
    this._backingMap.forEach$1(new $.HashSet_forEach_anon(f));
  },
  get$isEmpty: function() {
    return this._backingMap.get$isEmpty();
  },
  get$length: function() {
    return this._backingMap.get$length();
  },
  get$iterator: function() {
    return $._HashSetIterator$(this);
  },
  toString$0: function() {
    return $.ToString_collectionToString(this);
  },
  $isSet: true,
  $isCollection: function() {
    return true;
  }
};

$$._HashSetIterator = {"": "Object;_keysIterator",
  get$current: function() {
    var result = this._keysIterator.get$current();
    if (result === $.CONSTANT3)
      throw $.$$throw($.StateError$("Concurrent modification."));
    return result;
  },
  moveNext$0: function() {
    var t1, result, t2;
    t1 = this._keysIterator;
    do {
      result = t1.moveNext$0();
      if (result === true)
        t2 = t1.get$current() == null || t1.get$current() === $.CONSTANT3;
      else
        t2 = false;
    } while (t2);
    return result;
  }
};

$$.MappedIterable = {"": "Iterable;_iterable,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  get$iterator: function() {
    return $.MappedIterator$($.iterator(this._iterable), this._f);
  },
  get$length: function() {
    return $.length(this._iterable);
  },
  get$isEmpty: function() {
    return $.isEmpty(this._iterable);
  }
};

$$.MappedIterator = {"": "Iterator;_liblib0$_current,_iterator,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  moveNext$0: function() {
    var t1 = this._iterator;
    if (t1.moveNext$0() === true) {
      this._liblib0$_current = this._f$1(t1.get$current());
      return true;
    } else {
      this._liblib0$_current = null;
      return false;
    }
  },
  get$current: function() {
    return this._liblib0$_current;
  }
};

$$.MappedListIterable = {"": "Iterable;_liblib0$_list,_start,_end,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  get$_startIndex: function() {
    var t1, t2, t3;
    t1 = this._start;
    t2 = this._liblib0$_list;
    t3 = $.getInterceptor$JSArrayJSString(t2);
    if ($.$$le(t1, t3.get$length(t2)) === true)
      return t1;
    return t3.get$length(t2);
  },
  get$_endIndex: function() {
    var t1 = this._end;
    if (t1 == null || $.$$gt(t1, $.length(this._liblib0$_list)) === true)
      return $.length(this._liblib0$_list);
    return t1;
  },
  get$iterator: function() {
    return $.MappedListIterator$(this._liblib0$_list, this._f, this.get$_startIndex(), this.get$_endIndex());
  },
  forEach$1: function(action) {
    var t1, t3, $length, i, n;
    t1 = this._liblib0$_list;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.forEach$1$bailout1(1, action, t1);
    t3 = $.getInterceptor$JSArrayJSString(t1);
    $length = t1.length;
    i = this.get$_startIndex();
    if (typeof i !== "number")
      return this.forEach$1$bailout1(2, action, t1, t3, $length, i);
    n = this.get$_endIndex();
    if (typeof n !== "number")
      return this.forEach$1$bailout1(3, action, t1, t3, $length, i, n);
    for (; i < n; ++i) {
      if (i !== (i | 0))
        throw $.iae(i);
      if (i < 0 || i >= t1.length)
        throw $.ioore(i);
      action.call$1(this._f$1(t1[i]));
      if (t1.length !== $length)
        throw $.$$throw($.ConcurrentModificationError$(t1));
    }
  },
  forEach$1$bailout1: function(state0, action, t1, t3, $length, i, n) {
    switch (state0) {
      case 0:
        t1 = this._liblib0$_list;
      case 1:
        state0 = 0;
        t3 = $.getInterceptor$JSArrayJSString(t1);
        $length = t3.get$length(t1);
        i = this.get$_startIndex();
      case 2:
        state0 = 0;
        n = this.get$_endIndex();
      case 3:
        var t2;
        state0 = 0;
        for (; t2 = $.getInterceptor$JSNumber(i), t2.$lt(i, n) === true; i = t2.$add(i, 1)) {
          action.call$1(this._f$1(t3.$index(t1, i)));
          if ($.$$eq(t3.get$length(t1), $length) !== true)
            throw $.$$throw($.ConcurrentModificationError$(t1));
        }
    }
  },
  get$isEmpty: function() {
    return $.$$eq(this.get$_startIndex(), this.get$_endIndex());
  },
  get$length: function() {
    var t1, t3;
    t1 = this.get$_endIndex();
    t3 = this.get$_startIndex();
    if (typeof t1 !== "number")
      return this.get$length$bailout1(1, t1);
    if (typeof t3 !== "number")
      return this.get$length$bailout1(2, t1, t3);
    return t1 - t3;
  },
  get$length$bailout1: function(state0, t1, t3) {
    switch (state0) {
      case 0:
        t1 = this.get$_endIndex();
      case 1:
        state0 = 0;
        t3 = this.get$_startIndex();
      case 2:
        state0 = 0;
        return $.$$sub(t1, t3);
    }
  },
  get$first: function() {
    var start = this.get$_startIndex();
    if ($.$$eq(start, this.get$_endIndex()) === true)
      throw $.$$throw($.StateError$("No elements"));
    return this._f$1($.elementAt(this._liblib0$_list, start));
  },
  get$last: function() {
    var end, t1;
    end = this.get$_endIndex();
    t1 = $.getInterceptor(end);
    if (t1.$eq(end, this.get$_startIndex()) === true)
      throw $.$$throw($.StateError$("No elements"));
    return this._f$1($.elementAt(this._liblib0$_list, t1.$sub(end, 1)));
  },
  elementAt$1: function(index) {
    index = $.$$add(index, this.get$_startIndex());
    if ($.$$ge(index, this.get$_endIndex()) === true)
      throw $.$$throw($.StateError$("No matching element"));
    return this._f$1($.elementAt(this._liblib0$_list, index));
  },
  contains$1: function(element) {
    var t1, t3, $length, i, n;
    t1 = this._liblib0$_list;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.contains$1$bailout1(1, element, t1);
    t3 = $.getInterceptor$JSArrayJSString(t1);
    $length = t1.length;
    i = this.get$_startIndex();
    if (typeof i !== "number")
      return this.contains$1$bailout1(2, element, t1, t3, $length, i);
    n = this.get$_endIndex();
    if (typeof n !== "number")
      return this.contains$1$bailout1(3, element, t1, t3, $length, i, n);
    for (; i < n; ++i) {
      if (i !== (i | 0))
        throw $.iae(i);
      if (i < 0 || i >= t1.length)
        throw $.ioore(i);
      if ($.$$eq(this._f$1(t1[i]), element) === true)
        return true;
      if (t1.length !== $length)
        throw $.$$throw($.ConcurrentModificationError$(t1));
    }
    return false;
  },
  contains$1$bailout1: function(state0, element, t1, t3, $length, i, n) {
    switch (state0) {
      case 0:
        t1 = this._liblib0$_list;
      case 1:
        state0 = 0;
        t3 = $.getInterceptor$JSArrayJSString(t1);
        $length = t3.get$length(t1);
        i = this.get$_startIndex();
      case 2:
        state0 = 0;
        n = this.get$_endIndex();
      case 3:
        var t2;
        state0 = 0;
        for (; t2 = $.getInterceptor$JSNumber(i), t2.$lt(i, n) === true; i = t2.$add(i, 1)) {
          if ($.$$eq(this._f$1(t3.$index(t1, i)), element) === true)
            return true;
          if ($.$$eq(t3.get$length(t1), $length) !== true)
            throw $.$$throw($.ConcurrentModificationError$(t1));
        }
        return false;
    }
  },
  get$contains: function() {
    return new $.BoundClosure$1(this, "contains$1");
  },
  any$1: function(test) {
    var t1, t3, $length, i, n;
    t1 = this._liblib0$_list;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.any$1$bailout1(1, test, t1);
    t3 = $.getInterceptor$JSArrayJSString(t1);
    $length = t1.length;
    i = this.get$_startIndex();
    if (typeof i !== "number")
      return this.any$1$bailout1(2, test, t1, i, t3, $length);
    n = this.get$_endIndex();
    if (typeof n !== "number")
      return this.any$1$bailout1(3, test, t1, i, t3, $length, n);
    for (; i < n; ++i) {
      if (i !== (i | 0))
        throw $.iae(i);
      if (i < 0 || i >= t1.length)
        throw $.ioore(i);
      if (test.call$1(this._f$1(t1[i])) === true)
        return true;
      if (t1.length !== $length)
        throw $.$$throw($.ConcurrentModificationError$(t1));
    }
    return false;
  },
  any$1$bailout1: function(state0, test, t1, i, t3, $length, n) {
    switch (state0) {
      case 0:
        t1 = this._liblib0$_list;
      case 1:
        state0 = 0;
        t3 = $.getInterceptor$JSArrayJSString(t1);
        $length = t3.get$length(t1);
        i = this.get$_startIndex();
      case 2:
        state0 = 0;
        n = this.get$_endIndex();
      case 3:
        var t2;
        state0 = 0;
        for (; t2 = $.getInterceptor$JSNumber(i), t2.$lt(i, n) === true; i = t2.$add(i, 1)) {
          if (test.call$1(this._f$1(t3.$index(t1, i))) === true)
            return true;
          if ($.$$eq(t3.get$length(t1), $length) !== true)
            throw $.$$throw($.ConcurrentModificationError$(t1));
        }
        return false;
    }
  },
  firstMatching$2$orElse: function(test, orElse) {
    var t1, t3, $length, i, n, value;
    t1 = this._liblib0$_list;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.firstMatching$2$orElse$bailout1(1, test, orElse, t1);
    t3 = $.getInterceptor$JSArrayJSString(t1);
    $length = t1.length;
    i = this.get$_startIndex();
    if (typeof i !== "number")
      return this.firstMatching$2$orElse$bailout1(2, test, orElse, t1, t3, $length, i);
    n = this.get$_endIndex();
    if (typeof n !== "number")
      return this.firstMatching$2$orElse$bailout1(3, test, orElse, t1, t3, $length, i, n);
    for (; i < n; ++i) {
      if (i !== (i | 0))
        throw $.iae(i);
      if (i < 0 || i >= t1.length)
        throw $.ioore(i);
      value = this._f$1(t1[i]);
      if (test.call$1(value) === true)
        return value;
      if (t1.length !== $length)
        throw $.$$throw($.ConcurrentModificationError$(t1));
    }
    if (!(orElse == null))
      return orElse.call$0();
    throw $.$$throw($.StateError$("No matching element"));
  },
  firstMatching$2$orElse$bailout1: function(state0, test, orElse, t1, t3, $length, i, n) {
    switch (state0) {
      case 0:
        t1 = this._liblib0$_list;
      case 1:
        state0 = 0;
        t3 = $.getInterceptor$JSArrayJSString(t1);
        $length = t3.get$length(t1);
        i = this.get$_startIndex();
      case 2:
        state0 = 0;
        n = this.get$_endIndex();
      case 3:
        var t2, value;
        state0 = 0;
        for (; t2 = $.getInterceptor$JSNumber(i), t2.$lt(i, n) === true; i = t2.$add(i, 1)) {
          value = this._f$1(t3.$index(t1, i));
          if (test.call$1(value) === true)
            return value;
          if ($.$$eq(t3.get$length(t1), $length) !== true)
            throw $.$$throw($.ConcurrentModificationError$(t1));
        }
        if (!(orElse == null))
          return orElse.call$0();
        throw $.$$throw($.StateError$("No matching element"));
    }
  },
  singleMatching$1: function(test) {
    var t1, t3, $length, i, n, match, matchFound, value;
    t1 = this._liblib0$_list;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.singleMatching$1$bailout1(1, test, t1);
    t3 = $.getInterceptor$JSArrayJSString(t1);
    $length = t1.length;
    i = this.get$_startIndex();
    if (typeof i !== "number")
      return this.singleMatching$1$bailout1(2, test, t1, i, t3, $length);
    n = this.get$_endIndex();
    if (typeof n !== "number")
      return this.singleMatching$1$bailout1(3, test, t1, i, t3, $length, n);
    match = null;
    matchFound = false;
    for (; i < n; ++i) {
      if (i !== (i | 0))
        throw $.iae(i);
      if (i < 0 || i >= t1.length)
        throw $.ioore(i);
      value = this._f$1(t1[i]);
      if (test.call$1(value) === true) {
        if (matchFound)
          throw $.$$throw($.StateError$("More than one matching element"));
        match = value;
        matchFound = true;
      }
      if (t1.length !== $length)
        throw $.$$throw($.ConcurrentModificationError$(t1));
    }
    if (matchFound)
      return match;
    throw $.$$throw($.StateError$("No matching element"));
  },
  singleMatching$1$bailout1: function(state0, test, t1, i, t3, $length, n) {
    switch (state0) {
      case 0:
        t1 = this._liblib0$_list;
      case 1:
        state0 = 0;
        t3 = $.getInterceptor$JSArrayJSString(t1);
        $length = t3.get$length(t1);
        i = this.get$_startIndex();
      case 2:
        state0 = 0;
        n = this.get$_endIndex();
      case 3:
        var match, matchFound, t2, value;
        state0 = 0;
        match = null;
        matchFound = false;
        for (; t2 = $.getInterceptor$JSNumber(i), t2.$lt(i, n) === true; i = t2.$add(i, 1)) {
          value = this._f$1(t3.$index(t1, i));
          if (test.call$1(value) === true) {
            if (matchFound)
              throw $.$$throw($.StateError$("More than one matching element"));
            match = value;
            matchFound = true;
          }
          if ($.$$eq(t3.get$length(t1), $length) !== true)
            throw $.$$throw($.ConcurrentModificationError$(t1));
        }
        if (matchFound)
          return match;
        throw $.$$throw($.StateError$("No matching element"));
    }
  },
  join$1: function(separator) {
    var start, end, t1, t2, buffer, i;
    start = this.get$_startIndex();
    end = this.get$_endIndex();
    if (typeof end !== "number")
      return this.join$1$bailout1(1, separator, start, end);
    t1 = $.getInterceptor(start);
    if (t1.$eq(start, end) === true)
      return "";
    t2 = this._liblib0$_list;
    if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.$isJavaScriptIndexingBehavior()))
      return this.join$1$bailout1(2, separator, start, end, t2, t1);
    if (start !== (start | 0))
      throw $.iae(start);
    if (start < 0 || start >= t2.length)
      throw $.ioore(start);
    buffer = $.JsStringBuffer$($.S(this._f$1(t2[start])));
    if (!(t2.length === this.get$length()))
      throw $.$$throw($.ConcurrentModificationError$(t2));
    for (i = start + 1; i < end; ++i) {
      buffer.add$1(separator);
      if (i !== (i | 0))
        throw $.iae(i);
      if (i < 0 || i >= t2.length)
        throw $.ioore(i);
      buffer.add$1($.S(this._f$1(t2[i])));
      if (!(t2.length === this.get$length()))
        throw $.$$throw($.ConcurrentModificationError$(t2));
    }
    return buffer.toString$0();
  },
  join$1$bailout1: function(state0, separator, start, end, t2, t1, buffer, i, t4) {
    switch (state0) {
      case 0:
        start = this.get$_startIndex();
        end = this.get$_endIndex();
      case 1:
        state0 = 0;
        t1 = $.getInterceptor(start);
        if (t1.$eq(start, end) === true)
          return "";
        t2 = this._liblib0$_list;
      case 2:
        state0 = 0;
        t4 = $.getInterceptor$JSArrayJSString(t2);
        buffer = $.JsStringBuffer$($.S(this._f$1(t4.$index(t2, start))));
        if ($.$$eq(t4.get$length(t2), this.get$length()) !== true)
          throw $.$$throw($.ConcurrentModificationError$(t2));
        i = t1.$add(start, 1);
      case 3:
        state0 = 0;
        for (; t1 = $.getInterceptor$JSNumber(i), t1.$lt(i, end) === true; i = t1.$add(i, 1)) {
          buffer.add$1(separator);
          buffer.add$1($.S(this._f$1(t4.$index(t2, i))));
          if ($.$$eq(t4.get$length(t2), this.get$length()) !== true)
            throw $.$$throw($.ConcurrentModificationError$(t2));
        }
        return buffer.toString$0();
    }
  },
  where$1: function(test) {
    return $.Iterable.prototype.where$1.call(this, test);
  },
  map$1: function(f) {
    return $.MappedListIterable$(this._liblib0$_list, new $.MappedListIterable_map_anon(this, f), this._start, this._end);
  },
  toList$0: function() {
    var result = $.List_List(0);
    this.forEach$1($.CONSTANT1.get$add(result));
    return result;
  },
  toSet$0: function() {
    var result = $.HashSet$();
    this.forEach$1(result.get$add());
    return result;
  },
  MappedListIterable$4: function(_list, _f, _start, _end) {
    var t1 = this._end;
    if (!(t1 == null) && $.$$lt(t1, this._start) === true)
      throw $.$$throw($.ArgumentError$("End (" + $.S(t1) + ") before start (" + $.S(this._start) + ")"));
  }
};

$$.MappedListIterator = {"": "Object;_liblib0$_list,_f,_endIndex,_liblib0$_length,_liblib0$_index,_liblib0$_current",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  get$current: function() {
    return this._liblib0$_current;
  },
  moveNext$0: function() {
    var t1, t3, t4, t2, t6;
    t1 = this._liblib0$_list;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.moveNext$0$bailout(1, t1);
    t3 = $.getInterceptor$JSArrayJSString(t1);
    t4 = t1.length;
    if (!(t4 === this._liblib0$_length))
      throw $.$$throw($.ConcurrentModificationError$(t1));
    t2 = this._liblib0$_index;
    t6 = this._endIndex;
    if (typeof t2 !== "number")
      return this.moveNext$0$bailout(2, t1, t3, t2);
    if (typeof t6 !== "number")
      return this.moveNext$0$bailout(3, t1, t3, t2, t6);
    if (t2 >= t6) {
      this._liblib0$_current = null;
      return false;
    }
    if (t2 !== (t2 | 0))
      throw $.iae(t2);
    if (t2 < 0 || t2 >= t4)
      throw $.ioore(t2);
    this._liblib0$_current = this._f$1(t1[t2]);
    t3 = this._liblib0$_index;
    if (typeof t3 !== "number")
      return this.moveNext$0$bailout(4, 0, 0, t3);
    this._liblib0$_index = t3 + 1;
    return true;
  },
  moveNext$0$bailout: function(state0, t1, t3, t2, t5) {
    switch (state0) {
      case 0:
        t1 = this._liblib0$_list;
      case 1:
        state0 = 0;
        t3 = $.getInterceptor$JSArrayJSString(t1);
        if ($.$$eq(t3.get$length(t1), this._liblib0$_length) !== true)
          throw $.$$throw($.ConcurrentModificationError$(t1));
        t2 = this._liblib0$_index;
      case 2:
        state0 = 0;
        t5 = this._endIndex;
      case 3:
        state0 = 0;
        if ($.$$ge(t2, t5) === true) {
          this._liblib0$_current = null;
          return false;
        }
        this._liblib0$_current = this._f$1(t3.$index(t1, this._liblib0$_index));
        t2 = this._liblib0$_index;
      case 4:
        state0 = 0;
        this._liblib0$_index = $.$$add(t2, 1);
        return true;
    }
  }
};

$$.WhereIterable = {"": "Iterable;_iterable,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  get$iterator: function() {
    return $.WhereIterator$($.iterator(this._iterable), this._f);
  }
};

$$.WhereIterator = {"": "Iterator;_iterator,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  moveNext$0: function() {
    for (var t1 = this._iterator; t1.moveNext$0() === true;)
      if (this._f$1(t1.get$current()) === true)
        return true;
    return false;
  },
  get$current: function() {
    return this._iterator.get$current();
  }
};

$$.ListIterator = {"": "Object;_liblib0$_list,_liblib0$_length,_liblib0$_position,_liblib0$_current",
  moveNext$0: function() {
    var t1, t2, t3, nextPosition;
    t1 = this._liblib0$_list;
    t2 = t1.length;
    t3 = this._liblib0$_length;
    if (t2 !== t3)
      throw $.$$throw($.ConcurrentModificationError$(t1));
    t2 = this._liblib0$_position;
    if (t2 !== (t2 | 0))
      return this.moveNext$0$bailout(1, t2, t1, t3);
    nextPosition = t2 + 1;
    if (nextPosition < t3) {
      this._liblib0$_position = nextPosition;
      if (nextPosition < 0 || nextPosition >= t1.length)
        throw $.ioore(nextPosition);
      this._liblib0$_current = t1[nextPosition];
      return true;
    }
    this._liblib0$_current = null;
    return false;
  },
  moveNext$0$bailout: function(state0, t2, t1, t3) {
    var nextPosition = $.$$add(t2, 1);
    if ($.$$lt(nextPosition, t3) === true) {
      this._liblib0$_position = nextPosition;
      if (nextPosition !== (nextPosition | 0))
        throw $.iae(nextPosition);
      if (nextPosition < 0 || nextPosition >= t1.length)
        throw $.ioore(nextPosition);
      this._liblib0$_current = t1[nextPosition];
      return true;
    }
    this._liblib0$_current = null;
    return false;
  },
  get$current: function() {
    return this._liblib0$_current;
  }
};

$$._Manager = {"": "Object;nextIsolateId=,currentManagerId,nextManagerId,currentContext>,rootContext,topEventLoop>,fromCommandLine,isWorker>,supportsWorkers,isolates,mainManager,managers",
  get$useWorkers: function() {
    return this.supportsWorkers;
  },
  get$needSerialization: function() {
    return this.get$useWorkers();
  },
  _nativeDetectEnvironment$0: function() {
    var t1, t2;
    t1 = $.get$globalWindow() == null;
    this.isWorker = t1 && $.get$globalPostMessageDefined() === true;
    if (this.isWorker !== true)
      t2 = !($.get$globalWorker() == null) && !($.get$IsolateNatives_thisScript() == null);
    else
      t2 = true;
    this.supportsWorkers = t2;
    this.fromCommandLine = t1 && this.isWorker !== true;
  },
  _nativeInitWorkerMessageHandler$0: function() {
    var $function = function (e) { $.IsolateNatives__processWorkerMessage.call$2(this.mainManager, e); };
    $.get$globalThis().onmessage = $function;
    $.get$globalThis().dartPrint = function (object) {};
  },
  maybeCloseWorker$0: function() {
    if (this.isWorker === true && $.isEmpty(this.isolates) === true && $.$$eq(this.topEventLoop.get$activeTimerCount(), 0) === true)
      this.mainManager.postMessage$1($._serializeMessage($.makeLiteralMap(["command", "close"])));
  },
  _Manager$0: function() {
    this._nativeDetectEnvironment$0();
    this.topEventLoop = $._EventLoop$();
    this.isolates = $.Map_Map();
    this.managers = $.Map_Map();
    if (this.isWorker === true) {
      this.mainManager = $._MainManagerStub$();
      this._nativeInitWorkerMessageHandler$0();
    }
  }
};

$$._IsolateContext = {"": "Object;id>,ports>,isolateStatics",
  eval$1: function(code) {
    var old, result;
    old = $globalState.currentContext;
    $globalState.currentContext = this;
    this._setGlobals$0();
    result = null;
    try {
      result = code.call$0();
    } finally {
      $globalState.currentContext = old;
      if (!(old == null))
        old._setGlobals$0();
    }
    return result;
  },
  _setGlobals$0: function() {
    $ = this.isolateStatics;
  },
  lookup$1: function(portId) {
    return $.$$index(this.ports, portId);
  },
  register$2: function(portId, port) {
    if (this.ports.containsKey$1(portId) === true)
      throw $.$$throw($._ExceptionImplementation$("Registry: ports must be registered only once."));
    $.$$indexSet(this.ports, portId, port);
    $.$$indexSet($globalState.isolates, this.id, this);
  },
  unregister$1: function(portId) {
    $.remove(this.ports, portId);
    if ($.isEmpty(this.ports) === true)
      $.remove($globalState.isolates, this.id);
  },
  _IsolateContext$0: function() {
    var t1, t2;
    t1 = $._globalState();
    t2 = t1.get$nextIsolateId();
    t1.set$nextIsolateId($.$$add(t2, 1));
    this.id = t2;
    this.ports = $.Map_Map();
    this.isolateStatics = new Isolate;
  }
};

$$._EventLoop = {"": "Object;events,activeTimerCount=",
  enqueue$3: function(isolate, fn, msg) {
    $.addLast(this.events, $._IsolateEvent$(isolate, fn, msg));
  },
  dequeue$0: function() {
    var t1 = this.events;
    if ($.isEmpty(t1) === true)
      return;
    return t1.removeFirst$0();
  },
  checkOpenReceivePortsFromCommandLine$0: function() {
    if (!($globalState.rootContext == null) && $globalState.isolates.containsKey$1($globalState.rootContext.get$id()) === true && $globalState.fromCommandLine === true && $.isEmpty($globalState.rootContext.get$ports()) === true)
      throw $.$$throw($._ExceptionImplementation$("Program exited with open ReceivePorts."));
  },
  runIteration$0: function() {
    var $event = this.dequeue$0();
    if ($event == null) {
      this.checkOpenReceivePortsFromCommandLine$0();
      $globalState.maybeCloseWorker$0();
      return false;
    }
    $event.process$0();
    return true;
  },
  _runHelper$0: function() {
    if (!($.get$globalWindow() == null))
      new $._EventLoop__runHelper_next(this).call$0();
    else
      for (; this.runIteration$0() === true;)
        ;
  },
  run$0: function() {
    var e, trace, exception, t1;
    if ($globalState.isWorker !== true)
      this._runHelper$0();
    else
      try {
        this._runHelper$0();
      } catch (exception) {
        t1 = $.unwrapException(exception);
        e = t1;
        trace = $.getTraceFromException(exception);
        $globalState.mainManager.postMessage$1($._serializeMessage($.makeLiteralMap(["command", "error", "msg", $.S(e) + "\n" + $.S(trace)])));
      }

  }
};

$$._IsolateEvent = {"": "Object;isolate,fn,message",
  process$0: function() {
    this.isolate.eval$1(this.fn);
  }
};

$$._MainManagerStub = {"": "Object;",
  get$id: function() {
    return 0;
  },
  postMessage$1: function(msg) {
    $.get$globalThis().postMessage(msg);
  },
  terminate$0: function() {
  }
};

$$._BaseSendPort = {"": "Object;_isolateId>",
  _checkReplyTo$1: function(replyTo) {
    if (!(replyTo == null) && !(typeof replyTo === "object" && replyTo !== null && !!replyTo.$is_NativeJsSendPort) && !(typeof replyTo === "object" && replyTo !== null && !!replyTo.$is_WorkerSendPort) && !(typeof replyTo === "object" && replyTo !== null && !!replyTo.$is_BufferingSendPort))
      throw $.$$throw($._ExceptionImplementation$("SendPort.send: Illegal replyTo port type"));
  },
  call$1: function(message) {
    var completer, port;
    completer = $._CompleterImpl$();
    port = $.ReceivePortImpl$();
    this.send$2(message, port.toSendPort$0());
    port.receive$1(new $._BaseSendPort_call_anon(completer, port));
    return completer.future;
  },
  $isSendPort: true
};

$$._NativeJsSendPort = {"": "_BaseSendPort;_receivePort>,_isolateId",
  send$2: function(message, replyTo) {
    $._waitForPendingPorts([message, replyTo], new $._NativeJsSendPort_send_anon(this, message, replyTo));
  },
  send$1: function(message) {
    return this.send$2(message, null);
  },
  $eq: function(other) {
    if (other == null)
      return false;
    return typeof other === "object" && other !== null && !!other.$is_NativeJsSendPort && $.$$eq(this._receivePort, other._receivePort) === true;
  },
  get$hashCode: function() {
    return this._receivePort.get$_id();
  },
  $is_NativeJsSendPort: true,
  $isSendPort: true
};

$$._WorkerSendPort = {"": "_BaseSendPort;_workerId>,_receivePortId,_isolateId",
  send$2: function(message, replyTo) {
    $._waitForPendingPorts([message, replyTo], new $._WorkerSendPort_send_anon(this, message, replyTo));
  },
  send$1: function(message) {
    return this.send$2(message, null);
  },
  $eq: function(other) {
    var t1;
    if (other == null)
      return false;
    if (typeof other === "object" && other !== null && !!other.$is_WorkerSendPort)
      t1 = $.$$eq(this._workerId, other._workerId) === true && $.$$eq(this._isolateId, other._isolateId) === true && $.$$eq(this._receivePortId, other._receivePortId) === true;
    else
      t1 = false;
    return t1;
  },
  get$hashCode: function() {
    var t1, t3, t5;
    t1 = this._workerId;
    if (t1 !== (t1 | 0))
      return this.get$hashCode$bailout2(1, t1);
    t1 = t1 << 16 >>> 0;
    t3 = this._isolateId;
    if (t3 !== (t3 | 0))
      return this.get$hashCode$bailout2(2, t1, t3);
    t1 = (t1 ^ t3 << 8) >>> 0;
    t5 = this._receivePortId;
    if (t5 !== (t5 | 0))
      return this.get$hashCode$bailout2(3, t1, 0, t5);
    return (t1 ^ t5) >>> 0;
  },
  get$hashCode$bailout2: function(state0, t1, t3, t5) {
    switch (state0) {
      case 0:
        t1 = this._workerId;
      case 1:
        state0 = 0;
        t1 = $.$$shl(t1, 16);
        t3 = this._isolateId;
      case 2:
        state0 = 0;
        t1 = $.$$xor(t1, $.$$shl(t3, 8));
        t5 = this._receivePortId;
      case 3:
        state0 = 0;
        return $.$$xor(t1, t5);
    }
  },
  $is_WorkerSendPort: true,
  $isSendPort: true
};

$$._BufferingSendPort = {"": "_BaseSendPort;_id>,_port<,_futurePort>,pending=,_isolateId",
  send$2: function(message, replyTo) {
    var t1 = this._port;
    if (!(t1 == null))
      t1.send$2(message, replyTo);
    else
      $.add(this.pending, $.makeLiteralMap(["message", message, "replyTo", replyTo]));
  },
  send$1: function(message) {
    return this.send$2(message, null);
  },
  $eq: function(other) {
    if (other == null)
      return false;
    return typeof other === "object" && other !== null && !!other.$is_BufferingSendPort && $.$$eq(this._id, other._id) === true;
  },
  get$hashCode: function() {
    return this._id;
  },
  _BufferingSendPort$2: function(isolateId, _futurePort) {
    $._BufferingSendPort__idCount = $.$$add($._BufferingSendPort__idCount, 1);
    this._futurePort.then$1(new $.anon0(this));
  },
  $is_BufferingSendPort: true,
  $isSendPort: true
};

$$.ReceivePortImpl = {"": "Object;_id>,_callback>",
  _callback$2: function(arg0, arg1) {
    return this._callback.call$2(arg0, arg1);
  },
  receive$1: function(onMessage) {
    this._callback = onMessage;
  },
  close$0: function() {
    this._callback = null;
    $globalState.currentContext.unregister$1(this._id);
  },
  toSendPort$0: function() {
    return $._NativeJsSendPort$(this, $globalState.currentContext.get$id());
  },
  ReceivePortImpl$0: function() {
    $._globalState().get$currentContext().register$2(this._id, this);
  }
};

$$._PendingSendPortFinder = {"": "_MessageTraverser;ports>,_visited",
  visitPrimitive$1: function(x) {
  },
  visitList$1: function(list) {
    if (!($.$$index(this._visited, list) == null))
      return;
    $.$$indexSet(this._visited, list, true);
    $.forEach(list, new $._PendingSendPortFinder_visitList_anon(this));
  },
  visitMap$1: function(map) {
    if (!($.$$index(this._visited, map) == null))
      return;
    $.$$indexSet(this._visited, map, true);
    $.forEach(map.get$values(), new $._PendingSendPortFinder_visitMap_anon(this));
  },
  visitSendPort$1: function(port) {
    if (!!port.$is_BufferingSendPort && port._port == null)
      this.ports.push(port.get$_futurePort());
  },
  _PendingSendPortFinder$0: function() {
    this._visited = $._JsVisitedMap$();
  }
};

$$._JsSerializer = {"": "_Serializer;_nextFreeRefId,_visited",
  visitSendPort$1: function(x) {
    if (typeof x === "object" && x !== null && !!x.$is_NativeJsSendPort)
      return this.visitNativeJsSendPort$1(x);
    if (typeof x === "object" && x !== null && !!x.$is_WorkerSendPort)
      return ["sendport", x._workerId, x._isolateId, x._receivePortId];
    if (typeof x === "object" && x !== null && !!x.$is_BufferingSendPort)
      return this.visitBufferingSendPort$1(x);
    throw $.$$throw("Illegal underlying port " + $.S(x));
  },
  visitNativeJsSendPort$1: function(port) {
    return ["sendport", $globalState.currentManagerId, port._isolateId, port._receivePort.get$_id()];
  },
  visitBufferingSendPort$1: function(port) {
    var t1 = port._port;
    if (!(t1 == null))
      return this.visitSendPort$1(t1);
    else
      throw $.$$throw("internal error: must call _waitForPendingPorts to ensure all ports are resolved at this point.");
  },
  _JsSerializer$0: function() {
    this._visited = $._JsVisitedMap$();
  }
};

$$._JsCopier = {"": "_Copier;_visited",
  visitSendPort$1: function(x) {
    if (typeof x === "object" && x !== null && !!x.$is_NativeJsSendPort)
      return this.visitNativeJsSendPort$1(x);
    if (typeof x === "object" && x !== null && !!x.$is_WorkerSendPort)
      return this.visitWorkerSendPort$1(x);
    if (typeof x === "object" && x !== null && !!x.$is_BufferingSendPort)
      return this.visitBufferingSendPort$1(x);
    throw $.$$throw("Illegal underlying port " + $.S(this.get$p()));
  },
  visitNativeJsSendPort$1: function(port) {
    return $._NativeJsSendPort$(port._receivePort, port._isolateId);
  },
  visitWorkerSendPort$1: function(port) {
    return $._WorkerSendPort$(port._workerId, port._isolateId, port._receivePortId);
  },
  visitBufferingSendPort$1: function(port) {
    var t1 = port._port;
    if (!(t1 == null))
      return this.visitSendPort$1(t1);
    else
      throw $.$$throw("internal error: must call _waitForPendingPorts to ensure all ports are resolved at this point.");
  },
  _JsCopier$0: function() {
    this._visited = $._JsVisitedMap$();
  }
};

$$._JsDeserializer = {"": "_Deserializer;_deserialized",
  deserializeSendPort$1: function(x) {
    var t1, managerId, isolateId, receivePortId, isolate, receivePort;
    t1 = $.getInterceptor$JSArrayJSString(x);
    managerId = t1.$index(x, 1);
    isolateId = t1.$index(x, 2);
    receivePortId = t1.$index(x, 3);
    if ($.$$eq(managerId, $globalState.currentManagerId) === true) {
      isolate = $.$$index($globalState.isolates, isolateId);
      if (isolate == null)
        return;
      receivePort = isolate.lookup$1(receivePortId);
      if (receivePort == null)
        return;
      return $._NativeJsSendPort$(receivePort, isolateId);
    } else
      return $._WorkerSendPort$(managerId, isolateId, receivePortId);
  }
};

$$._JsVisitedMap = {"": "Object;tagged",
  $index: function(object) {
    return object['__MessageTraverser__attached_info__'];
  },
  $indexSet: function(object, info) {
    $.add(this.tagged, object);
    object['__MessageTraverser__attached_info__'] = info;
  },
  reset$0: function() {
    this.tagged = $.List_List(0);
  },
  cleanup$0: function() {
    var $length, i;
    $length = $.length(this.tagged);
    if (typeof $length !== "number")
      return this.cleanup$0$bailout(1, $length);
    i = 0;
    for (; i < $length; ++i)
      $.$$index(this.tagged, i)['__MessageTraverser__attached_info__'] = null;
    this.tagged = null;
  },
  cleanup$0$bailout: function(state0, $length) {
    var i = 0;
    for (; $.CONSTANT5.$lt(i, $length); ++i)
      $.$$index(this.tagged, i)['__MessageTraverser__attached_info__'] = null;
    this.tagged = null;
  }
};

$$._MessageTraverserVisitedMap = {"": "Object;",
  $index: function(object) {
    return;
  },
  $indexSet: function(object, info) {
  },
  reset$0: function() {
  },
  cleanup$0: function() {
  }
};

$$._MessageTraverser = {"": "Object;",
  traverse$1: function(x) {
    var result, t1;
    t1 = x;
    if (t1 == null || typeof t1 === "string" || typeof t1 === "number" || typeof t1 === "boolean")
      return this.visitPrimitive$1(x);
    this._visited.reset$0();
    result = null;
    try {
      result = this._dispatch$1(x);
    } finally {
      this._visited.cleanup$0();
    }
    return result;
  },
  _dispatch$1: function(x) {
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return this.visitPrimitive$1(x);
    if (typeof x === "object" && x !== null && (x.constructor === Array || x.$isList()))
      return this.visitList$1(x);
    if (typeof x === "object" && x !== null && x.$isMap())
      return this.visitMap$1(x);
    if (typeof x === "object" && x !== null && !!x.$isSendPort)
      return this.visitSendPort$1(x);
    if (typeof x === "object" && x !== null && !!x.$isSendPortSync)
      return this.visitSendPortSync$1(x);
    return this.visitObject$1(x);
  },
  visitObject$1: function(x) {
    throw $.$$throw("Message serialization: Illegal value " + $.S(x) + " passed");
  }
};

$$._Copier = {"": "_MessageTraverser;",
  visitPrimitive$1: function(x) {
    return x;
  },
  visitList$1: function(list) {
    var copy, len, i, t1;
    if (typeof list !== "object" || list === null || list.constructor !== Array && !list.$isJavaScriptIndexingBehavior())
      return this.visitList$1$bailout1(1, list);
    copy = $.$$index(this._visited, list);
    if (!(copy == null))
      return copy;
    len = list.length;
    copy = $.List_List(len);
    $.$$indexSet(this._visited, list, copy);
    for (i = 0; i < len; ++i) {
      if (i >= list.length)
        throw $.ioore(i);
      t1 = this._dispatch$1(list[i]);
      if (i >= copy.length)
        throw $.ioore(i);
      copy[i] = t1;
    }
    return copy;
  },
  visitList$1$bailout1: function(state0, list, t1, len) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        copy = $.$$index(this._visited, list);
        if (!(copy == null))
          return copy;
        t1 = $.getInterceptor$JSArrayJSString(list);
        len = t1.get$length(list);
      case 2:
        var copy, i, t2;
        state0 = 0;
        copy = $.List_List(len);
        $.$$indexSet(this._visited, list, copy);
        for (i = 0; $.CONSTANT5.$lt(i, len); ++i) {
          t2 = this._dispatch$1(t1.$index(list, i));
          if (i >= copy.length)
            throw $.ioore(i);
          copy[i] = t2;
        }
        return copy;
    }
  },
  visitMap$1: function(map) {
    var t1, t2;
    t1 = {};
    t1.copy_0 = $.$$index(this._visited, map);
    t2 = t1.copy_0;
    if (!(t2 == null))
      return t2;
    t1.copy_0 = $._HashMapImpl$();
    $.$$indexSet(this._visited, map, t1.copy_0);
    map.forEach$1(new $._Copier_visitMap_anon(t1, this));
    return t1.copy_0;
  }
};

$$._Serializer = {"": "_MessageTraverser;",
  visitPrimitive$1: function(x) {
    return x;
  },
  visitList$1: function(list) {
    var copyId, id;
    copyId = $.$$index(this._visited, list);
    if (!(copyId == null))
      return ["ref", copyId];
    id = this._nextFreeRefId;
    this._nextFreeRefId = id + 1;
    $.$$indexSet(this._visited, list, id);
    return ["list", id, this._serializeList$1(list)];
  },
  visitMap$1: function(map) {
    var copyId, id;
    copyId = $.$$index(this._visited, map);
    if (!(copyId == null))
      return ["ref", copyId];
    id = this._nextFreeRefId;
    this._nextFreeRefId = id + 1;
    $.$$indexSet(this._visited, map, id);
    return ["map", id, this._serializeList$1($.toList(map.get$keys())), this._serializeList$1($.toList(map.get$values()))];
  },
  _serializeList$1: function(list) {
    var len, result, i, t1;
    if (typeof list !== "string" && (typeof list !== "object" || list === null || list.constructor !== Array && !list.$isJavaScriptIndexingBehavior()))
      return this._serializeList$1$bailout(1, list);
    len = list.length;
    result = $.List_List(len);
    for (i = 0; i < len; ++i) {
      if (i >= list.length)
        throw $.ioore(i);
      t1 = this._dispatch$1(list[i]);
      if (i >= result.length)
        throw $.ioore(i);
      result[i] = t1;
    }
    return result;
  },
  _serializeList$1$bailout: function(state0, list, t1, len) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = $.getInterceptor$JSArrayJSString(list);
        len = t1.get$length(list);
      case 2:
        var result, i, t2;
        state0 = 0;
        result = $.List_List(len);
        for (i = 0; $.CONSTANT5.$lt(i, len); ++i) {
          t2 = this._dispatch$1(t1.$index(list, i));
          if (i >= result.length)
            throw $.ioore(i);
          result[i] = t2;
        }
        return result;
    }
  }
};

$$._Deserializer = {"": "Object;",
  deserialize$1: function(x) {
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return x;
    this._deserialized = $._HashMapImpl$();
    return this._deserializeHelper$1(x);
  },
  _deserializeHelper$1: function(x) {
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return x;
    switch ($.$$index(x, 0)) {
      case "ref":
        return this._deserializeRef$1(x);
      case "list":
        return this._deserializeList$1(x);
      case "map":
        return this._deserializeMap$1(x);
      case "sendport":
        return this.deserializeSendPort$1(x);
      default:
        return this.deserializeObject$1(x);
    }
  },
  _deserializeRef$1: function(x) {
    var id = $.$$index(x, 1);
    return $.$$index(this._deserialized, id);
  },
  _deserializeList$1: function(x) {
    var t1, id, dartList, len, i;
    t1 = $.getInterceptor$JSArrayJSString(x);
    id = t1.$index(x, 1);
    dartList = t1.$index(x, 2);
    if (typeof dartList !== "object" || dartList === null || (dartList.constructor !== Array || !!dartList.immutable$list) && !dartList.$isJavaScriptIndexingBehavior())
      return this._deserializeList$1$bailout(1, dartList, id);
    $.$$indexSet(this._deserialized, id, dartList);
    len = dartList.length;
    for (i = 0; i < len; ++i) {
      if (i >= dartList.length)
        throw $.ioore(i);
      t1 = this._deserializeHelper$1(dartList[i]);
      if (i >= dartList.length)
        throw $.ioore(i);
      dartList[i] = t1;
    }
    return dartList;
  },
  _deserializeList$1$bailout: function(state0, dartList, id, t2, len) {
    switch (state0) {
      case 0:
        t1 = $.getInterceptor$JSArrayJSString(x);
        id = t1.$index(x, 1);
        dartList = t1.$index(x, 2);
      case 1:
        state0 = 0;
        $.$$indexSet(this._deserialized, id, dartList);
        t2 = $.getInterceptor$JSArrayJSString(dartList);
        len = t2.get$length(dartList);
      case 2:
        var t1, i;
        state0 = 0;
        for (i = 0; $.CONSTANT5.$lt(i, len); ++i)
          t2.$indexSet(dartList, i, this._deserializeHelper$1(t2.$index(dartList, i)));
        return dartList;
    }
  },
  _deserializeMap$1: function(x) {
    var result, t1, id, keys, values, len, i, key;
    result = $._HashMapImpl$();
    t1 = $.getInterceptor$JSArrayJSString(x);
    id = t1.$index(x, 1);
    $.$$indexSet(this._deserialized, id, result);
    keys = t1.$index(x, 2);
    if (typeof keys !== "string" && (typeof keys !== "object" || keys === null || keys.constructor !== Array && !keys.$isJavaScriptIndexingBehavior()))
      return this._deserializeMap$1$bailout(1, x, result, keys, t1);
    values = t1.$index(x, 3);
    if (typeof values !== "string" && (typeof values !== "object" || values === null || values.constructor !== Array && !values.$isJavaScriptIndexingBehavior()))
      return this._deserializeMap$1$bailout(2, 0, result, keys, 0, values);
    len = keys.length;
    for (i = 0; i < len; ++i) {
      if (i >= keys.length)
        throw $.ioore(i);
      key = this._deserializeHelper$1(keys[i]);
      if (i >= values.length)
        throw $.ioore(i);
      result.$indexSet(key, this._deserializeHelper$1(values[i]));
    }
    return result;
  },
  _deserializeMap$1$bailout: function(state0, x, result, keys, t1, values, t3, len) {
    switch (state0) {
      case 0:
        result = $._HashMapImpl$();
        t1 = $.getInterceptor$JSArrayJSString(x);
        id = t1.$index(x, 1);
        $.$$indexSet(this._deserialized, id, result);
        keys = t1.$index(x, 2);
      case 1:
        state0 = 0;
        values = t1.$index(x, 3);
      case 2:
        state0 = 0;
        t3 = $.getInterceptor$JSArrayJSString(keys);
        len = t3.get$length(keys);
      case 3:
        var id, i;
        state0 = 0;
        for (t1 = $.getInterceptor$JSArrayJSString(values), i = 0; $.CONSTANT5.$lt(i, len); ++i)
          result.$indexSet(this._deserializeHelper$1(t3.$index(keys, i)), this._deserializeHelper$1(t1.$index(values, i)));
        return result;
    }
  },
  deserializeObject$1: function(x) {
    throw $.$$throw("Unexpected serialized object");
  }
};

$$.TimerImpl = {"": "Object;_once,_inEventLoop,_handle<",
  cancel$0: function() {
    if (!($.get$globalThis().setTimeout == null)) {
      if (this._inEventLoop === true)
        throw $.$$throw($.UnsupportedError$("Timer in event loop cannot be canceled."));
      if (this._handle == null)
        return;
      var t1 = $globalState.topEventLoop;
      t1.set$activeTimerCount($.$$sub(t1.get$activeTimerCount(), 1));
      if (this._once)
        $.get$globalThis().clearTimeout(this._handle);
      else
        $.get$globalThis().clearInterval(this._handle);
      this._handle = null;
    } else
      throw $.$$throw($.UnsupportedError$("Canceling a timer."));
  },
  TimerImpl$2: function(milliseconds, callback) {
    var t1;
    if ($.$$eq(milliseconds, 0) === true)
      t1 = $.hasTimer() !== true || $._globalState().get$isWorker() === true;
    else
      t1 = false;
    if (t1) {
      $._globalState().get$topEventLoop().enqueue$3($._globalState().get$currentContext(), new $.anon(this, callback), "timer");
      this._inEventLoop = true;
    } else if ($.hasTimer() === true) {
      t1 = $._globalState().get$topEventLoop();
      t1.set$activeTimerCount($.$$add(t1.get$activeTimerCount(), 1));
      t1 = new $.internalCallback(this, callback);
      this._handle = $.get$globalThis().setTimeout($.convertDartClosureToJS(t1, 0), milliseconds);
    } else
      throw $.$$throw($.UnsupportedError$("Timer greater than 0."));
  }
};

$$.AsyncError = {"": "Object;error>,stackTrace>,cause>",
  _writeOn$1: function(buffer) {
    var message, exception, t1;
    buffer.add$1("'");
    message = null;
    try {
      message = $.toString(this.error);
    } catch (exception) {
      $.unwrapException(exception);
      message = $.Error_safeToString(this.error);
    }

    buffer.add$1(message);
    buffer.add$1("'\n");
    t1 = this.stackTrace;
    if (!(t1 == null)) {
      buffer.add$1("Stack trace:\n");
      buffer.add$1($.toString(t1));
      buffer.add$1("\n");
    }
  },
  toString$0: function() {
    var buffer, cause;
    buffer = $.JsStringBuffer$("");
    buffer.add$1("AsyncError: ");
    this._writeOn$1(buffer);
    cause = this.cause;
    for (; !(cause == null);) {
      buffer.add$1("Caused by: ");
      cause._writeOn$1(buffer);
      cause = cause.get$cause();
    }
    return buffer.toString$0();
  },
  throwDelayed$0: function() {
    var reportError, exception;
    reportError = new $.AsyncError_throwDelayed_reportError(this);
    try {
      $.TimerImpl$(0, new $.AsyncError_throwDelayed_anon(this, reportError));
    } catch (exception) {
      $.unwrapException(exception);
      reportError.call$0();
    }

  },
  $isAsyncError: true
};

$$._CompleterImpl = {"": "Object;future>,_isComplete",
  complete$1: function(value) {
    if (this._isComplete)
      throw $.$$throw($.StateError$("Future already completed"));
    this._isComplete = true;
    this.future._setValue$1(value);
  },
  completeError$2: function(error, stackTrace) {
    var asyncError;
    if (this._isComplete)
      throw $.$$throw($.StateError$("Future already completed"));
    this._isComplete = true;
    asyncError = typeof error === "object" && error !== null && !!error.$isAsyncError ? error : $.AsyncError$(error, stackTrace);
    this.future._setError$1(asyncError);
  },
  completeError$1: function(error) {
    return this.completeError$2(error, null);
  }
};

$$._FutureListenerWrapper = {"": "Object;future>,_nextListener=",
  _sendValue$1: function(value) {
    this.future._setValue$1(value);
  },
  _sendError$1: function(error) {
    this.future._setError$1(error);
  }
};

$$._FutureImpl = {"": "Object;_state,_resultOrListeners>",
  get$_isComplete: function() {
    return $.$$eq(this._state, 0) !== true;
  },
  get$_hasValue: function() {
    return $.$$eq(this._state, 1);
  },
  get$_hasError: function() {
    return $.$$eq($.$$and(this._state, 2), 0) !== true;
  },
  get$_hasUnhandledError: function() {
    return $.$$eq($.$$and(this._state, 4), 0) !== true;
  },
  _clearUnhandledError$0: function() {
    this._state = $.$$and(this._state, 4294967291);
  },
  then$2$onError: function(f, onError) {
    var t1;
    if (this.get$_isComplete() !== true) {
      if (onError == null) {
        t1 = $._ThenFuture$(f);
        t1._subscribeTo$1(this);
        return t1;
      }
      t1 = $._SubscribeFuture$(f, onError);
      t1._subscribeTo$1(this);
      return t1;
    }
    if (this.get$_hasError() === true) {
      if (!(onError == null))
        return this._handleError$2(onError, null);
      return $._FutureWrapper$(this);
    } else
      return this._handleValue$1(f);
  },
  then$1: function(f) {
    return this.then$2$onError(f, null);
  },
  catchError$2$test: function(f, test) {
    var t1;
    if (this.get$_hasValue() === true)
      return $._FutureWrapper$(this);
    if (this.get$_isComplete() !== true) {
      t1 = $._CatchErrorFuture$(f, test);
      t1._subscribeTo$1(this);
      return t1;
    } else
      return this._handleError$2(f, test);
  },
  catchError$1: function(f) {
    return this.catchError$2$test(f, null);
  },
  _handleValue$1: function(onValue) {
    var thenFuture = $._ThenFuture$(onValue);
    $.TimerImpl$(0, new $._FutureImpl__handleValue_anon(thenFuture, this._resultOrListeners));
    return thenFuture;
  },
  _handleError$2: function(onError, test) {
    var error, errorFuture;
    this._clearUnhandledError$0();
    error = this._resultOrListeners;
    errorFuture = $._CatchErrorFuture$(onError, test);
    $.TimerImpl$(0, new $._FutureImpl__handleError_anon(error, errorFuture));
    return errorFuture;
  },
  _setValue$1: function(value) {
    var listeners, listeners0;
    if (this.get$_isComplete() === true)
      throw $.$$throw($.StateError$("Future already completed"));
    listeners = this._removeListeners$0();
    this._state = 1;
    this._resultOrListeners = value;
    for (; !(listeners == null); listeners = listeners0) {
      listeners0 = listeners.get$_nextListener();
      listeners.set$_nextListener(null);
      listeners._sendValue$1(value);
    }
  },
  get$_setValue: function() {
    return new $.BoundClosure$1(this, "_setValue$1");
  },
  _setError$1: function(error) {
    var listeners, listeners0;
    if (this.get$_isComplete() === true)
      throw $.$$throw($.StateError$("Future already completed"));
    listeners = this._removeListeners$0();
    this._state = 2;
    this._resultOrListeners = error;
    if (listeners == null) {
      this._scheduleUnhandledError$0();
      return;
    }
    do {
      listeners0 = listeners.get$_nextListener();
      listeners.set$_nextListener(null);
      listeners._sendError$1(error);
      if (!(listeners0 == null)) {
        listeners = listeners0;
        continue;
      } else
        break;
    } while (true);
  },
  get$_setError: function() {
    return new $.BoundClosure$1(this, "_setError$1");
  },
  _scheduleUnhandledError$0: function() {
    this._state = $.$$or(this._state, 4);
    $.TimerImpl$(0, new $._FutureImpl__scheduleUnhandledError_anon(this));
  },
  _addListener$1: function(listener) {
    listener.set$_nextListener(this._resultOrListeners);
    this._resultOrListeners = listener;
  },
  _removeListeners$0: function() {
    var current, prev, next;
    current = this._resultOrListeners;
    this._resultOrListeners = null;
    for (prev = null; !(current == null); prev = current, current = next) {
      next = current.get$_nextListener();
      current.set$_nextListener(prev);
    }
    return prev;
  },
  _chain$1: function(future) {
    if (this.get$_isComplete() !== true)
      this._addListener$1(future._asListener$0());
    else if (this.get$_hasValue() === true)
      future._setValue$1(this._resultOrListeners);
    else {
      this._clearUnhandledError$0();
      future._setError$1(this._resultOrListeners);
    }
  },
  _setOrChainValue$1: function(result) {
    if (typeof result === "object" && result !== null && !!result.$isFuture)
      if (!!result.$is_FutureImpl) {
        result._chain$1(this);
        return;
      } else {
        result.then$2$onError(this.get$_setValue(), this.get$_setError());
        return;
      }
    else
      this._setValue$1(result);
  },
  _asListener$0: function() {
    return $._FutureListenerWrapper$(this);
  },
  _FutureImpl$immediate$1: function(value) {
    this._state = 1;
    this._resultOrListeners = value;
  },
  $is_FutureImpl: true,
  $isFuture: true
};

$$._TransformFuture = {"": "_FutureImpl;_nextListener=",
  _subscribeTo$1: function(future) {
    future._addListener$1(this);
  }
};

$$._ThenFuture = {"": "_TransformFuture;_onValue,_nextListener,_state,_resultOrListeners",
  _onValue$1: function(arg0) {
    return this._onValue.call$1(arg0);
  },
  _sendValue$1: function(value) {
    var result, e, e0, s, exception, t1;
    result = null;
    try {
      result = this._onValue$1(value);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
        e = t1;
        this._setError$1(e);
        return;
      } else {
        e0 = t1;
        s = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$(e0, s));
        return;
      }
    }

    this._setOrChainValue$1(result);
  },
  _sendError$1: function(error) {
    this._setError$1(error);
  }
};

$$._CatchErrorFuture = {"": "_TransformFuture;_test,_onError,_nextListener,_state,_resultOrListeners",
  _test$1: function(arg0) {
    return this._test.call$1(arg0);
  },
  _onError$1: function(arg0) {
    return this._onError.call$1(arg0);
  },
  _sendValue$1: function(value) {
    this._setValue$1(value);
  },
  _sendError$1: function(error) {
    var matchesTest, e, s, result, e0, e1, s0, exception, t1;
    if (!(this._test == null)) {
      matchesTest = null;
      try {
        matchesTest = this._test$1(error.get$error());
      } catch (exception) {
        t1 = $.unwrapException(exception);
        e = t1;
        s = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$withCause(e, s, error));
        return;
      }

      if (matchesTest !== true) {
        this._setError$1(error);
        return;
      }
    }
    result = null;
    try {
      result = this._onError$1(error);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
        e0 = t1;
        this._setError$1(e0);
        return;
      } else {
        e1 = t1;
        s0 = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$withCause(e1, s0, error));
        return;
      }
    }

    this._setOrChainValue$1(result);
  }
};

$$._SubscribeFuture = {"": "_ThenFuture;_onError,_onValue,_nextListener,_state,_resultOrListeners",
  _onError$1: function(arg0) {
    return this._onError.call$1(arg0);
  },
  _sendError$1: function(error) {
    var result, e, e0, s, exception, t1;
    result = null;
    try {
      result = this._onError$1(error);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
        e = t1;
        this._setError$1(e);
        return;
      } else {
        e0 = t1;
        s = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$withCause(e0, s, error));
        return;
      }
    }

    this._setOrChainValue$1(result);
  }
};

$$._FutureWrapper = {"": "Object;_future",
  then$2$onError: function($function, onError) {
    return this._future.then$2$onError($function, onError);
  },
  then$1: function($function) {
    return this.then$2$onError($function, null);
  },
  catchError$2$test: function($function, test) {
    return this._future.catchError$2$test($function, test);
  },
  catchError$1: function($function) {
    return this.catchError$2$test($function, null);
  },
  $isFuture: true
};

$$.Stream = {"": "Object;",
  where$1: function(test) {
    return $._WhereStream$(this, test);
  },
  map$1: function(convert) {
    return $._MapStream$(this, convert);
  },
  contains$1: function(match) {
    var t1, future, t2, t3;
    t1 = {};
    future = $._FutureImpl$();
    t1.subscription_0 = null;
    t2 = new $.Stream_contains_anon(t1, match, future);
    t3 = future.get$_setError();
    t1.subscription_0 = this.listen$4$onDone$onError$unsubscribeOnError(t2, new $.Stream_contains_anon0(future), t3, true);
    return future;
  },
  get$contains: function() {
    return new $.BoundClosure$1(this, "contains$1");
  },
  any$1: function(test) {
    var t1, future, t2, t3;
    t1 = {};
    future = $._FutureImpl$();
    t1.subscription_0 = null;
    t2 = new $.Stream_any_anon(t1, test, future);
    t3 = future.get$_setError();
    t1.subscription_0 = this.listen$4$onDone$onError$unsubscribeOnError(t2, new $.Stream_any_anon0(future), t3, true);
    return future;
  },
  get$length: function() {
    var t1, future, t2, t3;
    t1 = {};
    future = $._FutureImpl$();
    t1.count_0 = 0;
    t2 = new $.Stream_length_anon(t1);
    t3 = future.get$_setError();
    this.listen$4$onDone$onError$unsubscribeOnError(t2, new $.Stream_length_anon0(t1, future), t3, true);
    return future;
  },
  get$isEmpty: function() {
    var t1, future, t2, t3;
    t1 = {};
    future = $._FutureImpl$();
    t1.subscription_0 = null;
    t2 = new $.Stream_isEmpty_anon(t1, future);
    t3 = future.get$_setError();
    t1.subscription_0 = this.listen$4$onDone$onError$unsubscribeOnError(t2, new $.Stream_isEmpty_anon0(future), t3, true);
    return future;
  },
  toList$0: function() {
    var result, future, t1, t2;
    result = [];
    future = $._FutureImpl$();
    t1 = new $.Stream_toList_anon(result);
    t2 = future.get$_setError();
    this.listen$4$onDone$onError$unsubscribeOnError(t1, new $.Stream_toList_anon0(result, future), t2, true);
    return future;
  },
  toSet$0: function() {
    var result, future, t1, t2;
    result = $.HashSet$();
    future = $._FutureImpl$();
    t1 = new $.Stream_toSet_anon(result);
    t2 = future.get$_setError();
    this.listen$4$onDone$onError$unsubscribeOnError(t1, new $.Stream_toSet_anon0(result, future), t2, true);
    return future;
  },
  distinct$1: function(equals) {
    return $._DistinctStream$(this, equals);
  },
  distinct$0: function() {
    return this.distinct$1(null);
  },
  get$first: function() {
    var t1, future, t2, t3;
    t1 = {};
    future = $._FutureImpl$();
    t1.subscription_0 = null;
    t2 = new $.Stream_first_anon(t1, future);
    t3 = future.get$_setError();
    t1.subscription_0 = this.listen$4$onDone$onError$unsubscribeOnError(t2, new $.Stream_first_anon0(future), t3, true);
    return future;
  },
  get$last: function() {
    var t1, future, t2, t3;
    t1 = {};
    future = $._FutureImpl$();
    t1.result_0 = null;
    t1.foundResult_1 = false;
    t2 = new $.Stream_last_anon(t1);
    t3 = future.get$_setError();
    this.listen$4$onDone$onError$unsubscribeOnError(t2, new $.Stream_last_anon0(t1, future), t3, true);
    return future;
  },
  singleMatching$1: function(test) {
    var t1, future, t2, t3;
    t1 = {};
    future = $._FutureImpl$();
    t1.result_0 = null;
    t1.foundResult_1 = false;
    t1.subscription_2 = null;
    t2 = new $.Stream_singleMatching_anon(t1, test, future);
    t3 = future.get$_setError();
    t1.subscription_2 = this.listen$4$onDone$onError$unsubscribeOnError(t2, new $.Stream_singleMatching_anon0(t1, future), t3, true);
    return future;
  },
  elementAt$1: function(index) {
    var t1, t2, future, t3;
    t1 = {};
    t1.index_0 = index;
    t2 = t1.index_0;
    if (!(typeof t2 === "number" && Math.floor(t2) === t2) || $.$$lt(t2, 0) === true)
      throw $.$$throw($.ArgumentError$(t1.index_0));
    future = $._FutureImpl$();
    t1.subscription_1 = null;
    t2 = new $.Stream_elementAt_anon(t1, future);
    t3 = future.get$_setError();
    t1.subscription_1 = this.listen$4$onDone$onError$unsubscribeOnError(t2, new $.Stream_elementAt_anon0(future), t3, true);
    return future;
  }
};

$$.StreamSubscription = {"": "Object;"};

$$._ForwardingStream = {"": "Stream;",
  listen$4$onDone$onError$unsubscribeOnError: function(onData, onDone, onError, unsubscribeOnError) {
    if (onData == null)
      onData = $._nullDataHandler;
    if (onError == null)
      onError = $._nullErrorHandler;
    if (onDone == null)
      onDone = $._nullDoneHandler;
    return this._createSubscription$4(onData, onError, onDone, true === unsubscribeOnError);
  },
  listen$1: function(onData) {
    return this.listen$4$onDone$onError$unsubscribeOnError(onData, null, null, null);
  },
  listen$3$onDone$onError: function(onData, onDone, onError) {
    return this.listen$4$onDone$onError$unsubscribeOnError(onData, onDone, onError, null);
  },
  _createSubscription$4: function(onData, onError, onDone, unsubscribeOnError) {
    return $._ForwardingStreamSubscription$(this, onData, onError, onDone, unsubscribeOnError);
  },
  _handleData$2: function(data, sink) {
    sink._sendData$1(data);
  },
  _handleError$2: function(error, sink) {
    sink._sendError$1(error);
  },
  _handleDone$1: function(sink) {
    sink._sendDone$0();
  }
};

$$._BaseStreamSubscription = {"": "Object;",
  _liblib5$_onData$1: function(arg0) {
    return this._liblib5$_onData.call$1(arg0);
  },
  _onError$1: function(arg0) {
    return this._onError.call$1(arg0);
  },
  _onDone$0: function() {
    return this._onDone.call$0();
  },
  _BaseStreamSubscription$3: function(_onData, _onError, _onDone) {
    if (this._liblib5$_onData == null)
      this._liblib5$_onData = $._nullDataHandler;
    if (this._onError == null)
      this._onError = $._nullErrorHandler;
    if (this._onDone == null)
      this._onDone = $._nullDoneHandler;
  }
};

$$._ForwardingStreamSubscription = {"": "_BaseStreamSubscription;_stream,_unsubscribeOnError,_subscription,_liblib5$_onData,_onError,_onDone",
  cancel$0: function() {
    var t1 = this._subscription;
    if (t1 == null)
      throw $.$$throw($.StateError$("Subscription has been unsubscribed"));
    t1.cancel$0();
    this._subscription = null;
  },
  _sendData$1: function(data) {
    this._liblib5$_onData$1(data);
  },
  _sendError$1: function(error) {
    this._onError$1(error);
    if (this._unsubscribeOnError) {
      this._subscription.cancel$0();
      this._subscription = null;
    }
  },
  _sendDone$0: function() {
    var t1 = this._subscription;
    if (!(t1 == null)) {
      t1.cancel$0();
      this._subscription = null;
    }
    this._onDone$0();
  },
  _handleData$1: function(data) {
    this._stream._handleData$2(data, this);
  },
  get$_handleData: function() {
    return new $.BoundClosure$1(this, "_handleData$1");
  },
  _handleError$1: function(error) {
    this._stream._handleError$2(error, this);
  },
  get$_handleError: function() {
    return new $.BoundClosure$1(this, "_handleError$1");
  },
  _handleDone$0: function() {
    this._subscription = null;
    this._stream._handleDone$1(this);
  },
  get$_handleDone: function() {
    return new $.BoundClosure$0(this, "_handleDone$0");
  },
  _ForwardingStreamSubscription$5: function(_stream, onData, onError, onDone, _unsubscribeOnError) {
    var t1, t2, t3;
    t1 = this._stream._liblib5$_source;
    t2 = this.get$_handleData();
    t3 = this.get$_handleError();
    this._subscription = t1.listen$3$onDone$onError(t2, this.get$_handleDone(), t3);
  }
};

$$._WhereStream = {"": "_ForwardingStream;_test,_liblib5$_source",
  _test$1: function(arg0) {
    return this._test.call$1(arg0);
  },
  _handleData$2: function(inputEvent, sink) {
    var satisfies, e, s, exception, t1;
    satisfies = null;
    try {
      satisfies = this._test$1(inputEvent);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      e = t1;
      s = $.getTraceFromException(exception);
      sink._sendError$1($._asyncError(e, s, null));
      return;
    }

    if (satisfies === true)
      sink._sendData$1(inputEvent);
  }
};

$$._MapStream = {"": "_ForwardingStream;_transform,_liblib5$_source",
  _transform$1: function(arg0) {
    return this._transform.call$1(arg0);
  },
  _handleData$2: function(inputEvent, sink) {
    var outputEvent, e, s, exception, t1;
    outputEvent = null;
    try {
      outputEvent = this._transform$1(inputEvent);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      e = t1;
      s = $.getTraceFromException(exception);
      sink._sendError$1($._asyncError(e, s, null));
      return;
    }

    sink._sendData$1(outputEvent);
  }
};

$$._DistinctStream = {"": "_ForwardingStream;_equals,_liblib5$_previous,_liblib5$_source",
  _equals$2: function(arg0, arg1) {
    return this._equals.call$2(arg0, arg1);
  },
  _handleData$2: function(inputEvent, sink) {
    var isEqual, e, s, t1, t2, exception;
    t1 = this._liblib5$_previous;
    t2 = $.get$_DistinctStream__SENTINEL();
    if (t1 == null ? t2 == null : t1 === t2) {
      this._liblib5$_previous = inputEvent;
      return sink._sendData$1(inputEvent);
    } else {
      isEqual = null;
      try {
        t1 = this._equals;
        t2 = this._liblib5$_previous;
        if (t1 == null)
          isEqual = $.$$eq(t2, inputEvent);
        else
          isEqual = this._equals$2(t2, inputEvent);
      } catch (exception) {
        t1 = $.unwrapException(exception);
        e = t1;
        s = $.getTraceFromException(exception);
        sink._sendError$1($._asyncError(e, s, null));
        return;
      }

      if (isEqual !== true) {
        sink._sendData$1(inputEvent);
        this._liblib5$_previous = inputEvent;
      }
    }
  }
};

$$.VoteDemo = {"": "StageWrapper;_calcEngine>,_playerHues,_condorcetView>,_irvView>,_distanceView,_pluralityView,_canManView,_candidateHues,canvas,stage,rootThing,_invalidatedEventId,_frameRequested,_disposed",
  _updateHighlightCandidates$1: function(candidates) {
    this._calcEngine.set$hoverPair(candidates);
    this.rootThing.set$showOnlyPlayers(candidates);
  },
  _locationDataUpdated$1: function(args) {
    var locData, t1;
    locData = this._calcEngine.get$locationData();
    this.rootThing.set$locationData(locData);
    t1 = locData.get$candidates();
    this._canManView.set$candidates(t1);
  },
  get$_locationDataUpdated: function() {
    return new $.BoundClosure$1(this, "_locationDataUpdated$1");
  },
  _distanceElectionUpdated$1: function(args) {
    var t1 = this._calcEngine.get$distanceElection();
    this._distanceView.set$election(t1);
    this.requestFrame$0();
  },
  get$_distanceElectionUpdated: function() {
    return new $.BoundClosure$1(this, "_distanceElectionUpdated$1");
  },
  _pluralityElectionUpdated$1: function(args) {
    var t1 = this._calcEngine.get$pluralityElection();
    this._pluralityView.set$election(t1);
    this.requestFrame$0();
  },
  get$_pluralityElectionUpdated: function() {
    return new $.BoundClosure$1(this, "_pluralityElectionUpdated$1");
  },
  _condorcetElectionUpdated$1: function(args) {
    var t1 = this._calcEngine.get$condorcetElection();
    this._condorcetView.set$election(t1);
    this.requestFrame$0();
  },
  get$_condorcetElectionUpdated: function() {
    return new $.BoundClosure$1(this, "_condorcetElectionUpdated$1");
  },
  _irvElectionUpdated$1: function(args) {
    var t1 = this._calcEngine.get$irvElection();
    this._irvView.set$election(t1);
    this.requestFrame$0();
  },
  get$_irvElectionUpdated: function() {
    return new $.BoundClosure$1(this, "_irvElectionUpdated$1");
  },
  _voterHexMapperUpdated$1: function(args) {
    var t1 = this._calcEngine.get$voterHexMap();
    this.rootThing.set$voterHexMap(t1);
    this.requestFrame$0();
  },
  get$_voterHexMapperUpdated: function() {
    return new $.BoundClosure$1(this, "_voterHexMapperUpdated$1");
  },
  drawFrame$1: function(highResTime) {
    $.StageWrapper.prototype.drawFrame$1.call(this, highResTime);
    this._condorcetView.draw$0();
    this._irvView.draw$0();
    this._pluralityView.draw$0();
    this._distanceView.draw$0();
    this._canManView.draw$0();
  },
  get$drawFrame: function() {
    return new $.BoundClosure$1(this, "drawFrame$1");
  },
  VoteDemo$_internal$7: function(canvas, rootMapElement, _condorcetView, _pluralityView, _distanceView, _canManView, _irvView) {
    var t1, t2;
    $.MouseManager_MouseManager(this.stage);
    t1 = this._calcEngine;
    $.add(t1.get$locationDataChanged(), this.get$_locationDataUpdated());
    $.add(t1.get$distanceElectionChanged(), this.get$_distanceElectionUpdated());
    $.add(t1.get$pluralityElectionChanged(), this.get$_pluralityElectionUpdated());
    $.add(t1.get$condorcetElectionChanged(), this.get$_condorcetElectionUpdated());
    $.add(t1.get$irvElectionChanged(), this.get$_irvElectionUpdated());
    $.add(t1.get$voterHueMapperChanged(), this.get$_voterHexMapperUpdated());
    $.add(this.rootThing.get$candidatesMoved(), new $.anon4(this));
    t2 = this._canManView;
    $.add(t2.get$candidateRemoveRequest(), new $.anon5(this));
    $.add(t2.get$newCandidateRequest(), new $.anon6(this));
    $.add(this._condorcetView.get$hoverChanged(), new $.anon7(this));
    $.add(this._irvView.get$hoverChanged(), new $.anon8(this));
    t1.set$locationData($.LocationData_LocationData$random());
  }
};

$$._ChildrenElementList = {"": "Object;_liblib3$_element,_childElements",
  toList$0: function() {
    var t1, t3, output, len, i, t2;
    t1 = this._childElements;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.toList$0$bailout(1, t1);
    t3 = t1.length;
    output = $.List_List$fixedLength(t3, null);
    for (len = t1.length, i = 0; i < len; ++i) {
      t2 = t1[i];
      if (i >= t3)
        throw $.ioore(i);
      output[i] = t2;
    }
    return output;
  },
  toList$0$bailout: function(state0, t1, t3, len, output) {
    switch (state0) {
      case 0:
        t1 = this._childElements;
      case 1:
        state0 = 0;
        t3 = $.getInterceptor$JSArrayJSString(t1);
        output = $.List_List$fixedLength(t3.get$length(t1), null);
        len = t3.get$length(t1);
      case 2:
        var i, t2;
        state0 = 0;
        i = 0;
        for (; $.CONSTANT5.$lt(i, len); ++i) {
          t2 = t3.$index(t1, i);
          if (i >= output.length)
            throw $.ioore(i);
          output[i] = t2;
        }
        return output;
    }
  },
  toSet$0: function() {
    var output, t1, len, i;
    output = $.HashSet$();
    t1 = this._childElements;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.toSet$0$bailout(1, output, t1);
    len = t1.length;
    i = 0;
    for (; i < len; ++i) {
      if (i >= t1.length)
        throw $.ioore(i);
      output.add$1(t1[i]);
    }
    return output;
  },
  toSet$0$bailout: function(state0, output, t1, t3, len) {
    switch (state0) {
      case 0:
        output = $.HashSet$();
        t1 = this._childElements;
      case 1:
        state0 = 0;
        t3 = $.getInterceptor$JSArrayJSString(t1);
        len = t3.get$length(t1);
      case 2:
        var i;
        state0 = 0;
        i = 0;
        for (; $.CONSTANT5.$lt(i, len); ++i)
          output.add$1(t3.$index(t1, i));
        return output;
    }
  },
  contains$1: function(element) {
    return $.contains1(this._childElements, element);
  },
  get$contains: function() {
    return new $.BoundClosure$1(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this._childElements); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
  },
  any$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0() === true;)
      if (f.call$1(t1.get$current()) === true)
        return true;
    return false;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  map$1: function(f) {
    return $.MappedListIterable$(this, f, 0, null);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  get$isEmpty: function() {
    return this._liblib3$_element.firstElementChild == null;
  },
  firstMatching$2$orElse: function(test, orElse) {
    return $.IterableMixinWorkaround_firstMatching(this, test, orElse);
  },
  singleMatching$1: function(test) {
    return $.IterableMixinWorkaround_singleMatching(this, test);
  },
  elementAt$1: function(index) {
    return this.$index(index);
  },
  get$length: function() {
    return $.length(this._childElements);
  },
  $index: function(index) {
    var t1 = this._childElements;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.$$index$bailout(1, t1, index);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  $$index$bailout: function(state0, t1, index) {
    return $.$$index(t1, index);
  },
  $indexSet: function(index, value) {
    var t1, t2;
    t1 = this._liblib3$_element;
    t2 = this._childElements;
    if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.$isJavaScriptIndexingBehavior()))
      return this.$$indexSet$bailout(1, index, value, t1, t2);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t2.length)
      throw $.ioore(index);
    t1.$$dom_replaceChild$2(value, t2[index]);
  },
  $$indexSet$bailout: function(state0, index, value, t1, t2) {
    t1.$$dom_replaceChild$2(value, $.$$index(t2, index));
  },
  add$1: function(value) {
    this._liblib3$_element.$$dom_appendChild$1(value);
    return value;
  },
  addLast$1: function(value) {
    this._liblib3$_element.$$dom_appendChild$1(value);
    return value;
  },
  get$iterator: function() {
    return $.iterator(this.toList$0());
  },
  addAll$1: function(iterable) {
    var t1, t2;
    for (t1 = $.iterator(iterable), t2 = this._liblib3$_element; t1.moveNext$0() === true;)
      t2.$$dom_appendChild$1(t1.get$current());
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("TODO(jacobr): should we impl?"));
  },
  remove$1: function(object) {
    var t1, t2;
    if (typeof object === "object" && object !== null && object.$isElement()) {
      t1 = object.parentNode;
      t2 = this._liblib3$_element;
      if (t1 === t2)
        t2.$$dom_removeChild$1(object);
    }
  },
  removeAll$1: function(elements) {
    $.IterableMixinWorkaround_removeAll(this, elements);
  },
  removeMatching$1: function(test) {
    $.IterableMixinWorkaround_removeMatching(this, test);
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnimplementedError$(null));
  },
  insertRange$3: function(start, rangeLength, initialValue) {
    throw $.$$throw($.UnimplementedError$(null));
  },
  getRange$2: function(start, rangeLength) {
    return $._FrozenElementList$_wrap($.Lists_getRange(this, start, rangeLength, []));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, this.get$length());
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  clear$0: function() {
    this._liblib3$_element.textContent = "";
  },
  removeLast$0: function() {
    var result = this.get$last();
    if (!(result == null))
      this._liblib3$_element.$$dom_removeChild$1(result);
    return result;
  },
  get$first: function() {
    var result = this._liblib3$_element.firstElementChild;
    if (result == null)
      throw $.$$throw($.StateError$("No elements"));
    return result;
  },
  get$last: function() {
    var result = this._liblib3$_element.lastElementChild;
    if (result == null)
      throw $.$$throw($.StateError$("No elements"));
    return result;
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  }
};

$$._FrozenElementList = {"": "Object;_nodeList",
  contains$1: function(element) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0() === true;)
      if ($.$$eq(t1.get$current(), element) === true)
        return true;
    return false;
  },
  get$contains: function() {
    return new $.BoundClosure$1(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  map$1: function(f) {
    return $.MappedListIterable$(this, f, 0, null);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  any$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0() === true;)
      if (f.call$1(t1.get$current()) === true)
        return true;
    return false;
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.HashSet_HashSet$from(this);
  },
  firstMatching$2$orElse: function(test, orElse) {
    return $.IterableMixinWorkaround_firstMatching(this, test, orElse);
  },
  singleMatching$1: function(test) {
    return $.IterableMixinWorkaround_singleMatching(this, test);
  },
  elementAt$1: function(index) {
    return this.$index(index);
  },
  get$isEmpty: function() {
    return $.isEmpty(this._nodeList);
  },
  get$length: function() {
    return $.length(this._nodeList);
  },
  $index: function(index) {
    var t1 = this._nodeList;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.$$index$bailout(1, t1, index);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  $$index$bailout: function(state0, t1, index) {
    return $.$$index(t1, index);
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  get$iterator: function() {
    return $._FrozenElementListIterator$(this);
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  insertRange$3: function(start, rangeLength, initialValue) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  getRange$2: function(start, rangeLength) {
    return $._FrozenElementList$_wrap($.getRange(this._nodeList, start, rangeLength));
  },
  indexOf$2: function(element, start) {
    return $.indexOf(this._nodeList, element, start);
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$(""));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$(""));
  },
  remove$1: function(element) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  get$first: function() {
    return $.first(this._nodeList);
  },
  get$last: function() {
    return $.last(this._nodeList);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  }
};

$$._FrozenElementListIterator = {"": "Object;_liblib3$_list,_liblib3$_index,_current",
  moveNext$0: function() {
    var t1, nextIndex, t2;
    t1 = this._liblib3$_index;
    if (typeof t1 !== "number")
      return this.moveNext$0$bailout(1, t1);
    nextIndex = t1 + 1;
    t1 = this._liblib3$_list;
    t2 = t1.get$length();
    if (typeof t2 !== "number")
      return this.moveNext$0$bailout(2, t1, t2, nextIndex);
    if (nextIndex < t2) {
      this._current = t1.$index(nextIndex);
      this._liblib3$_index = nextIndex;
      return true;
    }
    this._liblib3$_index = t1.get$length();
    this._current = null;
    return false;
  },
  moveNext$0$bailout: function(state0, t1, t2, nextIndex) {
    switch (state0) {
      case 0:
        t1 = this._liblib3$_index;
      case 1:
        state0 = 0;
        nextIndex = $.$$add(t1, 1);
        t1 = this._liblib3$_list;
        t2 = t1.get$length();
      case 2:
        state0 = 0;
        if ($.$$lt(nextIndex, t2) === true) {
          this._current = t1.$index(nextIndex);
          this._liblib3$_index = nextIndex;
          return true;
        }
        this._liblib3$_index = t1.get$length();
        this._current = null;
        return false;
    }
  },
  get$current: function() {
    return this._current;
  }
};

$$._ElementCssClassSet = {"": "CssClassSet;_liblib3$_element",
  readClasses$0: function() {
    var s, t1, trimmed;
    s = $.HashSet$();
    for (t1 = $.iterator($.split(this._liblib3$_element.className, " ")); t1.moveNext$0() === true;) {
      trimmed = $.trim(t1.get$current());
      if ($.isEmpty(trimmed) !== true)
        s.add$1(trimmed);
    }
    return s;
  },
  writeClasses$1: function(s) {
    var t1;
    $.List_List$from(s);
    t1 = $.join(s, " ");
    this._liblib3$_element.className = t1;
  }
};

$$._ChildNodeListLazy = {"": "Object;_this",
  get$first: function() {
    var result = this._this.firstChild;
    return result;
  },
  get$last: function() {
    var result = this._this.lastChild;
    return result;
  },
  add$1: function(value) {
    this._this.$$dom_appendChild$1(value);
  },
  addLast$1: function(value) {
    this._this.$$dom_appendChild$1(value);
  },
  addAll$1: function(iterable) {
    var t1, t2;
    for (t1 = $.iterator(iterable), t2 = this._this; t1.moveNext$0() === true;)
      t2.$$dom_appendChild$1(t1.get$current());
  },
  removeLast$0: function() {
    var result = this.get$last();
    if (!(result == null))
      this._this.$$dom_removeChild$1(result);
    return result;
  },
  remove$1: function(object) {
    if (!(typeof object === "object" && object !== null && object.$isNode()))
      return;
    if (!(this === object.parentNode))
      return;
    this._this.$$dom_removeChild$1(object);
  },
  removeAll$1: function(elements) {
    $.IterableMixinWorkaround_removeAll(this, elements);
  },
  removeMatching$1: function(test) {
    $.IterableMixinWorkaround_removeMatching(this, test);
  },
  clear$0: function() {
    this._this.textContent = "";
  },
  $indexSet: function(index, value) {
    this._this.$$dom_replaceChild$2(value, this.$index(index));
  },
  get$iterator: function() {
    return $.iterator(this._this.childNodes);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure$1(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  map$1: function(f) {
    return $.MappedListIterable$(this, f, 0, null);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  any$1: function(f) {
    return $.IterableMixinWorkaround_any(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.HashSet_HashSet$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq(this.get$length(), 0);
  },
  firstMatching$2$orElse: function(test, orElse) {
    return $.IterableMixinWorkaround_firstMatching(this, test, orElse);
  },
  singleMatching$1: function(test) {
    return $.IterableMixinWorkaround_singleMatching(this, test);
  },
  elementAt$1: function(index) {
    return this.$index(index);
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, this.get$length());
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  insertRange$3: function(start, rangeLength, initialValue) {
    throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  get$length: function() {
    return $.length(this._this.childNodes);
  },
  $index: function(index) {
    var t1 = this._this.childNodes;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.$$index$bailout(1, index, t1);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  $$index$bailout: function(state0, index, t1) {
    return $.$$index(t1, index);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  }
};

$$._AttributeMap = {"": "Object;",
  putIfAbsent$2: function(key, ifAbsent) {
    if (this.containsKey$1(key) !== true)
      this.$indexSet(key, ifAbsent.call$0());
    return this.$index(key);
  },
  clear$0: function() {
    for (var t1 = $.iterator(this.get$keys()); t1.moveNext$0() === true;)
      this.remove$1(t1.get$current());
  },
  forEach$1: function(f) {
    var t1, t2;
    for (t1 = $.iterator(this.get$keys()); t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      f.call$2(t2, this.$index(t2));
    }
  },
  get$keys: function() {
    var attributes, keys, len, i;
    attributes = this._liblib3$_element.attributes;
    if (typeof attributes !== "string" && (typeof attributes !== "object" || attributes === null || attributes.constructor !== Array && !attributes.$isJavaScriptIndexingBehavior()))
      return this.get$keys$bailout(1, attributes);
    keys = $.List_List(0);
    for (len = attributes.length, i = 0; i < len; ++i) {
      if (i >= attributes.length)
        throw $.ioore(i);
      if (this._matches$1(attributes[i]) === true) {
        if (i >= attributes.length)
          throw $.ioore(i);
        keys.push(attributes[i].get$$$dom_localName());
      }
    }
    return keys;
  },
  get$keys$bailout: function(state0, attributes, t1, len, keys) {
    switch (state0) {
      case 0:
        attributes = this._liblib3$_element.attributes;
      case 1:
        state0 = 0;
        keys = $.List_List(0);
        t1 = $.getInterceptor$JSArrayJSString(attributes);
        len = t1.get$length(attributes);
      case 2:
        var i;
        state0 = 0;
        i = 0;
        for (; $.CONSTANT5.$lt(i, len); ++i)
          if (this._matches$1(t1.$index(attributes, i)) === true)
            keys.push(t1.$index(attributes, i).get$$$dom_localName());
        return keys;
    }
  },
  get$values: function() {
    var attributes, values, len, i;
    attributes = this._liblib3$_element.attributes;
    if (typeof attributes !== "string" && (typeof attributes !== "object" || attributes === null || attributes.constructor !== Array && !attributes.$isJavaScriptIndexingBehavior()))
      return this.get$values$bailout(1, attributes);
    values = $.List_List(0);
    for (len = attributes.length, i = 0; i < len; ++i) {
      if (i >= attributes.length)
        throw $.ioore(i);
      if (this._matches$1(attributes[i]) === true) {
        if (i >= attributes.length)
          throw $.ioore(i);
        values.push(attributes[i].get$value());
      }
    }
    return values;
  },
  get$values$bailout: function(state0, attributes, t1, len, values) {
    switch (state0) {
      case 0:
        attributes = this._liblib3$_element.attributes;
      case 1:
        state0 = 0;
        values = $.List_List(0);
        t1 = $.getInterceptor$JSArrayJSString(attributes);
        len = t1.get$length(attributes);
      case 2:
        var i;
        state0 = 0;
        i = 0;
        for (; $.CONSTANT5.$lt(i, len); ++i)
          if (this._matches$1(t1.$index(attributes, i)) === true)
            values.push(t1.$index(attributes, i).get$value());
        return values;
    }
  },
  get$isEmpty: function() {
    var t1 = this.get$length();
    if (typeof t1 !== "number")
      return this.get$isEmpty$bailout(1, t1);
    return t1 === 0;
  },
  get$isEmpty$bailout: function(state0, t1) {
    return $.$$eq(t1, 0);
  },
  $isMap: function() {
    return true;
  }
};

$$._ElementAttributeMap = {"": "_AttributeMap;_liblib3$_element",
  containsKey$1: function(key) {
    return this._liblib3$_element.$$dom_hasAttribute$1(key);
  },
  $index: function(key) {
    return this._liblib3$_element.$$dom_getAttribute$1(key);
  },
  $indexSet: function(key, value) {
    this._liblib3$_element.$$dom_setAttribute$2(key, $.S(value));
  },
  remove$1: function(key) {
    var t1, value;
    t1 = this._liblib3$_element;
    value = t1.$$dom_getAttribute$1(key);
    t1.$$dom_removeAttribute$1(key);
    return value;
  },
  get$length: function() {
    return $.length(this.get$keys());
  },
  _matches$1: function(node) {
    return node.get$$$dom_namespaceUri() == null;
  }
};

$$._DataAttributeMap = {"": "Object;$$dom_attributes>",
  containsKey$1: function(key) {
    return this.$$dom_attributes.containsKey$1("data-" + $.S(key));
  },
  $index: function(key) {
    return $.$$index(this.$$dom_attributes, "data-" + $.S(key));
  },
  $indexSet: function(key, value) {
    $.$$indexSet(this.$$dom_attributes, "data-" + $.S(key), $.S(value));
  },
  putIfAbsent$2: function(key, ifAbsent) {
    return this.$$dom_attributes.putIfAbsent$2("data-" + $.S(key), ifAbsent);
  },
  remove$1: function(key) {
    return $.remove(this.$$dom_attributes, "data-" + $.S(key));
  },
  clear$0: function() {
    var t1, t2, t3;
    for (t1 = $.iterator(this.get$keys()), t2 = this.$$dom_attributes, t3 = $.getInterceptor$JSArray(t2); t1.moveNext$0() === true;)
      t3.remove$1(t2, "data-" + $.S(t1.get$current()));
  },
  forEach$1: function(f) {
    $.forEach(this.$$dom_attributes, new $._DataAttributeMap_forEach_anon(this, f));
  },
  get$keys: function() {
    var keys = $.List_List(0);
    $.forEach(this.$$dom_attributes, new $._DataAttributeMap_keys_anon(this, keys));
    return keys;
  },
  get$values: function() {
    var values = $.List_List(0);
    $.forEach(this.$$dom_attributes, new $._DataAttributeMap_values_anon(this, values));
    return values;
  },
  get$length: function() {
    return $.length(this.get$keys());
  },
  get$isEmpty: function() {
    var t1 = this.get$length();
    if (typeof t1 !== "number")
      return this.get$isEmpty$bailout(1, t1);
    return t1 === 0;
  },
  get$isEmpty$bailout: function(state0, t1) {
    return $.$$eq(t1, 0);
  },
  $isMap: function() {
    return true;
  }
};

$$.CssClassSet = {"": "Object;",
  toString$0: function() {
    return $.Strings_join($.List_List$from(this.readClasses$0()), " ");
  },
  get$iterator: function() {
    return $.iterator(this.readClasses$0());
  },
  forEach$1: function(f) {
    $.forEach(this.readClasses$0(), f);
  },
  join$1: function(separator) {
    return $.join(this.readClasses$0(), separator);
  },
  map$1: function(f) {
    return $.map(this.readClasses$0(), f);
  },
  where$1: function(f) {
    return $.where(this.readClasses$0(), f);
  },
  any$1: function(f) {
    return $.any(this.readClasses$0(), f);
  },
  get$isEmpty: function() {
    return $.isEmpty(this.readClasses$0());
  },
  get$length: function() {
    return $.length(this.readClasses$0());
  },
  contains$1: function(value) {
    return $.contains1(this.readClasses$0(), value);
  },
  get$contains: function() {
    return new $.BoundClosure$1(this, "contains$1");
  },
  add$1: function(value) {
    this._modify$1(new $.CssClassSet_add_anon(value));
  },
  remove$1: function(value) {
    var s, result;
    if (!(typeof value === "string"))
      return false;
    s = this.readClasses$0();
    result = $.remove(s, value);
    this.writeClasses$1(s);
    return result;
  },
  addAll$1: function(iterable) {
    this._modify$1(new $.CssClassSet_addAll_anon(iterable));
  },
  removeAll$1: function(iterable) {
    this._modify$1(new $.CssClassSet_removeAll_anon(iterable));
  },
  removeMatching$1: function(test) {
    this._modify$1(new $.CssClassSet_removeMatching_anon(test));
  },
  get$first: function() {
    return $.first(this.readClasses$0());
  },
  get$last: function() {
    return $.last(this.readClasses$0());
  },
  toList$0: function() {
    return $.toList(this.readClasses$0());
  },
  toSet$0: function() {
    return $.toSet(this.readClasses$0());
  },
  firstMatching$2$orElse: function(test, orElse) {
    return $.firstMatching(this.readClasses$0(), test, orElse);
  },
  singleMatching$1: function(test) {
    return $.singleMatching(this.readClasses$0(), test);
  },
  elementAt$1: function(index) {
    return $.elementAt(this.readClasses$0(), index);
  },
  clear$0: function() {
    this._modify$1(new $.CssClassSet_clear_anon());
  },
  _modify$1: function(f) {
    var s = this.readClasses$0();
    f.call$1(s);
    this.writeClasses$1(s);
  },
  $isSet: true,
  $isCollection: function() {
    return true;
  }
};

$$._EventStream = {"": "Stream;_target,_eventType,_useCapture",
  listen$4$onDone$onError$unsubscribeOnError: function(onData, onDone, onError, unsubscribeOnError) {
    return $._EventStreamSubscription$(this._target, this._eventType, onData, this._useCapture);
  },
  listen$1: function(onData) {
    return this.listen$4$onDone$onError$unsubscribeOnError(onData, null, null, null);
  },
  listen$3$onDone$onError: function(onData, onDone, onError) {
    return this.listen$4$onDone$onError$unsubscribeOnError(onData, onDone, onError, null);
  }
};

$$._EventStreamSubscription = {"": "StreamSubscription;_pauseCount,_target,_eventType,_onData,_useCapture",
  cancel$0: function() {
    if (this.get$_canceled() === true)
      throw $.$$throw($.StateError$("Subscription has been canceled."));
    var t1 = this._onData;
    if (!(t1 == null))
      this._target.$$dom_removeEventListener$3(this._eventType, t1, this._useCapture);
    this._target = null;
    this._onData = null;
  },
  get$_canceled: function() {
    return this._target == null;
  },
  get$_paused: function() {
    return this._pauseCount > 0;
  },
  _tryResume$0: function() {
    if (!(this._onData == null) && this.get$_paused() !== true)
      this._target.$$dom_addEventListener$3(this._eventType, this._onData, this._useCapture);
  },
  _EventStreamSubscription$4: function(_target, _eventType, _onData, _useCapture) {
    this._tryResume$0();
  }
};

$$.EventStreamProvider = {"": "Object;_eventType",
  forTarget$2$useCapture: function(e, useCapture) {
    return $._EventStream$(e, this._eventType, useCapture);
  },
  forTarget$1: function(e) {
    return this.forTarget$2$useCapture(e, false);
  }
};

$$._DOMWindowCrossFrame = {"": "Object;_window",
  get$location: function() {
    return $._LocationCrossFrame__createSafe(this._window.location);
  },
  get$top: function() {
    return $._DOMWindowCrossFrame__createSafe(this._window.top);
  },
  close$0: function() {
    return this._window.close();
  }
};

$$._LocationCrossFrame = {"": "Object;_location"};

$$._LocationWrapper = {"": "Object;_ptr",
  toString$0: function() {
    return this._ptr.toString();
  },
  $is_LocationWrapper: true,
  $isLocation: function() {
    return true;
  }
};

$$.FixedSizeListIterator = {"": "Object;_array,_length,_position,_current",
  moveNext$0: function() {
    var t1, nextPosition;
    t1 = this._position;
    if (typeof t1 !== "number")
      return this.moveNext$0$bailout(1, t1);
    nextPosition = t1 + 1;
    t1 = this._length;
    if (typeof t1 !== "number")
      return this.moveNext$0$bailout(2, t1, nextPosition);
    if (nextPosition < t1) {
      t1 = this._array;
      if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
        return this.moveNext$0$bailout(3, t1, nextPosition);
      if (nextPosition !== (nextPosition | 0))
        throw $.iae(nextPosition);
      if (nextPosition < 0 || nextPosition >= t1.length)
        throw $.ioore(nextPosition);
      this._current = t1[nextPosition];
      this._position = nextPosition;
      return true;
    }
    this._current = null;
    this._position = t1;
    return false;
  },
  moveNext$0$bailout: function(state0, t1, nextPosition) {
    switch (state0) {
      case 0:
        t1 = this._position;
      case 1:
        state0 = 0;
        nextPosition = $.$$add(t1, 1);
        t1 = this._length;
      case 2:
        state0 = 0;
      case 3:
        if (state0 === 3 || state0 === 0 && $.$$lt(nextPosition, t1) === true)
          switch (state0) {
            case 0:
              t1 = this._array;
            case 3:
              state0 = 0;
              this._current = $.$$index(t1, nextPosition);
              this._position = nextPosition;
              return true;
          }
        this._current = null;
        this._position = t1;
        return false;
    }
  },
  get$current: function() {
    return this._current;
  }
};

$$.FilteredElementList = {"": "Object;_liblib11$_node,_childNodes",
  get$_filtered: function() {
    return $.List_List$from($.where(this._childNodes, new $.FilteredElementList__filtered_anon()));
  },
  forEach$1: function(f) {
    $.forEach(this.get$_filtered(), f);
  },
  $indexSet: function(index, value) {
    this.$index(index).replaceWith$1(value);
  },
  join$1: function(separator) {
    return $.join(this.get$_filtered(), separator);
  },
  add$1: function(value) {
    $.add(this._childNodes, value);
  },
  addAll$1: function(iterable) {
    var t1, t2, t3;
    for (t1 = $.iterator(iterable), t2 = this._childNodes, t3 = $.getInterceptor$JSArray(t2); t1.moveNext$0() === true;)
      t3.add$1(t2, t1.get$current());
  },
  addLast$1: function(value) {
    $.add(this._childNodes, value);
  },
  contains$1: function(element) {
    return typeof element === "object" && element !== null && element.$isElement() && $.contains1(this._childNodes, element) === true;
  },
  get$contains: function() {
    return new $.BoundClosure$1(this, "contains$1");
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("TODO(jacobr): should we impl?"));
  },
  removeRange$2: function(start, rangeLength) {
    $.forEach($.getRange(this.get$_filtered(), start, rangeLength), new $.FilteredElementList_removeRange_anon());
  },
  insertRange$3: function(start, rangeLength, initialValue) {
    throw $.$$throw($.UnimplementedError$(null));
  },
  clear$0: function() {
    $.clear(this._childNodes);
  },
  removeLast$0: function() {
    var result = this.get$last();
    if (!(result == null))
      result.remove$0();
    return result;
  },
  map$1: function(f) {
    return $.map(this.get$_filtered(), f);
  },
  where$1: function(f) {
    return $.where(this.get$_filtered(), f);
  },
  remove$1: function(element) {
    var i, t1, indexElement;
    if (!(typeof element === "object" && element !== null && element.$isElement()))
      return;
    i = 0;
    while (true) {
      t1 = this.get$length();
      if (typeof t1 !== "number")
        return this.remove$1$bailout(1, element, i, t1);
      if (!(i < t1))
        break;
      indexElement = this.$index(i);
      if (indexElement === element) {
        indexElement.remove$0();
        return;
      }
      ++i;
    }
  },
  remove$1$bailout: function(state0, element, i, t1) {
    switch (state0) {
      case 0:
        if (!(typeof element === "object" && element !== null && element.$isElement()))
          return;
        i = 0;
      case 1:
        var indexElement;
        L0:
          while (true)
            switch (state0) {
              case 0:
                t1 = this.get$length();
              case 1:
                state0 = 0;
                if (!$.CONSTANT5.$lt(i, t1))
                  break L0;
                indexElement = this.$index(i);
                if (indexElement === element) {
                  indexElement.remove$0();
                  return;
                }
                ++i;
            }
    }
  },
  removeAll$1: function(elements) {
    $.IterableMixinWorkaround_removeAll(this, elements);
  },
  removeMatching$1: function(test) {
    $.IterableMixinWorkaround_removeMatching(this, test);
  },
  any$1: function(f) {
    return $.any(this.get$_filtered(), f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.HashSet_HashSet$from(this);
  },
  firstMatching$2$orElse: function(test, orElse) {
    return $.firstMatching(this.get$_filtered(), test, orElse);
  },
  singleMatching$1: function(test) {
    return $.singleMatching(this.get$_filtered(), test);
  },
  elementAt$1: function(index) {
    return this.$index(index);
  },
  get$isEmpty: function() {
    return $.isEmpty(this.get$_filtered());
  },
  get$length: function() {
    return $.length(this.get$_filtered());
  },
  $index: function(index) {
    var t1 = this.get$_filtered();
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.$$index$bailout(1, index, t1);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  $$index$bailout: function(state0, index, t1) {
    return $.$$index(t1, index);
  },
  get$iterator: function() {
    return $.iterator(this.get$_filtered());
  },
  getRange$2: function(start, rangeLength) {
    return $.getRange(this.get$_filtered(), start, rangeLength);
  },
  indexOf$2: function(element, start) {
    return $.indexOf(this.get$_filtered(), element, start);
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$first: function() {
    return $.first(this.get$_filtered());
  },
  get$last: function() {
    return $.last(this.get$_filtered());
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  }
};

$$._Random = {"": "Object;",
  nextDouble$0: function() {
    return Math.random();
  },
  nextBool$0: function() {
    return Math.random() < 0.5;
  }
};

$$._AttributeClassSet = {"": "CssClassSet;_liblib4$_element",
  readClasses$0: function() {
    var classname, s, t1, trimmed;
    classname = $.$$index(this._liblib4$_element.get$attributes(), "class");
    s = $.HashSet$();
    if (classname == null)
      return s;
    for (t1 = $.iterator($.split(classname, " ")); t1.moveNext$0() === true;) {
      trimmed = $.trim(t1.get$current());
      if ($.isEmpty(trimmed) !== true)
        s.add$1(trimmed);
    }
    return s;
  },
  writeClasses$1: function(s) {
    var list = $.List_List$from(s);
    $.$$indexSet(this._liblib4$_element.get$attributes(), "class", $.Strings_join(list, " "));
  }
};

$$.Tuple = {"": "Object;item1>,item2>",
  $eq: function(other) {
    var t1 = other == null;
    if (t1)
      return false;
    return !t1 && $.$$eq(this.item1, other.get$item1()) === true && $.$$eq(this.item2, other.get$item2()) === true;
  },
  toString$0: function() {
    return "{item1: " + $.S(this.item1) + ", item2: " + $.S(this.item2) + "}";
  },
  get$hashCode: function() {
    return $.Util_getHashCode([this.item1, this.item2]);
  }
};

$$.Tuple3 = {"": "Tuple;item3>,item1,item2",
  $eq: function(other) {
    var t1 = other == null;
    if (t1)
      return false;
    return !t1 && $.$$eq(this.item1, other.get$item1()) === true && $.$$eq(this.item2, other.get$item2()) === true && $.$$eq(this.item3, other.get$item3()) === true;
  },
  toString$0: function() {
    return "{item1: " + $.S(this.item1) + ", item2: " + $.S(this.item2) + ", item3: " + $.S(this.item3) + "}";
  },
  get$hashCode: function() {
    return $.Util_getHashCode([this.item1, this.item2, this.item3]);
  }
};

$$.Attachable = {"": "Object;name>"};

$$.AttachableObject = {"": "DisposableImpl;",
  _addHandler$2: function(property, watcher) {
    this.validateNotDisposed$0();
    return $.add(this._eventHandlers.putIfAbsent$2(property, new $.AttachableObject__addHandler_anon()), watcher);
  },
  _fireEvent$2: function(attachable, args) {
    var handle;
    this.validateNotDisposed$0();
    handle = $.$$index(this._eventHandlers, attachable);
    if (!(handle == null))
      handle.fireEvent$1(args);
  },
  _set$2: function(key, value) {
    this.validateNotDisposed$0();
    $.$$indexSet(this._propertyValues, key, value);
    this._fireChange$1(key);
  },
  _isSet$1: function(key) {
    this.validateNotDisposed$0();
    return this._propertyValues.containsKey$1(key);
  },
  _remove$1: function(key) {
    this.validateNotDisposed$0();
    if (this._isSet$1(key) === true) {
      $.remove(this._propertyValues, key);
      this._fireChange$1(key);
    }
  },
  _getValueOrUndefined$3: function(key, obj, ifAbsent) {
    var value;
    this.validateNotDisposed$0();
    if (this._isSet$1(key) === true)
      return $.$$index(this._propertyValues, key);
    else if (!(ifAbsent == null)) {
      value = ifAbsent.call$1(obj);
      this._set$2(key, value);
      return value;
    } else
      return $.CONSTANT15;
  },
  _fireChange$1: function(key) {
    var handle;
    this.validateNotDisposed$0();
    handle = $.$$index(this._eventHandlers, key);
    if (!(handle == null))
      handle.fireEvent$1(key);
  }
};

$$.AttachedEvent = {"": "Attachable;name",
  addHandler$2: function(obj, handler) {
    return obj._addHandler$2(this, handler);
  },
  fireEvent$2: function(obj, args) {
    return obj._fireEvent$2(this, args);
  }
};

$$.Property = {"": "Attachable;defaultValue,name",
  get$2: function(obj, ifAbsent) {
    var coreValue = this.getCore$2(obj, ifAbsent);
    if (!(coreValue === $.CONSTANT15))
      return coreValue;
    else
      return this.defaultValue;
  },
  get$1: function(obj) {
    return this.get$2(obj, null);
  },
  getCore$2: function(obj, ifAbsent) {
    return obj._getValueOrUndefined$3(this, obj, ifAbsent);
  },
  set$2: function(obj, value) {
    obj._set$2(this, value);
  },
  clear$1: function(obj) {
    return obj._remove$1(this);
  },
  addHandler$2: function(obj, handler) {
    return obj._addHandler$2(this, handler);
  },
  toString$0: function() {
    return "Property '" + $.S(this.name) + "'";
  }
};

$$._UndefinedValue = {"": "Object;"};

$$._DistinctIterator = {"": "Object;_source,_comparer,_found,_liblib1$_current",
  _comparer$2: function(arg0, arg1) {
    return this._comparer.call$2(arg0, arg1);
  },
  get$current: function() {
    return this._liblib1$_current;
  },
  moveNext$0: function() {
    var t1, t2, candidate;
    for (t1 = this._found, t2 = this._source; t2.moveNext$0() === true;) {
      candidate = t2.get$current();
      if ($.CONSTANT1.any$1(t1, new $._DistinctIterator_moveNext_anon(this, candidate)) !== true) {
        this._liblib1$_current = candidate;
        t1.push(this._liblib1$_current);
        return true;
      }
    }
    return false;
  }
};

$$._SelectManyIterator = {"": "Object;_sourceIterator,_func,_outputIterator,_liblib1$_current",
  _func$1: function(arg0) {
    return this._func.call$1(arg0);
  },
  moveNext$0: function() {
    var t1, t2;
    t1 = this._sourceIterator;
    do {
      t2 = this._outputIterator;
      if (!(t2 == null))
        if (t2.moveNext$0() === true) {
          this._liblib1$_current = this._outputIterator.get$current();
          return true;
        } else
          this._outputIterator = null;
      if (t1.moveNext$0() === true) {
        this._outputIterator = $.iterator(this._func$1(t1.get$current()));
        if (this._outputIterator.moveNext$0() === true) {
          this._liblib1$_current = this._outputIterator.get$current();
          return true;
        } else
          this._outputIterator = null;
      } else
        return false;
    } while (this._outputIterator == null);
  },
  get$current: function() {
    return this._liblib1$_current;
  }
};

$$._ListIterator = {"": "Object;_liblib1$_list,_liblib1$_length,_liblib1$_position,_liblib1$_current",
  moveNext$0: function() {
    var t1, t2, t3, nextPosition;
    t1 = this._liblib1$_list;
    t2 = t1.get$length();
    t3 = this._liblib1$_length;
    if (typeof t3 !== "number")
      return this.moveNext$0$bailout(1, t1, t2, t3);
    if ($.$$eq(t2, t3) !== true)
      throw $.$$throw($.ConcurrentModificationError$(t1));
    t2 = this._liblib1$_position;
    if (typeof t2 !== "number")
      return this.moveNext$0$bailout(2, t1, t2, t3);
    nextPosition = t2 + 1;
    if (nextPosition < t3) {
      this._liblib1$_position = nextPosition;
      this._liblib1$_current = t1.$index(nextPosition);
      return true;
    }
    this._liblib1$_current = null;
    return false;
  },
  moveNext$0$bailout: function(state0, t1, t2, t3) {
    switch (state0) {
      case 0:
        t1 = this._liblib1$_list;
        t2 = t1.get$length();
        t3 = this._liblib1$_length;
      case 1:
        state0 = 0;
        if ($.$$eq(t2, t3) !== true)
          throw $.$$throw($.ConcurrentModificationError$(t1));
        t2 = this._liblib1$_position;
      case 2:
        var nextPosition;
        state0 = 0;
        nextPosition = $.$$add(t2, 1);
        if ($.$$lt(nextPosition, t3) === true) {
          this._liblib1$_position = nextPosition;
          this._liblib1$_current = t1.$index(nextPosition);
          return true;
        }
        this._liblib1$_current = null;
        return false;
    }
  },
  get$current: function() {
    return this._liblib1$_current;
  }
};

$$.Enumerable = {"": "Iterable;",
  count$1: function(f) {
    return $.CollectionUtil_count(this, f);
  },
  map$1: function(f) {
    return $.$$($.Iterable.prototype.map$1.call(this, f));
  },
  where$1: function(f) {
    return $.$$($.Iterable.prototype.where$1.call(this, f));
  },
  exclude$1: function(items) {
    return $.CollectionUtil_exclude(this, items);
  },
  selectMany$1: function(f) {
    return $.CollectionUtil_selectMany(this, f);
  },
  distinct$1: function(comparer) {
    return $.CollectionUtil_distinct(this, comparer);
  },
  distinct$0: function() {
    return this.distinct$1(null);
  },
  group$1: function(keyFunc) {
    return $.Grouping$(this, keyFunc);
  },
  toReadOnlyCollection$0: function() {
    return $.ReadOnlyCollection$(this);
  },
  forEachWithIndex$1: function(f) {
    var t1, i, i0;
    for (t1 = this.get$iterator(), i = 0; t1.moveNext$0() === true; i = i0) {
      i0 = i + 1;
      f.call$2(t1.get$current(), i);
    }
  },
  toMap$2: function(valueFunc, keyFunc) {
    return $.CollectionUtil_toMap(this, valueFunc, keyFunc);
  },
  toMap$1: function(valueFunc) {
    return this.toMap$2(valueFunc, null);
  },
  selectNumbers$1: function(f) {
    return $.NumberEnumerable_NumberEnumerable$from(this.map$1(f));
  },
  toString$0: function() {
    return "[" + $.S(this.join$1(", ")) + "]";
  },
  $isEnumerable: true
};

$$._SimpleEnumerable = {"": "Enumerable;_source",
  get$iterator: function() {
    return $.iterator(this._source);
  }
};

$$._FuncEnumerable = {"": "Enumerable;_source,_func",
  _func$1: function(arg0) {
    return this._func.call$1(arg0);
  },
  get$iterator: function() {
    return this._func$1(this._source);
  }
};

$$.Grouping = {"": "Object;_liblib1$_values",
  containsKey$1: function(key) {
    return this._liblib1$_values.containsKey$1(key);
  },
  $index: function(key) {
    var t1 = this._liblib1$_values;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.$$index$bailout(1, t1, key);
    if (key !== (key | 0))
      throw $.iae(key);
    if (key < 0 || key >= t1.length)
      throw $.ioore(key);
    return t1[key];
  },
  $$index$bailout: function(state0, t1, key) {
    return $.$$index(t1, key);
  },
  forEach$1: function(f) {
    return $.forEach(this._liblib1$_values, f);
  },
  getKeys$0: function() {
    return this._liblib1$_values.get$keys();
  },
  get$length: function() {
    return $.length(this._liblib1$_values);
  },
  get$isEmpty: function() {
    return $.isEmpty(this._liblib1$_values);
  },
  toString$0: function() {
    return $.toString(this._liblib1$_values);
  },
  Grouping$2: function(source, keyFunc) {
    var t1, t2, t3;
    if (keyFunc == null)
      keyFunc = new $.anon1();
    for (t1 = $.iterator(source), t2 = this._liblib1$_values; t1.moveNext$0() === true;) {
      t3 = t1.get$current();
      $.add(t2.putIfAbsent$2(keyFunc.call$1(t3), new $.anon2()), t3);
    }
  }
};

$$.ListBase = {"": "Enumerable;",
  getRange$2: function(start, $length) {
    var result, i;
    result = [];
    for (i = 0; i < $length; ++i)
      result.push(this.$index(start + i));
    return result;
  },
  indexOf$2: function(value, start) {
    var i, t1;
    if (typeof start !== "number")
      return this.indexOf$2$bailout(1, value, start);
    i = start;
    while (true) {
      t1 = this.get$length();
      if (typeof t1 !== "number")
        return this.indexOf$2$bailout(2, value, 0, i, t1);
      if (!(i < t1))
        break;
      if ($.$$eq(this.$index(i), value) === true)
        return i;
      ++i;
    }
    return -1;
  },
  indexOf$2$bailout: function(state0, value, start, i, t1) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        i = start;
      case 2:
        var t3;
        L0:
          while (true)
            switch (state0) {
              case 0:
                t1 = this.get$length();
              case 2:
                state0 = 0;
                t3 = $.getInterceptor$JSNumber(i);
                if (!(t3.$lt(i, t1) === true))
                  break L0;
                if ($.$$eq(this.$index(i), value) === true)
                  return i;
                i = t3.$add(i, 1);
            }
        return -1;
    }
  },
  indexOf$1: function(value) {
    return this.indexOf$2(value, 0);
  },
  get$iterator: function() {
    return $._ListIterator$(this);
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot modify an unmodifiable list"));
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to an unmodifiable list"));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to an unmodifiable list"));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to an unmodifiable list"));
  },
  remove$1: function(element) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from an unmodifiable list"));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from an unmodifiable list"));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from an unmodifiable list"));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot modify an unmodifiable list"));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear an unmodifiable list"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from an unmodifiable list"));
  },
  removeRange$2: function(start, $length) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from an unmodifiable list"));
  },
  insertRange$3: function(start, $length, initialValue) {
    throw $.$$throw($.UnsupportedError$("Cannot insert range in an unmodifiable list"));
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  }
};

$$.NumberEnumerable = {"": "Iterable;",
  sum$0: function() {
    var t1, theSum, t2;
    for (t1 = this.get$iterator(), theSum = 0; t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      if (t2 == null)
        throw $.$$throw($.CONSTANT13);
      if (typeof t2 !== "number")
        throw $.iae(t2);
      theSum += t2;
    }
    return theSum;
  }
};

$$._SimpleNumEnumerable = {"": "NumberEnumerable;_source",
  get$iterator: function() {
    return $.iterator(this._source);
  }
};

$$.ReadOnlyCollection = {"": "ListBase;_items",
  get$length: function() {
    return $.length(this._items);
  },
  $index: function(index) {
    var t1 = this._items;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.$$index$bailout(1, t1, index);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  $$index$bailout: function(state0, t1, index) {
    return $.$$index(t1, index);
  }
};

$$.HslColor = {"": "Object;h>,s>,l>",
  toRgb$0: function() {
    var t1, normH, b, g, r, t2, temp2, temp1;
    t1 = this.h;
    if (typeof t1 !== "number")
      return this.toRgb$0$bailout(1, t1);
    normH = t1 / 360;
    t1 = this.s;
    if (t1 === 0) {
      b = this.l * 255;
      g = b;
      r = g;
    } else {
      t2 = this.l;
      temp2 = t2 < 0.5 ? t2 * (1 + t1) : t2 + t1 - t1 * t2;
      temp1 = 2 * t2 - temp2;
      r = 255 * $.HslColor__hueToRgb(temp1, temp2, normH + 0.3333333333333333);
      g = 255 * $.HslColor__hueToRgb(temp1, temp2, normH);
      b = 255 * $.HslColor__hueToRgb(temp1, temp2, normH - 0.3333333333333333);
    }
    return $.RgbColor_RgbColor($.toInt($.CONSTANT4.round$0(r)), $.toInt($.CONSTANT4.round$0(g)), $.toInt($.CONSTANT4.round$0(b)));
  },
  toRgb$0$bailout: function(state0, t1) {
    var normH, b, g, r, t2, temp2, temp1;
    normH = $.$$div(t1, 360);
    t1 = this.s;
    if (t1 === 0) {
      b = this.l * 255;
      g = b;
      r = g;
    } else {
      t2 = this.l;
      temp2 = t2 < 0.5 ? t2 * (1 + t1) : t2 + t1 - t1 * t2;
      temp1 = 2 * t2 - temp2;
      t1 = $.getInterceptor$JSNumber(normH);
      r = 255 * $.HslColor__hueToRgb(temp1, temp2, t1.$add(normH, 0.3333333333333333));
      g = 255 * $.HslColor__hueToRgb(temp1, temp2, normH);
      b = 255 * $.HslColor__hueToRgb(temp1, temp2, t1.$sub(normH, 0.3333333333333333));
    }
    return $.RgbColor_RgbColor($.toInt($.CONSTANT4.round$0(r)), $.toInt($.CONSTANT4.round$0(g)), $.toInt($.CONSTANT4.round$0(b)));
  },
  get$hashCode: function() {
    return $.Util_getHashCode([this.h, this.s, this.l]);
  },
  $eq: function(other) {
    var t1, t3;
    t1 = other == null;
    if (t1)
      return false;
    if (!t1)
      if ($.$$eq(other.get$h(), this.h) === true) {
        t1 = other.get$s();
        t3 = this.s;
        if (typeof t1 !== "number")
          return this.$$eq$bailout1(1, other, t1);
        if (t1 === t3) {
          t1 = other.get$l();
          t3 = this.l;
          if (typeof t1 !== "number")
            return this.$$eq$bailout1(2, 0, t1);
          t3 = t1 === t3;
          t1 = t3;
        } else
          t1 = false;
      } else
        t1 = false;
    else
      t1 = false;
    return t1;
  },
  $$eq$bailout1: function(state0, other, t1) {
    switch (state0) {
      case 0:
        t1 = other == null;
        if (t1)
          return false;
      default:
        var t3;
        if (state0 === 2 || state0 === 1 || state0 === 0 && !t1)
          switch (state0) {
            case 0:
            default:
              if (state0 === 2 || state0 === 1 || state0 === 0 && $.$$eq(other.get$h(), this.h) === true)
                switch (state0) {
                  case 0:
                    t1 = other.get$s();
                  case 1:
                    state0 = 0;
                  case 2:
                    if (state0 === 2 || state0 === 0 && $.$$eq(t1, this.s) === true)
                      switch (state0) {
                        case 0:
                          t1 = other.get$l();
                        case 2:
                          state0 = 0;
                          t3 = $.$$eq(t1, this.l) === true;
                          t1 = t3;
                      }
                    else
                      t1 = false;
                }
              else
                t1 = false;
          }
        else
          t1 = false;
        return t1;
    }
  },
  toString$0: function() {
    return "{HslColor: " + $.S(this.h) + ", " + $.S(this.s) + ", " + $.S(this.l) + "}";
  }
};

$$.RgbColor = {"": "Object;r>,g>,b>",
  toHex$0: function() {
    var buffer = $.JsStringBuffer$("#");
    $.CONSTANT1.forEach$1([this.r, this.g, this.b], new $.RgbColor_toHex_anon(buffer));
    return buffer.toString$0();
  },
  get$hashCode: function() {
    return $.Util_getHashCode([this.r, this.g, this.b]);
  },
  $eq: function(other) {
    var t1 = other == null;
    if (t1)
      return false;
    return !t1 && $.$$eq(other.get$r(), this.r) === true && $.$$eq(other.get$g(), this.g) === true && $.$$eq(other.get$b(), this.b) === true;
  },
  toString$0: function() {
    return "{RgbColor: " + $.S(this.r) + ", " + $.S(this.g) + ", " + $.S(this.b) + "}";
  }
};

$$.DisposedError = {"": "Object;message>"};

$$.DisposableImpl = {"": "Object;",
  validateNotDisposed$0: function() {
    if (this._disposed)
      throw $.$$throw($.CONSTANT12);
  }
};

$$.EventArgs = {"": "Object;"};

$$.EventHandle = {"": "DisposableImpl;_handlers,_disposed",
  fireEvent$1: function(args) {
    var t1 = this._handlers;
    if (!(t1 == null))
      $.forEach(t1, new $.EventHandle_fireEvent_anon(args));
  },
  add$1: function(handler) {
    var t1, id;
    t1 = $.GlobalId__globalId;
    if (typeof t1 !== "number")
      return this.add$1$bailout(1, handler, t1);
    $.GlobalId__globalId = t1 + 1;
    id = $.GlobalId$_internal(t1);
    if (this._handlers == null)
      this._handlers = $._HashMapImpl$();
    $.$$indexSet(this._handlers, id, handler);
    return id;
  },
  add$1$bailout: function(state0, handler, t1) {
    var id;
    $.GlobalId__globalId = $.$$add(t1, 1);
    id = $.GlobalId$_internal(t1);
    if (this._handlers == null)
      this._handlers = $._HashMapImpl$();
    $.$$indexSet(this._handlers, id, handler);
    return id;
  },
  remove$1: function(id) {
    var t1 = this._handlers;
    if (!(t1 == null))
      return !($.remove(t1, id) == null);
    else
      return false;
  }
};

$$.DetailedArgumentError = {"": "Object;argument,details",
  get$message: function() {
    return "Illegal argument: \"" + $.S(this.argument) + "\" -- " + $.S(this.details);
  },
  toString$0: function() {
    return this.get$message();
  },
  DetailedArgumentError$2: function(argument, details) {
    var t1 = this.argument;
    if (t1 == null || $.$$eq($.length(t1), 0) === true)
      throw $.$$throw($.InvalidOperationError$("That's just sad. Give me a valid argument"));
    t1 = this.details;
    if (t1 == null || $.$$eq($.length(t1), 0) === true)
      throw $.$$throw($.InvalidOperationError$("That's just sad. I need details!"));
  }
};

$$.InvalidOperationError = {"": "Object;message", $isException: true};

$$.NullArgumentError = {"": "DetailedArgumentError;argument,details"};

$$.GlobalId = {"": "Object;id>,_hashCode",
  compareTo$1: function(other) {
    return $.compareTo(this.id, other.get$id());
  },
  get$hashCode: function() {
    return this._hashCode;
  },
  $eq: function(other) {
    var t1 = other == null;
    if (t1)
      return false;
    return !t1 && $.$$eq(other.get$id(), this.id) === true;
  }
};

$$.AffineTransform = {"": "Object;_scX>,_shY>,_shX>,_scY>,_tX>,_tY>",
  get$scaleX: function() {
    return this._scX;
  },
  get$scaleY: function() {
    return this._scY;
  },
  get$translateX: function() {
    return this._tX;
  },
  get$translateY: function() {
    return this._tY;
  },
  get$shearX: function() {
    return this._shX;
  },
  get$shearY: function() {
    return this._shY;
  },
  get$determinant: function() {
    return $.$$sub($.$$mul(this._scX, this._scY), $.$$mul(this._shX, this._shY));
  },
  concatenate$1: function(tx) {
    var m0, m1, m00, m10;
    m0 = this._scX;
    m1 = this._shX;
    this._scX = $.$$add($.$$mul(tx.get$_scX(), m0), $.$$mul(tx.get$_shY(), m1));
    this._shX = $.$$add($.$$mul(tx.get$_shX(), m0), $.$$mul(tx.get$_scY(), m1));
    this._tX = $.$$add(this._tX, $.$$add($.$$mul(tx.get$_tX(), m0), $.$$mul(tx.get$_tY(), m1)));
    m00 = this._shY;
    m10 = this._scY;
    this._shY = $.$$add($.$$mul(tx.get$_scX(), m00), $.$$mul(tx.get$_shY(), m10));
    this._scY = $.$$add($.$$mul(tx.get$_shX(), m00), $.$$mul(tx.get$_scY(), m10));
    this._tY = $.$$add(this._tY, $.$$add($.$$mul(tx.get$_tX(), m00), $.$$mul(tx.get$_tY(), m10)));
    return this;
  },
  get$concatenate: function() {
    return new $.BoundClosure$1(this, "concatenate$1");
  },
  translate$2: function(dx, dy) {
    var t1, t2;
    t1 = $.getInterceptor$JSNumber(dx);
    t2 = $.getInterceptor$JSNumber(dy);
    this._tX = $.$$add(this._tX, $.$$add(t1.$mul(dx, this._scX), t2.$mul(dy, this._shX)));
    this._tY = $.$$add(this._tY, $.$$add(t1.$mul(dx, this._shY), t2.$mul(dy, this._scY)));
    return this;
  },
  setToScale$2: function(sx, sy) {
    return this.setTransform$6(sx, 0, 0, sy, 0, 0);
  },
  setFromTransfrom$1: function(tx) {
    $.requireArgumentNotNull(tx, "tx");
    return this.setTransform$6(tx.get$_scX(), tx.get$_shY(), tx.get$_shX(), tx.get$_scY(), tx.get$_tX(), tx.get$_tY());
  },
  setTransform$6: function(m00, m10, m01, m11, m02, m12) {
    this._scX = m00;
    this._shY = m10;
    this._shX = m01;
    this._scY = m11;
    this._tX = m02;
    this._tY = m12;
    return this;
  },
  transformCoordinate$1: function(point) {
    return $.Coordinate$($.$$add($.$$add($.$$mul(point.get$x(), this._scX), $.$$mul(point.get$y(), this._shX)), this._tX), $.$$add($.$$add($.$$mul(point.get$x(), this._shY), $.$$mul(point.get$y(), this._scY)), this._tY));
  },
  createInverse$0: function() {
    var det = this.get$determinant();
    return $.AffineTransform$($.$$div(this._scY, det), $.$$div($.$$negate(this._shY), det), $.$$div($.$$negate(this._shX), det), $.$$div(this._scX, det), $.$$div($.$$sub($.$$mul(this._shX, this._tY), $.$$mul(this._scY, this._tX)), det), $.$$div($.$$sub($.$$mul(this._shY, this._tX), $.$$mul(this._scX, this._tY)), det));
  },
  $eq: function(other) {
    var t1 = other == null;
    if (t1)
      return false;
    return !t1 && $.$$eq(this._scX, other.get$_scX()) === true && $.$$eq(this._shX, other.get$_shX()) === true && $.$$eq(this._tX, other.get$_tX()) === true && $.$$eq(this._shY, other.get$_shY()) === true && $.$$eq(this._scY, other.get$_scY()) === true && $.$$eq(this._tY, other.get$_tY()) === true;
  },
  toString$0: function() {
    return $.CONSTANT1.join$1([this.get$scaleX(), this.get$shearY(), this.get$shearX(), this.get$scaleY(), this.get$translateX(), this.get$translateY()], ", ");
  }
};

$$.Box = {"": "Object;left>,top>,width>,height>",
  get$topLeft: function() {
    return $.Coordinate$(this.left, this.top);
  },
  get$size: function() {
    return $.Size$(this.width, this.height);
  },
  get$isValid: function() {
    return this.get$topLeft().get$isValid() === true && this.get$size().get$isValid() === true;
  },
  get$right: function() {
    var t1, t2;
    t1 = this.left;
    t2 = this.width;
    if (typeof t2 !== "number")
      throw $.iae(t2);
    return t1 + t2;
  },
  get$bottom: function() {
    var t1, t2;
    t1 = this.top;
    t2 = this.height;
    if (typeof t2 !== "number")
      throw $.iae(t2);
    return t1 + t2;
  },
  contains$1: function(point) {
    var t1, t2, t3, t4;
    t1 = point.get$x();
    t2 = this.left;
    if ($.$$ge(t1, t2) === true) {
      t1 = point.get$x();
      t3 = this.width;
      if (typeof t3 !== "number")
        throw $.iae(t3);
      if ($.$$le(t1, t2 + t3) === true) {
        t1 = point.get$y();
        t2 = this.top;
        if ($.$$ge(t1, t2) === true) {
          t1 = point.get$y();
          t3 = this.height;
          if (typeof t3 !== "number")
            throw $.iae(t3);
          t4 = $.$$le(t1, t2 + t3) === true;
          t1 = t4;
        } else
          t1 = false;
      } else
        t1 = false;
    } else
      t1 = false;
    return t1;
  },
  get$contains: function() {
    return new $.BoundClosure$1(this, "contains$1");
  },
  constrain$1: function(value) {
    $.requireArgumentNotNull(value, "value");
    $.requireArgument(value.get$isValid(), "value", null);
    return $.Coordinate$($.min(this.get$right(), $.max(this.left, value.get$x())), $.min(this.get$bottom(), $.max(this.top, value.get$y())));
  },
  $eq: function(other) {
    var t1, t3;
    t1 = other == null;
    if (t1)
      return false;
    if (!t1) {
      t1 = other.get$left();
      t3 = this.left;
      if (typeof t1 !== "number")
        return this.$$eq$bailout1(1, other, t1);
      if (t1 === t3) {
        t1 = other.get$top();
        t3 = this.top;
        if (typeof t1 !== "number")
          return this.$$eq$bailout1(2, other, t1);
        t1 = t1 === t3 && $.$$eq(other.get$width(), this.width) === true && $.$$eq(other.get$height(), this.height) === true;
      } else
        t1 = false;
    } else
      t1 = false;
    return t1;
  },
  $$eq$bailout1: function(state0, other, t1) {
    switch (state0) {
      case 0:
        t1 = other == null;
        if (t1)
          return false;
      default:
        if (state0 === 2 || state0 === 1 || state0 === 0 && !t1)
          switch (state0) {
            case 0:
              t1 = other.get$left();
            case 1:
              state0 = 0;
            case 2:
              if (state0 === 2 || state0 === 0 && $.$$eq(t1, this.left) === true)
                switch (state0) {
                  case 0:
                    t1 = other.get$top();
                  case 2:
                    state0 = 0;
                    t1 = $.$$eq(t1, this.top) === true && $.$$eq(other.get$width(), this.width) === true && $.$$eq(other.get$height(), this.height) === true;
                }
              else
                t1 = false;
          }
        else
          t1 = false;
        return t1;
    }
  },
  toString$0: function() {
    return "Location: " + $.S(this.get$topLeft()) + ", Size: " + $.S(this.get$size());
  },
  get$hashCode: function() {
    return $.Util_getHashCode([this.left, this.top, this.width, this.height]);
  }
};

$$.Coordinate = {"": "Object;x>,y>",
  getDistance$1: function(other) {
    return $.length(this.$sub(other));
  },
  get$isValid: function() {
    return $.isValidNumber(this.x) && $.isValidNumber(this.y);
  },
  $sub: function(other) {
    var t1, t3, t6;
    t1 = this.x;
    t3 = other.get$x();
    if (typeof t1 !== "number")
      return this.$$sub$bailout(1, other, t1);
    if (typeof t3 !== "number")
      return this.$$sub$bailout(2, other, t1, t3);
    t3 = t1 - t3;
    t1 = this.y;
    t6 = other.get$y();
    if (typeof t1 !== "number")
      return this.$$sub$bailout(3, other, t1, t3);
    if (typeof t6 !== "number")
      return this.$$sub$bailout(4, 0, t1, t3, t6);
    return $.Vector$(t3, t1 - t6);
  },
  $$sub$bailout: function(state0, other, t1, t3, t6) {
    switch (state0) {
      case 0:
        t1 = this.x;
      case 1:
        state0 = 0;
        t3 = other.get$x();
      case 2:
        state0 = 0;
        t3 = $.$$sub(t1, t3);
        t1 = this.y;
      case 3:
        state0 = 0;
        t6 = other.get$y();
      case 4:
        state0 = 0;
        return $.Vector$(t3, $.$$sub(t1, t6));
    }
  },
  $add: function(other) {
    var t1, t3, t6;
    t1 = this.x;
    t3 = other.get$x();
    if (typeof t1 !== "number")
      return this.$$add$bailout(1, other, t1);
    if (typeof t3 !== "number")
      return this.$$add$bailout(2, other, t1, t3);
    t3 = t1 + t3;
    t1 = this.y;
    t6 = other.get$y();
    if (typeof t1 !== "number")
      return this.$$add$bailout(3, other, t1, t3);
    if (typeof t6 !== "number")
      return this.$$add$bailout(4, 0, t1, t3, t6);
    return $.Coordinate$(t3, t1 + t6);
  },
  $$add$bailout: function(state0, other, t1, t3, t6) {
    switch (state0) {
      case 0:
        t1 = this.x;
      case 1:
        state0 = 0;
        t3 = other.get$x();
      case 2:
        state0 = 0;
        t3 = $.$$add(t1, t3);
        t1 = this.y;
      case 3:
        state0 = 0;
        t6 = other.get$y();
      case 4:
        state0 = 0;
        return $.Coordinate$(t3, $.$$add(t1, t6));
    }
  },
  $eq: function(other) {
    var t1 = other == null;
    if (t1)
      return false;
    return !t1 && $.$$eq(this.x, other.get$x()) === true && $.$$eq(this.y, other.get$y()) === true;
  },
  toString$0: function() {
    return "{x:" + $.S(this.x) + ", y:" + $.S(this.y) + "}";
  }
};

$$.Size = {"": "Object;width>,height>",
  $eq: function(other) {
    var t1 = other == null;
    if (t1)
      return false;
    return !t1 && $.$$eq(this.width, other.get$width()) === true && $.$$eq(this.height, other.get$height()) === true;
  },
  get$area: function() {
    return $.$$mul(this.width, this.height);
  },
  get$aspectRatio: function() {
    return $.$$div(this.width, this.height);
  },
  isEmpty$0: function() {
    var t1 = this.get$area();
    if (typeof t1 !== "number")
      return this.isEmpty$0$bailout(1, t1);
    return t1 === 0;
  },
  isEmpty$0$bailout: function(state0, t1) {
    return $.$$eq(t1, 0);
  },
  get$isEmpty: function() {
    return new $.BoundClosure$0(this, "isEmpty$0");
  },
  get$isValid: function() {
    var t1, t2;
    t1 = this.width;
    if ($.isValidNumber(t1) === true) {
      t2 = this.height;
      t1 = $.isValidNumber(t2) === true && $.$$ge(t1, 0) === true && $.$$ge(t2, 0) === true;
    } else
      t1 = false;
    return t1;
  },
  scale$1: function(magnitude) {
    return $.Size$($.$$mul(this.width, magnitude), $.$$mul(this.height, magnitude));
  },
  $mul: function(magnitude) {
    return this.scale$1(magnitude);
  },
  toString$0: function() {
    return "(" + $.S(this.width) + " x " + $.S(this.height) + ")";
  }
};

$$.TarjanCycleDetect = {"": "Object;_liblib1$_index,_stack,_scc,_liblib1$_list",
  _executeTarjan$0: function() {
    var t1, t2;
    for (t1 = $.CONSTANT1.get$iterator($.List_List$from(this._liblib1$_list.getSourceNodeSet$0())); t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      if ($.$$eq(t2.get$index(), -1) === true)
        this._tarjan$1(t2);
    }
    return this._scc;
  },
  _tarjan$1: function(v) {
    var t1, t3, t2, t4, component, n;
    v.set$index(this._liblib1$_index);
    v.set$lowlink(this._liblib1$_index);
    t1 = this._liblib1$_index;
    if (typeof t1 !== "number")
      return this._tarjan$1$bailout(1, v, t1);
    this._liblib1$_index = t1 + 1;
    t3 = this._stack;
    $.CONSTANT1.insertRange$3(t3, 0, 1, v);
    for (t1 = $.iterator(this._liblib1$_list.getAdjacent$1(v)); t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      t4 = t2.get$index();
      if (typeof t4 !== "number")
        return this._tarjan$1$bailout(2, v, t1, t3, t2, t4);
      if (t4 === -1) {
        this._tarjan$1(t2);
        v.set$lowlink($.min(v.get$lowlink(), t2.get$lowlink()));
      } else {
        t4 = $.CONSTANT1.indexOf$1(t3, t2);
        if (typeof t4 !== "number")
          return this._tarjan$1$bailout(3, v, t1, t3, t2, t4);
        if (t4 >= 0)
          v.set$lowlink($.min(v.get$lowlink(), t2.get$index()));
      }
    }
    if ($.$$eq(v.get$lowlink(), v.get$index()) === true) {
      component = $.List_List(0);
      do {
        if (0 >= t3.length)
          throw $.ioore(0);
        n = t3[0];
        $.CONSTANT1.removeRange$2(t3, 0, 1);
        component.push(n.get$value());
      } while ($.$$eq(n, v) !== true);
      this._scc.push(component);
    }
  },
  _tarjan$1$bailout: function(state0, v, t1, t3, t2, t4) {
    switch (state0) {
      case 0:
        v.set$index(this._liblib1$_index);
        v.set$lowlink(this._liblib1$_index);
        t1 = this._liblib1$_index;
      case 1:
        state0 = 0;
        this._liblib1$_index = $.$$add(t1, 1);
        t3 = this._stack;
        $.CONSTANT1.insertRange$3(t3, 0, 1, v);
        t1 = $.iterator(this._liblib1$_list.getAdjacent$1(v));
      default:
        var component, n;
        L0:
          while (true)
            switch (state0) {
              case 0:
                if (!(t1.moveNext$0() === true))
                  break L0;
                t2 = t1.get$current();
                t4 = t2.get$index();
              case 2:
                state0 = 0;
              case 3:
                if (state0 === 0 && $.$$eq(t4, -1) === true) {
                  this._tarjan$1(t2);
                  v.set$lowlink($.min(v.get$lowlink(), t2.get$lowlink()));
                } else
                  switch (state0) {
                    case 0:
                      t4 = $.CONSTANT1.indexOf$1(t3, t2);
                    case 3:
                      state0 = 0;
                      if ($.$$ge(t4, 0) === true)
                        v.set$lowlink($.min(v.get$lowlink(), t2.get$index()));
                  }
            }
        if ($.$$eq(v.get$lowlink(), v.get$index()) === true) {
          component = $.List_List(0);
          do {
            if (0 >= t3.length)
              throw $.ioore(0);
            n = t3[0];
            $.CONSTANT1.removeRange$2(t3, 0, 1);
            component.push(n.get$value());
          } while ($.$$eq(n, v) !== true);
          this._scc.push(component);
        }
    }
  }
};

$$._TarjanNode = {"": "Object;value>,index=,lowlink=",
  get$hashCode: function() {
    return $.hashCode(this.value);
  },
  $eq: function(other) {
    if (other == null)
      return false;
    return $.$$eq(other.get$value(), this.value);
  }
};

$$._TarjanList = {"": "Object;_nodes",
  getSourceNodeSet$0: function() {
    return this._nodes.get$keys();
  },
  getAdjacent$1: function(v) {
    var nodes = this._nodes.$index(v);
    if (nodes == null)
      return [];
    else
      return nodes;
  }
};

$$.Vector = {"": "Coordinate;x,y",
  get$length: function() {
    var t1, t3;
    t1 = this.x;
    if (typeof t1 !== "number")
      return this.get$length$bailout(1, t1);
    t1 *= t1;
    t3 = this.y;
    if (typeof t3 !== "number")
      return this.get$length$bailout(2, t1, t3);
    return $.sqrt(t1 + t3 * t3);
  },
  get$length$bailout: function(state0, t1, t3) {
    switch (state0) {
      case 0:
        t1 = this.x;
      case 1:
        state0 = 0;
        t1 = $.$$mul(t1, t1);
        t3 = this.y;
      case 2:
        state0 = 0;
        return $.sqrt($.$$add(t1, $.$$mul(t3, t3)));
    }
  },
  $add: function(other) {
    var t1, t3, t6;
    t1 = this.x;
    t3 = other.get$x();
    if (typeof t1 !== "number")
      return this.$$add$bailout1(1, other, t1);
    if (typeof t3 !== "number")
      return this.$$add$bailout1(2, other, t1, t3);
    t3 = t1 + t3;
    t1 = this.y;
    t6 = other.get$y();
    if (typeof t1 !== "number")
      return this.$$add$bailout1(3, other, t1, t3);
    if (typeof t6 !== "number")
      return this.$$add$bailout1(4, 0, t1, t3, t6);
    return $.Vector$(t3, t1 + t6);
  },
  $$add$bailout1: function(state0, other, t1, t3, t6) {
    switch (state0) {
      case 0:
        t1 = this.x;
      case 1:
        state0 = 0;
        t3 = other.get$x();
      case 2:
        state0 = 0;
        t3 = $.$$add(t1, t3);
        t1 = this.y;
      case 3:
        state0 = 0;
        t6 = other.get$y();
      case 4:
        state0 = 0;
        return $.Vector$(t3, $.$$add(t1, t6));
    }
  },
  $mul: function(magnitude) {
    return this.scale$1(magnitude);
  },
  scale$1: function(magnitude) {
    return $.Vector$($.$$mul(this.x, magnitude), $.$$mul(this.y, magnitude));
  }
};

$$.HtmlView = {"": "Object;",
  get$node: function() {
    return this._node;
  },
  markDirty$0: function() {
    this._dirty = true;
  },
  draw$0: function() {
    if (this._dirty) {
      this.updateElement$0();
      this._dirty = false;
    }
  },
  HtmlView$1: function(_node) {
    $.requireArgumentNotNull(this._node, "node");
    this._dirty = true;
  }
};

$$.MouseManager = {"": "Object;_stage,_mouseDownThing,_draggingThing,_dragCoordinate",
  get$_isDragging: function() {
    return !(this._dragCoordinate == null);
  },
  _mouseMove$1: function(e) {
    var t1, items, cursor, args, t2;
    t1 = $.Coordinate$(e.get$offsetX(), e.get$offsetY());
    items = $.Mouse_markMouseOver(this._stage, t1);
    t1 = this._draggingThing;
    cursor = !(t1 == null) ? $.get$MouseManager__cursorProperty().get$1(t1) : null;
    t1 = $.getInterceptor$JSArrayJSString(items);
    if ($.$$gt(t1.get$length(items), 0) === true) {
      args = $.ThingMouseEventArgs$(t1.$index(items, 0), e);
      for (t1 = t1.get$iterator(items); t1.moveNext$0() === true;) {
        t2 = t1.get$current();
        $.get$MouseManager__mouseMoveEvent().fireEvent$2(t2, args);
        if (cursor == null)
          cursor = $.get$MouseManager__cursorProperty().get$1(t2);
      }
    }
    this._updateCursor$1(cursor);
  },
  get$_mouseMove: function() {
    return new $.BoundClosure$1(this, "_mouseMove$1");
  },
  _mouseOut$1: function(e) {
    var t1 = this._stage;
    $.Mouse_markMouseOver(t1, null);
    $.get$MouseManager__mouseOutEvent().fireEvent$2(t1, $.CONSTANT8);
    this._updateCursor$1(null);
  },
  get$_mouseOut: function() {
    return new $.BoundClosure$1(this, "_mouseOut$1");
  },
  _mouseUp$1: function(e) {
    var t1, thing;
    t1 = $.Coordinate$(e.get$offsetX(), e.get$offsetY());
    thing = $.firstMatching($.Mouse_markMouseOver(this._stage, t1), new $.MouseManager__mouseUp_anon(), new $.MouseManager__mouseUp_anon0());
    if (!(thing == null)) {
      this._doMouseUp$2(thing, e);
      if ($.$$eq(thing, this._mouseDownThing) === true)
        this._doClick$2(thing, e);
      this._mouseDownThing = null;
    }
  },
  get$_mouseUp: function() {
    return new $.BoundClosure$1(this, "_mouseUp$1");
  },
  _mouseDown$1: function(e) {
    var coord, t1, t2;
    coord = $.Coordinate$(e.get$offsetX(), e.get$offsetY());
    for (t1 = $.iterator($.Mouse_markMouseOver(this._stage, coord)); t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      if ($.get$MouseManager__isDraggableProperty().get$1(t2) === true) {
        this._draggingThing = t2;
        this._startDrag$2(this._draggingThing, e);
        break;
      } else if ($.get$MouseManager__isClickableProperty().get$1(t2) === true) {
        this._mouseDownThing = t2;
        this._doMouseDown$2(this._mouseDownThing, e);
        break;
      }
    }
  },
  get$_mouseDown: function() {
    return new $.BoundClosure$1(this, "_mouseDown$1");
  },
  _updateCursor$1: function(cursor) {
    if (cursor == null)
      cursor = "auto";
    this._stage.get$_canvas().get$style().set$cursor(cursor);
  },
  _doMouseDown$2: function(thing, e) {
    var args = $.ThingMouseEventArgs$(thing, e);
    $.get$MouseManager__mouseDownEvent().fireEvent$2(thing, args);
  },
  _doMouseUp$2: function(thing, e) {
    var args = $.ThingMouseEventArgs$(thing, e);
    $.get$MouseManager__mouseUpEvent().fireEvent$2(thing, args);
  },
  _doClick$2: function(thing, e) {
    var args = $.ThingMouseEventArgs$(thing, e);
    $.get$MouseManager__clickEvent().fireEvent$2(thing, args);
  },
  _startDrag$2: function(thing, e) {
    var args = $.ThingDragStartingEventArgs$(thing, e);
    $.get$MouseManager__dragStartingEvent().fireEvent$2(thing, args);
    if (args.get$isCanceled() !== true) {
      e.preventDefault$0();
      this._dragCoordinate = $.Coordinate$(e.get$clientX(), e.get$clientY());
    }
  },
  _windowMouseMove$1: function(e) {
    var newLoc, delta, args;
    if (this.get$_isDragging() === true) {
      newLoc = $.Coordinate$(e.get$clientX(), e.get$clientY());
      delta = newLoc.$sub(this._dragCoordinate);
      args = $.ThingDragEventArgs$(this._draggingThing, e, delta);
      $.get$MouseManager__dragEvent().fireEvent$2(this._draggingThing, args);
      this._dragCoordinate = newLoc;
    }
  },
  get$_windowMouseMove: function() {
    return new $.BoundClosure$1(this, "_windowMouseMove$1");
  },
  _windowMouseUp$1: function(e) {
    this._endDrag$0();
  },
  get$_windowMouseUp: function() {
    return new $.BoundClosure$1(this, "_windowMouseUp$1");
  },
  _windowBlur$1: function(e) {
    this._endDrag$0();
  },
  get$_windowBlur: function() {
    return new $.BoundClosure$1(this, "_windowBlur$1");
  },
  _endDrag$0: function() {
    if (this.get$_isDragging() === true) {
      this._dragCoordinate = null;
      this._draggingThing = null;
    }
  },
  MouseManager$_internal$1: function(_stage) {
    var t1 = this._stage;
    t1.get$_canvas().get$onMouseMove().listen$1(this.get$_mouseMove());
    t1.get$_canvas().get$onMouseOut().listen$1(this.get$_mouseOut());
    t1.get$_canvas().get$onMouseUp().listen$1(this.get$_mouseUp());
    t1.get$_canvas().get$onMouseDown().listen$1(this.get$_mouseDown());
    $.window().get$onMouseMove().listen$1(this.get$_windowMouseMove());
    $.window().get$onMouseUp().listen$1(this.get$_windowMouseUp());
    $.window().get$onBlur().listen$1(this.get$_windowBlur());
  }
};

$$.ThingDragStartingEventArgs = {"": "ThingMouseEventArgs;_liblib9$_canceled,thing,sourceEvent",
  get$isCanceled: function() {
    return this._liblib9$_canceled;
  },
  cancel$0: function() {
    this._liblib9$_canceled = true;
  }
};

$$.ThingDragEventArgs = {"": "ThingMouseEventArgs;delta>,thing,sourceEvent"};

$$.ThingMouseEventArgs = {"": "EventArgs;thing>,sourceEvent",
  ThingMouseEventArgs$2: function(thing, sourceEvent) {
  }
};

$$.ParentThing = {"": "Thing;",
  childInvalidated$1: function(child) {
    this.invalidateDraw$0();
  },
  update$0: function() {
    this._forEach$1(new $.ParentThing_update_anon());
    $.Thing.prototype.update$0.call(this);
  },
  drawOverride$1: function(ctx) {
    this._forEach$1(new $.ParentThing_drawOverride_anon(ctx));
  },
  _forEach$1: function(f) {
    var $length, i;
    $length = this.get$visualChildCount();
    if (typeof $length !== "number")
      return this._forEach$1$bailout(1, f, $length);
    for (i = 0; i < $length; ++i)
      f.call$1(this.getVisualChild$1(i));
  },
  _forEach$1$bailout: function(state0, f, $length) {
    var i;
    for (i = 0; $.CONSTANT5.$lt(i, $length); ++i)
      f.call$1(this.getVisualChild$1(i));
  },
  $isParentThing: true
};

$$.Thing = {"": "AttachableObject;",
  get$width: function() {
    return this._width;
  },
  set$width: function(value) {
    this._width = value;
    this.invalidateDraw$0();
  },
  get$height: function() {
    return this._height;
  },
  set$height: function(value) {
    this._height = value;
    this.invalidateDraw$0();
  },
  get$size: function() {
    return $.Size$(this._width, this._height);
  },
  get$parent: function() {
    return this._parent;
  },
  set$cacheEnabled: function(value) {
    $.requireArgumentNotNull(value, "value");
    if ($.$$eq(value, this._cacheEnabled) !== true) {
      this._cacheEnabled = value;
      if (this._cacheEnabled !== true)
        this._cacheCanvas = null;
    }
  },
  getTransform$0: function() {
    var tx = $.AffineTransform$(1, 0, 0, 1, 0, 0);
    $.CONSTANT1.forEach$1(this._transforms, tx.get$concatenate());
    return tx;
  },
  update$0: function() {
  },
  drawCore$1: function(ctx) {
    ctx.save$0();
    $.CanvasUtil_transform(ctx, this.getTransform$0());
    ctx.set$globalAlpha($.$$mul(ctx.get$globalAlpha(), this._alpha));
    if (this._cacheEnabled === true)
      this._drawCached$1(ctx);
    else
      this._drawNormal$1(ctx);
    ctx.restore$0();
  },
  addTransform$0: function() {
    this.validateNotDisposed$0();
    var tx = $.AffineTransform$(1, 0, 0, 1, 0, 0);
    this._transforms.push(tx);
    return tx;
  },
  invalidateDraw$0: function() {
    this.validateNotDisposed$0();
    if (!(this._lastDrawTime == null)) {
      this._lastDrawTime = null;
      this._invalidateParent$0();
    }
  },
  registerParent$1: function($parent) {
    $.require(this._parent == null, "parent already set");
    $.requireArgumentNotNull($parent, "parent");
    this._parent = $parent;
  },
  _stageDraw$1: function(ctx) {
    var t1;
    this.update$0();
    t1 = this._lastDrawTime;
    this.drawCore$1(ctx);
    return t1 == null;
  },
  _drawCached$1: function(ctx) {
    var t1;
    if (this._lastDrawTime == null) {
      if (this._cacheCanvas == null)
        this._cacheCanvas = $.CanvasElement_CanvasElement(null, null);
      t1 = $.toInt(this.get$width());
      this._cacheCanvas.set$width(t1);
      t1 = $.toInt(this.get$height());
      this._cacheCanvas.set$height(t1);
      this._drawNormal$1(this._cacheCanvas.get$context2d());
    }
    ctx.drawImage$3(this._cacheCanvas, 0, 0);
  },
  _drawNormal$1: function(ctx) {
    this._lastDrawTime = $.DateTime$_now().millisecondsSinceEpoch;
    this.drawOverride$1(ctx);
  },
  _invalidateParent$0: function() {
    this._invalidatedEventHandle.fireEvent$1($.CONSTANT8);
    this._parent.childInvalidated$1(this);
  }
};

$$.Stage = {"": "AttachableObject;_invalidatedEventHandle,_canvas>,rootThing>,_ctx,_propertyValues,_eventHandlers,_disposed",
  get$invalidated: function() {
    return this._invalidatedEventHandle;
  },
  draw$0: function() {
    var t1, t2;
    this.validateNotDisposed$0();
    t1 = this._ctx;
    t2 = this._canvas;
    if (t1 == null)
      this._ctx = t2.get$context2d();
    else
      t1.clearRect$4(0, 0, t2.get$width(), t2.get$height());
    return this.rootThing._stageDraw$1(this._ctx);
  },
  childInvalidated$1: function(child) {
    this.validateNotDisposed$0();
    this._invalidatedEventHandle.fireEvent$1($.CONSTANT8);
  },
  Stage$2: function(_canvas, rootThing) {
    this.rootThing.registerParent$1(this);
  }
};

$$.StageWrapper = {"": "DisposableImpl;rootThing>",
  requestFrame$0: function() {
    if (!this._frameRequested) {
      this._frameRequested = true;
      window.requestAnimationFrame$1(this.get$drawFrame());
    }
  },
  drawFrame$1: function(highResTime) {
    this._frameRequested = false;
    this.stage.draw$0();
  },
  get$drawFrame: function() {
    return new $.BoundClosure$1(this, "drawFrame$1");
  },
  StageWrapper$2: function(canvas, rootThing) {
    this._invalidatedEventId = $.add(this.stage.get$invalidated(), new $.anon9(this));
  }
};

$$.CalcEngine = {"": "Object;_distanceElectionMapper,_pluralityElectionMapper,_condorcetElectionMapper,_irvElectionMapper,_voterHexMapper,_liblib6$_highlightCandidates",
  get$locationData: function() {
    return this._distanceElectionMapper.get$input();
  },
  set$locationData: function(data) {
    $.requireArgumentNotNull(data, "data");
    this._distanceElectionMapper.set$input(data);
  },
  candidatesMoved$0: function() {
    this.set$locationData(this.get$locationData());
  },
  set$hoverPair: function(pair) {
    this._liblib6$_highlightCandidates = pair;
    this._updateVoterHexMapper$0();
  },
  get$distanceElection: function() {
    return this._distanceElectionMapper.get$output();
  },
  get$pluralityElection: function() {
    return this._pluralityElectionMapper.get$output();
  },
  get$condorcetElection: function() {
    return this._condorcetElectionMapper.get$output();
  },
  get$irvElection: function() {
    return this._irvElectionMapper.get$output();
  },
  get$voterHexMap: function() {
    return this._voterHexMapper.get$output();
  },
  addCandidate$0: function() {
    var newData = this.get$locationData().cloneAndAddCandidate$0();
    this._distanceElectionMapper.set$input(newData);
  },
  removeCandidate$1: function(candidate) {
    var newData = this.get$locationData().cloneAndRemove$1(candidate);
    this._distanceElectionMapper.set$input(newData);
  },
  get$locationDataChanged: function() {
    return this._distanceElectionMapper.get$inputChanged();
  },
  get$distanceElectionChanged: function() {
    return this._distanceElectionMapper.get$outputChanged();
  },
  get$pluralityElectionChanged: function() {
    return this._pluralityElectionMapper.get$outputChanged();
  },
  get$condorcetElectionChanged: function() {
    return this._condorcetElectionMapper.get$outputChanged();
  },
  get$irvElectionChanged: function() {
    return this._irvElectionMapper.get$outputChanged();
  },
  get$voterHueMapperChanged: function() {
    return this._voterHexMapper.get$outputChanged();
  },
  _distanceElectionChanged$0: function() {
    var t1 = this.get$distanceElection().get$ballots();
    this._pluralityElectionMapper.set$input(t1);
    t1 = this.get$distanceElection().get$ballots();
    this._condorcetElectionMapper.set$input(t1);
    t1 = this.get$distanceElection().get$ballots();
    this._irvElectionMapper.set$input(t1);
    this._updateVoterHexMapper$0();
  },
  _updateVoterHexMapper$0: function() {
    var val = $.Tuple3$(this.get$distanceElection(), this.get$locationData(), this._liblib6$_highlightCandidates);
    this._voterHexMapper.set$input(val);
  },
  CalcEngine$0: function() {
    $.add(this._distanceElectionMapper.get$outputChanged(), new $.anon3(this));
  }
};

$$._DistanceElectionMapper = {"": "SendPortValue;_sendPort,inputSerializer,outputDeserializer,_completer,_innerFuture,_input,_liblib7$_future,_output,_pending,_outputChangedHandle,_inputChangedHandle,_errorHandle"};

$$._PluralityElectionMapper = {"": "SendPortValue;_sendPort,inputSerializer,outputDeserializer,_completer,_innerFuture,_input,_liblib7$_future,_output,_pending,_outputChangedHandle,_inputChangedHandle,_errorHandle"};

$$._CondorcetElectionMapper = {"": "SendPortValue;_sendPort,inputSerializer,outputDeserializer,_completer,_innerFuture,_input,_liblib7$_future,_output,_pending,_outputChangedHandle,_inputChangedHandle,_errorHandle"};

$$._IrvElectionMapper = {"": "SendPortValue;_sendPort,inputSerializer,outputDeserializer,_completer,_innerFuture,_input,_liblib7$_future,_output,_pending,_outputChangedHandle,_inputChangedHandle,_errorHandle"};

$$._VoterHexMapper = {"": "SendPortValue;_sendPort,inputSerializer,outputDeserializer,_completer,_innerFuture,_input,_liblib7$_future,_output,_pending,_outputChangedHandle,_inputChangedHandle,_errorHandle"};

$$.FutureValue = {"": "Object;",
  get$input: function() {
    return this._input;
  },
  set$input: function(value) {
    this._input = value;
    if (this._liblib7$_future == null)
      this._startFuture$0();
    else
      this._pending = true;
    this._inputChangedHandle.fireEvent$1($.CONSTANT8);
  },
  get$output: function() {
    return this._output;
  },
  get$outputChanged: function() {
    return this._outputChangedHandle;
  },
  get$inputChanged: function() {
    return this._inputChangedHandle;
  },
  get$error: function() {
    return this._errorHandle;
  },
  _startFuture$0: function() {
    this._liblib7$_future = this.getFuture$1(this._input);
    this._liblib7$_future.then$2$onError(this.get$_futureCompleted(), this.get$_futureException());
  },
  _futureException$1: function(exception) {
    this._liblib7$_future = null;
    this._errorHandle.fireEvent$1(exception);
    this._cleanup$0();
    return true;
  },
  get$_futureException: function() {
    return new $.BoundClosure$1(this, "_futureException$1");
  },
  _futureCompleted$1: function(value) {
    this._liblib7$_future = null;
    this._output = value;
    this._outputChangedHandle.fireEvent$1($.CONSTANT8);
    this._cleanup$0();
  },
  get$_futureCompleted: function() {
    return new $.BoundClosure$1(this, "_futureCompleted$1");
  },
  _cleanup$0: function() {
    if (this._pending) {
      this._pending = false;
      this._startFuture$0();
    }
  }
};

$$.FutureValueResult = {"": "Object;value>,error>,stackTrace>,_outputSerializer",
  get$isException: function() {
    return !(this.error == null);
  },
  $eq: function(other) {
    var t1 = other == null;
    if (t1)
      return false;
    return !t1 && $.$$eq(other.get$value(), this.value) === true && $.$$eq(other.get$error(), this.error) === true && $.$$eq(other.get$stackTrace(), this.stackTrace) === true;
  },
  FutureValueResult$fromException$2: function(error, stackTrace) {
    $.requireArgumentNotNull(this.error, "error");
  }
};

$$.SendPortValue = {"": "FutureValue;",
  inputSerializer$1: function(arg0) {
    return this.inputSerializer.call$1(arg0);
  },
  outputDeserializer$1: function(arg0) {
    return this.outputDeserializer.call$1(arg0);
  },
  getFuture$1: function(value) {
    var t1, t2;
    this._completer = $._CompleterImpl$();
    t1 = this.inputSerializer;
    t2 = this._sendPort;
    if (t1 == null)
      this._innerFuture = t2.call$1(value);
    else
      this._innerFuture = t2.call$1(this.inputSerializer$1(value));
    this._innerFuture.then$1(this.get$__futureCompleted());
    return this._completer.get$future();
  },
  __futureCompleted$1: function(value) {
    this._innerFuture = null;
    if (typeof value === "object" && value !== null && value.$isMap() && $.FutureValueResult_isMyMap(value) === true)
      this._sendValueResultCompleted$1($.FutureValueResult_FutureValueResult$fromMap(value));
    else
      this._complete$1(value);
  },
  get$__futureCompleted: function() {
    return new $.BoundClosure$1(this, "__futureCompleted$1");
  },
  _sendValueResultCompleted$1: function(value) {
    if (value.get$isException() === true)
      this._completeException$2(value.get$error(), value.get$stackTrace());
    else
      this._complete$1(value.get$value());
  },
  _complete$1: function(rawValue) {
    var c = this._completer;
    this._completer = null;
    c.complete$1(this._deserializer$1(rawValue));
  },
  _completeException$2: function(exception, stack) {
    var c = this._completer;
    this._completer = null;
    c.completeError$2(exception, stack);
  },
  _deserializer$1: function(input) {
    if (this.outputDeserializer == null)
      return input;
    else
      return this.outputDeserializer$1(input);
  }
};

$$.MapPlayer = {"": "Player;_liblib8$_id>,name>,_liblib8$_location",
  get$location: function() {
    return this._liblib8$_location;
  },
  set$location: function(value) {
    $.requireArgumentNotNull(value, "value");
    this._liblib8$_location = value;
  },
  get$id: function() {
    return this._liblib8$_id.get$id();
  },
  compareTo$1: function(other) {
    return $.compareTo(this._liblib8$_id, other.get$_liblib8$_id());
  },
  get$hashCode: function() {
    return $.hashCode(this._liblib8$_id);
  },
  $eq: function(other) {
    var t1 = other == null;
    if (t1)
      return false;
    return !t1 && $.$$eq(other.get$_liblib8$_id(), this._liblib8$_id) === true;
  },
  toString$0: function() {
    var t1 = this.name;
    if (t1 == null)
      return "MapPlayer at [" + $.S($.toStringAsFixed(this._liblib8$_location.get$x(), 1)) + ", " + $.S($.toStringAsFixed(this._liblib8$_location.get$y(), 1)) + "]";
    else
      return t1;
  }
};

$$.DistanceElection = {"": "Election;candidates>,ballots>,places>"};

$$.DistanceElectionPlace = {"": "ElectionPlace;avgDistance>,avgDistanceSquared>,place,_items"};

$$.DistanceBallot = {"": "RankedBallot;_distances,rank,choice,voter",
  getDistance$1: function(candidate) {
    var t1 = this._distances;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.getDistance$1$bailout(1, t1, candidate);
    if (candidate !== (candidate | 0))
      throw $.iae(candidate);
    if (candidate < 0 || candidate >= t1.length)
      throw $.ioore(candidate);
    return t1[candidate];
  },
  getDistance$1$bailout: function(state0, t1, candidate) {
    return $.$$index(t1, candidate);
  }
};

$$.LocationData = {"": "Object;candidates>,voters>",
  cloneAndRemove$1: function(mp) {
    var newCans;
    $.requireArgumentNotNull(mp, "mp");
    newCans = $.ReadOnlyCollection$($.where(this.candidates, new $.LocationData_cloneAndRemove_anon(mp)));
    return $.LocationData$(this.voters, newCans);
  },
  cloneAndAddCandidate$0: function() {
    var newCans, i, newName, t1;
    newCans = $.toList(this.candidates);
    if (typeof newCans !== "string" && (typeof newCans !== "object" || newCans === null || newCans.constructor !== Array && !newCans.$isJavaScriptIndexingBehavior()))
      return this.cloneAndAddCandidate$0$bailout(1, newCans);
    for (i = 0; i < newCans.length; ++i)
      if ($.$$gt($.$$sub($.charCodeAt(newCans[i].get$name(), 0), 65), i) === true)
        break;
    newName = $.LocationData_getCandidateName(i);
    if ($._botHelperRandom == null)
      $._botHelperRandom = $.Random_Random(null);
    t1 = $._botHelperRandom.nextDouble$0();
    if ($._botHelperRandom == null)
      $._botHelperRandom = $.Random_Random(null);
    $.insertRange(newCans, i, 1, $.MapPlayer$($.Vector$(t1, $._botHelperRandom.nextDouble$0()).scale$1(10), newName));
    return $.LocationData$(this.voters, $.ReadOnlyCollection$(newCans));
  },
  cloneAndAddCandidate$0$bailout: function(state0, newCans) {
    var t1, i, newName, t2;
    for (t1 = $.getInterceptor$JSArrayJSString(newCans), i = 0; $.CONSTANT5.$lt(i, t1.get$length(newCans)); ++i)
      if ($.$$gt($.$$sub($.charCodeAt(t1.$index(newCans, i).get$name(), 0), 65), i) === true)
        break;
    newName = $.LocationData_getCandidateName(i);
    if ($._botHelperRandom == null)
      $._botHelperRandom = $.Random_Random(null);
    t2 = $._botHelperRandom.nextDouble$0();
    if ($._botHelperRandom == null)
      $._botHelperRandom = $.Random_Random(null);
    t1.insertRange$3(newCans, i, 1, $.MapPlayer$($.Vector$(t2, $._botHelperRandom.nextDouble$0()).scale$1(10), newName));
    return $.LocationData$(this.voters, $.ReadOnlyCollection$(newCans));
  },
  LocationData$2: function(voters, candidates) {
  }
};

$$.ElectionPlace = {"": "ReadOnlyCollection;place>,_items",
  toString$0: function() {
    return "Place: " + $.S(this.place) + "; " + $.S($.Enumerable.prototype.toString$0.call(this));
  },
  ElectionPlace$2: function(place, candidates) {
  }
};

$$.Player = {"": "Object;"};

$$.Election = {"": "Object;"};

$$.Ballot = {"": "Object;voter>",
  $eq: function(other) {
    var t1 = other == null;
    if (t1)
      return false;
    return !t1 && $.$$eq(other.get$voter(), this.voter) === true;
  },
  get$hashCode: function() {
    return $.hashCode(this.voter);
  }
};

$$.RankedBallot = {"": "PluralityBallot;rank>",
  toString$0: function() {
    return "{RankedBallot for '" + $.S(this.voter) + "', ranked " + $.S(this.rank.get$length()) + " candidates}";
  }
};

$$.PluralityBallot = {"": "Ballot;choice>"};

$$.PluralityElection = {"": "Election;ballots>,_ballotGroup,places>",
  get$candidates: function() {
    return this._ballotGroup.getKeys$0();
  }
};

$$.PluralityElectionPlace = {"": "ElectionPlace;voteCount>,place,_items",
  toString$0: function() {
    return "Votes: " + $.S(this.voteCount) + "; " + $.S($.ElectionPlace.prototype.toString$0.call(this));
  },
  PluralityElectionPlace$3: function(place, candidates, voteCount) {
  }
};

$$.CondorcetElection = {"": "Election;_pairs,_profiles,ballots>,places>",
  get$candidates: function() {
    return this._profiles.get$keys();
  },
  getPair$2: function(c1, c2) {
    var filter, t1;
    filter = this._pairs.where$1(new $.CondorcetElection_getPair_anon(c1, c2));
    t1 = $.getInterceptor$JSArrayJSString(filter);
    if (t1.get$isEmpty(filter) === true)
      return;
    else
      return t1.get$first(filter).flip$2(c1, c2);
  }
};

$$.CondorcetPair = {"": "Tuple;ballots>,firstOverSecond>,secondOverFirst>,item1,item2",
  get$winner: function() {
    var t1, t3;
    t1 = this.firstOverSecond;
    if (typeof t1 !== "number")
      return this.get$winner$bailout(1, t1);
    t3 = this.secondOverFirst;
    if (typeof t3 !== "number")
      return this.get$winner$bailout(2, t1, t3);
    if (t1 > t3)
      return this.item1;
    else if (t3 > t1)
      return this.item2;
    else
      return;
  },
  get$winner$bailout: function(state0, t1, t3) {
    switch (state0) {
      case 0:
        t1 = this.firstOverSecond;
      case 1:
        state0 = 0;
        t3 = this.secondOverFirst;
      case 2:
        state0 = 0;
        if ($.$$gt(t1, t3) === true)
          return this.item1;
        else if ($.$$gt(t3, t1) === true)
          return this.item2;
        else
          return;
    }
  },
  get$isTie: function() {
    return $.$$eq(this.firstOverSecond, this.secondOverFirst);
  },
  matches$2: function(can1, can2) {
    var t1, t0;
    $.requireArgumentNotNull(can1, "can1");
    $.requireArgumentNotNull(can2, "can2");
    t1 = $.getInterceptor(can1);
    $.requireArgument(t1.$eq(can1, can2) !== true, "can1 and can2 must be different", null);
    if ($.$$gt(t1.compareTo$1(can1, can2), 0) === true) {
      t0 = can2;
      can2 = can1;
      can1 = t0;
    }
    return $.$$eq(this.item1, can1) === true && $.$$eq(this.item2, can2) === true;
  },
  flip$2: function(can1, can2) {
    var t1, t2, t3, t0, flipped;
    t1 = this.item1;
    t2 = this.item2;
    if ($.$$gt($.compareTo(t1, t2), 0) === true)
      throw $.$$throw("already flipped!");
    $.requireArgumentNotNull(can1, "can1");
    $.requireArgumentNotNull(can2, "can2");
    t3 = $.getInterceptor(can1);
    $.requireArgument(t3.$eq(can1, can2) !== true, "can1 and can2 must be different", null);
    if ($.$$gt(t3.compareTo$1(can1, can2), 0) === true) {
      t0 = can2;
      can2 = can1;
      can1 = t0;
      flipped = true;
    } else
      flipped = false;
    $.requireArgument($.$$eq(can1, t1), "can1", null);
    $.requireArgument($.$$eq(can2, t2), "can1", null);
    if (flipped)
      return $.CondorcetPair$_internal(can2, can1, this.ballots, this.secondOverFirst, this.firstOverSecond);
    else
      return this;
  }
};

$$.CondorcetCandidateProfile = {"": "Object;candidate>,lostTo,beat,tied",
  get$hashCode: function() {
    return $.hashCode(this.candidate);
  },
  toString$0: function() {
    return "[ " + $.S(this.candidate) + ": Beat: " + $.S(this.beat.get$length()) + ", Tied: " + $.S(this.tied.get$length()) + ", Lost to: " + $.S(this.lostTo.get$length());
  }
};

$$.IrvElection = {"": "Election;candidates>,ballots>,rounds>"};

$$.IrvRound = {"": "Object;places>,eliminations>",
  get$isFinal: function() {
    var t1 = this.eliminations.get$length();
    if (typeof t1 !== "number")
      return this.get$isFinal$bailout(1, t1);
    return t1 === 0;
  },
  get$isFinal$bailout: function(state0, t1) {
    return $.$$eq(t1, 0);
  },
  get$eliminatedCandidates: function() {
    return this.eliminations.map$1(new $.IrvRound_eliminatedCandidates_anon());
  },
  get$candidates: function() {
    return $.CollectionUtil_selectMany(this.places, new $.IrvRound_candidates_anon());
  }
};

$$.IrvElimination = {"": "Object;candidate>,_transfers,exhausted",
  getTransferCount$1: function(key) {
    var list = this._transfers.$index(key);
    if (list == null)
      return 0;
    else
      return $.length(list);
  },
  IrvElimination$3: function(candidate, _transfers, exhausted) {
  }
};

$$.CandidateManagerView = {"": "HtmlView;_requestRemoveCandidateHandle,_requestNewCandidateHandle,_candidates,_node,_dirty",
  set$candidates: function(value) {
    this._candidates = value;
    this.markDirty$0();
  },
  get$candidateRemoveRequest: function() {
    return this._requestRemoveCandidateHandle;
  },
  get$newCandidateRequest: function() {
    return this._requestNewCandidateHandle;
  },
  updateElement$0: function() {
    var table, cell, addButton, t1, t2, row, hue, t3, deleteButton;
    $.clear(this.get$node().get$children());
    table = document.$$dom_createElement$1("table");
    cell = table.insertRow$1(-1).insertCell$1(-1);
    cell.set$colSpan(2);
    addButton = document.$$dom_createElement$1("button");
    addButton.set$text("Add Candidate");
    if ($.$$lt($.length(this._candidates), 26) === true)
      addButton.get$onClick().listen$1(this.get$_requestNewCandidate());
    else
      addButton.set$disabled(true);
    $.add(cell.get$children(), addButton);
    t1 = this._candidates;
    if (!(t1 == null))
      for (t1 = $.iterator(t1); t1.moveNext$0() === true;) {
        t2 = t1.get$current();
        row = table.insertRow$1(-1);
        hue = $.LocationData_getHue(t2);
        if (!(hue == null)) {
          t3 = $.HslColor_HslColor(hue, 1, 0.75).toRgb$0().toHex$0();
          row.get$style().set$background(t3);
        }
        cell = row.insertCell$1(-1);
        $.add(cell.get$classes(), "candidate-cell");
        cell.set$innerHtml($.toString(t2));
        cell = row.insertCell$1(-1);
        deleteButton = document.$$dom_createElement$1("button");
        deleteButton.set$text("Delete");
        $.$$indexSet(deleteButton.get$dataAttributes(), "candidate-id", $.toString(t2.get$id()));
        if ($.$$gt($.length(this._candidates), 1) === true)
          deleteButton.get$onClick().listen$1(this.get$_deleteClick());
        else
          deleteButton.set$disabled(true);
        $.add(cell.get$children(), deleteButton);
      }
    $.add(this.get$node().get$children(), table);
  },
  _requestNewCandidate$1: function(args) {
    var source = args.get$toElement();
    this._requestNewCandidateHandle.fireEvent$1($.CONSTANT8);
    source.set$disabled(true);
  },
  get$_requestNewCandidate: function() {
    return new $.BoundClosure$1(this, "_requestNewCandidate$1");
  },
  _deleteClick$1: function(args) {
    var source = args.get$toElement();
    this._removeCandidateWithId$1($.int_parse($.$$index(source.get$dataAttributes(), "candidate-id"), null, null));
    source.set$disabled(true);
  },
  get$_deleteClick: function() {
    return new $.BoundClosure$1(this, "_deleteClick$1");
  },
  _removeCandidateWithId$1: function(id) {
    var candidate = $.singleMatching(this._candidates, new $.CandidateManagerView__removeCandidateWithId_anon(id));
    this._requestRemoveCandidateHandle.fireEvent$1(candidate);
  }
};

$$.PluralityView = {"": "HtmlView;_election,_node,_dirty",
  set$election: function(election) {
    this._election = election;
    this.markDirty$0();
  },
  updateElement$0: function() {
    var table, row, cell, t1, t2, tag, evenPlaceRow, evenCandidateRow, t3, t4, first, t5, t6, hue;
    $.clear(this.get$node().get$children());
    table = document.$$dom_createElement$1("table");
    row = table.insertRow$1(-1);
    cell = $._ElementFactoryProvider_createElement_tag("th");
    $.add(row.get$children(), cell);
    cell.set$innerHtml("Place");
    cell = $._ElementFactoryProvider_createElement_tag("th");
    $.add(row.get$children(), cell);
    cell.set$innerHtml("Candidate");
    cell = $._ElementFactoryProvider_createElement_tag("th");
    $.add(row.get$children(), cell);
    $.add(row.get$classes(), "row-odd");
    cell.set$innerHtml("Votes");
    t1 = this._election;
    if (!(t1 == null))
      for (t2 = $.iterator(t1.get$places()), tag = "th", evenPlaceRow = true, evenCandidateRow = true; t2.moveNext$0() === true;) {
        t1 = t2.get$current();
        for (t3 = $.getInterceptor$JSArray(t1), t4 = t3.get$iterator(t1), first = true; t4.moveNext$0() === true;) {
          t5 = t4.get$current();
          row = table.insertRow$1(-1);
          t6 = row.get$classes();
          $.add(t6, evenPlaceRow ? "row-even" : "row-odd");
          if (first) {
            cell = $._ElementFactoryProvider_createElement_tag("th");
            $.add(row.get$children(), cell);
            $.add(cell.get$classes(), "place-number");
            cell.set$rowSpan(t3.get$length(t1));
            cell.set$innerHtml($.toString(t1.get$place()));
            tag = "th";
          }
          cell = row.insertCell$1(-1);
          $.add(cell.get$classes(), "candidate-cell");
          hue = $.LocationData_getHue(t5);
          if (!(hue == null)) {
            t6 = $.HslColor_HslColor(hue, 1, 0.75).toRgb$0().toHex$0();
            cell.get$style().set$background(t6);
          }
          cell.set$innerHtml($.toString(t5));
          if (first) {
            cell = row.insertCell$1(-1);
            cell.set$rowSpan(t3.get$length(t1));
            cell.set$innerHtml($.toString(t1.get$voteCount()));
            $.add(cell.get$classes(), "vote-count");
            first = false;
          }
          evenCandidateRow = !evenCandidateRow;
        }
        evenPlaceRow = !evenPlaceRow;
      }
    $.add(this.get$node().get$children(), table);
  }
};

$$.DistanceView = {"": "HtmlView;_election,_node,_dirty",
  set$election: function(value) {
    this._election = value;
    this.markDirty$0();
  },
  updateElement$0: function() {
    var table, row, cell, t1, t2, tag, evenPlaceRow, evenCandidateRow, t3, t4, first, t5, t6, hue, cell0;
    $.clear(this.get$node().get$children());
    table = document.$$dom_createElement$1("table");
    row = table.insertRow$1(-1);
    $.add(row.get$classes(), "row-odd");
    cell = $._ElementFactoryProvider_createElement_tag("th");
    $.add(row.get$children(), cell);
    cell.set$innerHtml("Place");
    cell = $._ElementFactoryProvider_createElement_tag("th");
    $.add(row.get$children(), cell);
    cell.set$innerHtml("Candidate");
    cell = $._ElementFactoryProvider_createElement_tag("th");
    $.add(row.get$children(), cell);
    cell.set$innerHtml("Avg Dist");
    cell = $._ElementFactoryProvider_createElement_tag("th");
    $.add(row.get$children(), cell);
    cell.set$innerHtml("Avg Dist\u00b2");
    t1 = this._election;
    if (!(t1 == null))
      for (t2 = $.iterator(t1.get$places()), tag = "th", evenPlaceRow = true, evenCandidateRow = true; t2.moveNext$0() === true;) {
        t1 = t2.get$current();
        for (t3 = $.getInterceptor$JSArray(t1), t4 = t3.get$iterator(t1), first = true; t4.moveNext$0() === true;) {
          t5 = t4.get$current();
          row = table.insertRow$1(-1);
          t6 = row.get$classes();
          $.add(t6, evenPlaceRow ? "row-even" : "row-odd");
          if (first) {
            cell = $._ElementFactoryProvider_createElement_tag("th");
            $.add(row.get$children(), cell);
            $.add(cell.get$classes(), "place-number");
            cell.set$rowSpan(t3.get$length(t1));
            cell.set$innerHtml($.toString(t1.get$place()));
            tag = "th";
          }
          cell = row.insertCell$1(-1);
          $.add(cell.get$classes(), "candidate-cell");
          hue = $.LocationData_getHue(t5);
          if (!(hue == null)) {
            t6 = $.HslColor_HslColor(hue, 1, 0.75).toRgb$0().toHex$0();
            cell.get$style().set$background(t6);
          }
          cell.set$innerHtml($.toString(t5));
          if (first) {
            cell = row.insertCell$1(-1);
            cell.set$rowSpan(t3.get$length(t1));
            cell.set$innerHtml($.toStringAsFixed(t1.get$avgDistance(), 2));
            $.add(cell.get$classes(), "vote-count");
            cell0 = row.insertCell$1(-1);
            cell0.set$rowSpan(t3.get$length(t1));
            cell0.set$innerHtml($.toStringAsFixed(t1.get$avgDistanceSquared(), 2));
            $.add(cell0.get$classes(), "vote-count");
            cell = cell0;
            first = false;
          }
          evenCandidateRow = !evenCandidateRow;
        }
        evenPlaceRow = !evenPlaceRow;
      }
    $.add(this.get$node().get$children(), table);
  }
};

$$.CondorcetView = {"": "HtmlView;_hoverChangedHandle,_election,_candidates,_highlightCandidates,_node,_dirty",
  set$election: function(election) {
    this._election = election;
    this._candidates = null;
    this.markDirty$0();
  },
  get$hoverChanged: function() {
    return this._hoverChangedHandle;
  },
  get$highlightCandidates: function() {
    return this._highlightCandidates;
  },
  updateElement$0: function() {
    var table, row, cell, t1, t2, tag, evenPlaceRow, evenCandidateRow, t3, t4, first, t5, t6, t7, t8, t9, pair, leftColor, rightColor, middleText, cellClass, cellData, cell0, cell1;
    $.clear(this.get$node().get$children());
    table = document.$$dom_createElement$1("table");
    row = table.insertRow$1(-1);
    cell = $._ElementFactoryProvider_createElement_tag("th");
    $.add(row.get$children(), cell);
    $.add(row.get$classes(), "row-odd");
    cell.set$innerHtml("Place");
    cell = $._ElementFactoryProvider_createElement_tag("th");
    $.add(row.get$children(), cell);
    cell.set$innerHtml("Candidate");
    t1 = this._election;
    if (!(t1 == null)) {
      this._candidates = t1.get$places().selectMany$1(new $.CondorcetView_updateElement_anon()).toReadOnlyCollection$0();
      for (t1 = $.iterator(this._candidates); t1.moveNext$0() === true;) {
        t2 = t1.get$current();
        cell = $._ElementFactoryProvider_createElement_tag("th");
        $.add(row.get$children(), cell);
        cell.set$innerHtml($.toString(t2));
        t2 = $.getCandidateHexColor(t2, false);
        cell.get$style().set$background(t2);
        cell.set$colSpan(3);
      }
      for (t1 = $.iterator(this._election.get$places()), tag = "th", evenPlaceRow = true, evenCandidateRow = true; t1.moveNext$0() === true;) {
        t2 = t1.get$current();
        for (t3 = $.getInterceptor$JSArray(t2), t4 = t3.get$iterator(t2), first = true; t4.moveNext$0() === true;) {
          t5 = t4.get$current();
          row = table.insertRow$1(-1);
          t6 = row.get$classes();
          $.add(t6, evenPlaceRow ? "row-even" : "row-odd");
          if (first) {
            cell = $._ElementFactoryProvider_createElement_tag("th");
            $.add(row.get$children(), cell);
            $.add(cell.get$classes(), "place-number");
            cell.set$rowSpan(t3.get$length(t2));
            cell.set$innerHtml($.toString(t2.get$place()));
            tag = "th";
            first = false;
          }
          cell = row.insertCell$1(-1);
          $.add(cell.get$classes(), "candidate-cell");
          t6 = $.getCandidateHexColor(t5, false);
          cell.get$style().set$background(t6);
          t6 = $.getInterceptor(t5);
          cell.set$innerHtml(t6.toString$0(t5));
          for (t7 = $.iterator(this._candidates); t7.moveNext$0() === true;) {
            t8 = t7.get$current();
            t9 = $.getInterceptor(t8);
            if (t9.$eq(t8, t5) === true) {
              cell = row.insertCell$1(-1);
              cell.get$style().set$background("#999999");
              cell.set$colSpan(3);
            } else {
              pair = this._election.getPair$2(t5, t8);
              if (t6.$eq(t5, pair.get$winner()) === true) {
                leftColor = $.getCandidateHexColor(t5, true);
                rightColor = $.getCandidateHexColor(t8, true);
                middleText = "&gt;";
                cellClass = "winner";
              } else if (t9.$eq(t8, pair.get$winner()) === true) {
                leftColor = $.getCandidateHexColor(t5, false);
                rightColor = $.getCandidateHexColor(t8, false);
                middleText = "&lt;";
                cellClass = "loser";
              } else {
                leftColor = $.getCandidateHexColor(t5, true);
                rightColor = $.getCandidateHexColor(t8, true);
                middleText = "=";
                cellClass = "tie";
              }
              cellData = this._getPairElementName$2(t5, t8);
              cell = row.insertCell$1(-1);
              cell.set$innerHtml($.toString(pair.get$firstOverSecond()));
              cell.get$style().set$color(leftColor);
              $.add(cell.get$classes(), "vote-count");
              $.add(cell.get$classes(), "pair-cell");
              $.add(cell.get$classes(), cellData);
              $.add(cell.get$classes(), cellClass);
              $.add(cell.get$classes(), "left_value");
              $.$$indexSet(cell.get$dataAttributes(), "pair-ids", cellData);
              cell0 = row.insertCell$1(-1);
              cell0.set$innerHtml(middleText);
              $.add(cell0.get$classes(), "pair-cell");
              $.add(cell0.get$classes(), cellClass);
              $.add(cell0.get$classes(), cellData);
              $.$$indexSet(cell0.get$dataAttributes(), "pair-ids", cellData);
              cell1 = row.insertCell$1(-1);
              cell1.set$innerHtml($.toString(pair.get$secondOverFirst()));
              cell1.get$style().set$color(rightColor);
              $.add(cell1.get$classes(), "vote-count");
              $.add(cell1.get$classes(), "right_value");
              $.add(cell1.get$classes(), cellClass);
              $.add(cell1.get$classes(), "pair-cell");
              $.add(cell1.get$classes(), cellData);
              $.$$indexSet(cell1.get$dataAttributes(), "pair-ids", cellData);
              cell = cell1;
            }
          }
          evenCandidateRow = !evenCandidateRow;
        }
        evenPlaceRow = !evenPlaceRow;
      }
    }
    table.get$onMouseMove().listen$1(this.get$_onMouseOver());
    table.get$onMouseOut().listen$1(this.get$_onMouseOut());
    $.add(this.get$node().get$children(), table);
  },
  set$_thePair: function(pair) {
    if ($.$$eq(pair, this._highlightCandidates) !== true) {
      this._highlightCandidates = pair;
      this._updateCellHoverStyle$0();
      this._hoverChangedHandle.fireEvent$1($.CONSTANT8);
    }
  },
  _updateCellHoverStyle$0: function() {
    var t1, matchClass;
    $.forEach(this.get$node().queryAll$1("td.pair-cell.hover-pair"), new $.CondorcetView__updateCellHoverStyle_anon("hover-pair"));
    t1 = this._highlightCandidates;
    if (!(t1 == null)) {
      matchClass = this._getPairElementName$2($.$$index(t1, 0), $.$$index(this._highlightCandidates, 1));
      $.forEach(this.get$node().queryAll$1("td.pair-cell." + $.S(matchClass)), new $.CondorcetView__updateCellHoverStyle_anon0("hover-pair"));
    }
  },
  _onMouseOver$1: function(e) {
    var t1, pair;
    t1 = e.get$toElement();
    if (typeof t1 === "object" && t1 !== null && t1.$isElement()) {
      pair = $.CondorcetView__getPair(t1);
      if (!(pair == null)) {
        this.set$_thePair([$.$$index(this._candidates, pair.get$item1()), $.$$index(this._candidates, pair.get$item2())]);
        return;
      }
    }
    this.set$_thePair(null);
  },
  get$_onMouseOver: function() {
    return new $.BoundClosure$1(this, "_onMouseOver$1");
  },
  _onMouseOut$1: function(args) {
    this.set$_thePair(null);
  },
  get$_onMouseOut: function() {
    return new $.BoundClosure$1(this, "_onMouseOut$1");
  },
  _getPairElementName$2: function(can1, can2) {
    var cIndex, oIndex;
    cIndex = $.indexOf0(this._candidates, can1);
    oIndex = $.indexOf0(this._candidates, can2);
    return "pair" + $.S($.min(cIndex, oIndex)) + "_" + $.S($.max(cIndex, oIndex));
  }
};

$$.IrvView = {"": "HtmlView;_hoverChangedHandle,_highlightRound,_election,_node,_dirty",
  get$election: function() {
    return this._election;
  },
  set$election: function(value) {
    this._election = value;
    this.markDirty$0();
  },
  get$hoverChanged: function() {
    return this._hoverChangedHandle;
  },
  get$highlightCandidates: function() {
    var t1 = this._highlightRound;
    if (t1 == null)
      return;
    else
      return $.toList($.$$index(this._election.get$rounds(), t1).get$candidates());
  },
  updateElement$0: function() {
    var table, cell, previousPlaces, i, round, t1, drawPlaces, i0, currentPlace, previousPlace, j, t2, row, t3, t4, el, ei, elimination, foundSelf, transferCount;
    $.clear(this.get$node().get$children());
    if (this.get$election() == null)
      return;
    $.first(this._election.get$rounds()).get$places().selectMany$1(new $.IrvView_updateElement_anon()).toReadOnlyCollection$0();
    table = document.$$dom_createElement$1("table");
    for (cell = null, previousPlaces = null, i = 0; $.CONSTANT5.$lt(i, $.length(this.get$election().get$rounds())); i = i0) {
      round = $.$$index(this.get$election().get$rounds(), i);
      t1 = $.getInterceptor(previousPlaces);
      if (previousPlaces == null)
        drawPlaces = true;
      else if ($.$$lt(t1.get$length(previousPlaces), $.length(round.get$places())) === true)
        drawPlaces = true;
      else
        for (drawPlaces = false, i0 = 0; $.CONSTANT5.$lt(i0, $.length(round.get$places())); ++i0) {
          currentPlace = $.$$index(round.get$places(), i0);
          if (typeof currentPlace !== "string" && (typeof currentPlace !== "object" || currentPlace === null || currentPlace.constructor !== Array && !currentPlace.$isJavaScriptIndexingBehavior()))
            return this.updateElement$0$bailout1(1, i0, cell, t1, previousPlaces, i, round, currentPlace, table, drawPlaces);
          previousPlace = t1.$index(previousPlaces, i0);
          if (typeof previousPlace !== "string" && (typeof previousPlace !== "object" || previousPlace === null || previousPlace.constructor !== Array && !previousPlace.$isJavaScriptIndexingBehavior()))
            return this.updateElement$0$bailout1(2, i0, cell, t1, previousPlaces, i, round, currentPlace, table, drawPlaces, previousPlace);
          if (currentPlace.length !== previousPlace.length)
            drawPlaces = true;
          else
            for (j = 0; j < currentPlace.length; ++j) {
              t2 = currentPlace[j];
              if (j >= previousPlace.length)
                throw $.ioore(j);
              if ($.$$eq(t2, previousPlace[j]) !== true) {
                drawPlaces = true;
                break;
              }
            }
        }
      previousPlaces = round.get$places();
      if (drawPlaces) {
        row = table.insertRow$1(-1);
        row.insertCell$1(-1).set$innerHtml("&nbsp;");
        for (t1 = $.iterator(round.get$places()); t1.moveNext$0() === true;) {
          t2 = t1.get$current();
          cell = $._ElementFactoryProvider_createElement_tag("th");
          $.add(row.get$children(), cell);
          cell.set$colSpan($.length(t2));
          cell.set$innerHtml($.toString(t2.get$place()));
          $.add(cell.get$classes(), "candidate-cell");
        }
        row = table.insertRow$1(-1);
        row.insertCell$1(-1).set$innerHtml("&nbsp;");
        for (t1 = $.iterator(round.get$places()); t1.moveNext$0() === true;)
          for (t2 = $.iterator(t1.get$current()); t2.moveNext$0() === true;) {
            t3 = t2.get$current();
            cell = $._ElementFactoryProvider_createElement_tag("th");
            $.add(row.get$children(), cell);
            cell.set$innerHtml($.toString(t3));
            $.add(cell.get$classes(), "candidate-cell");
            t3 = $.getCandidateHexColor(t3, false);
            cell.get$style().set$background(t3);
          }
      }
      row = table.insertRow$1(-1);
      cell = $._ElementFactoryProvider_createElement_tag("th");
      i0 = i + 1;
      cell.set$innerHtml("Round " + $.S(i0));
      $.add(cell.get$classes(), "irv_round");
      $.$$indexSet(cell.get$dataAttributes(), "roundIndex", $.CONSTANT5.toString$0(i));
      $.add(row.get$children(), cell);
      for (t1 = $.iterator(round.get$places()); t1.moveNext$0() === true;) {
        t2 = t1.get$current();
        for (t3 = $.iterator(t2); t3.moveNext$0() === true;) {
          t4 = t3.get$current();
          cell = row.insertCell$1(-1);
          cell.set$innerHtml($.toString(t2.get$voteCount()));
          $.add(cell.get$classes(), "candidate-cell");
          $.add(cell.get$classes(), "vote-count");
          t4 = $.getCandidateHexColor(t4, false);
          cell.get$style().set$background(t4);
        }
      }
      el = $.length(round.get$eliminations());
      if (typeof el !== "number")
        return this.updateElement$0$bailout1(3, i0, cell, 0, previousPlaces, 0, round, 0, table, 0, 0, el, row);
      for (ei = 0; ei < el; ++ei) {
        elimination = $.$$index(round.get$eliminations(), el - ei - 1);
        row = table.insertRow$1(-1);
        cell = row.insertCell$1(-1);
        cell.set$innerHtml($.toString(elimination.get$candidate()));
        cell.get$style().set$fontStyle("italic");
        cell.get$style().set$textAlign("right");
        for (t1 = $.iterator(round.get$candidates()), foundSelf = false; t1.moveNext$0() === true;) {
          t2 = t1.get$current();
          cell = row.insertCell$1(-1);
          if ($.$$eq(t2, elimination.get$candidate()) === true) {
            cell.set$innerHtml("&larr;");
            foundSelf = true;
          } else {
            transferCount = elimination.getTransferCount$1(t2);
            t2 = $.getInterceptor$JSNumber(transferCount);
            if (t2.$gt(transferCount, 0) === true) {
              cell.set$innerHtml(t2.toString$0(transferCount));
              $.add(cell.get$classes(), "vote-count");
            }
          }
        }
      }
    }
    table.get$onMouseMove().listen$1(this.get$_onMouseOver());
    table.get$onMouseOut().listen$1(this.get$_onMouseOut());
    $.add(this.get$node().get$children(), table);
    this._updateHighlightedRound$1(null);
  },
  updateElement$0$bailout1: function(state0, i0, cell, t1, previousPlaces, i, round, currentPlace, table, drawPlaces, previousPlace, el, row) {
    switch (state0) {
      case 0:
        $.clear(this.get$node().get$children());
        if (this.get$election() == null)
          return;
        $.first(this._election.get$rounds()).get$places().selectMany$1(new $.IrvView_updateElement_anon()).toReadOnlyCollection$0();
        table = document.$$dom_createElement$1("table");
        cell = null;
        previousPlaces = null;
        i = 0;
      default:
        var t2, t3, j, t4, ei, elimination, foundSelf, transferCount;
        L0:
          while (true)
            switch (state0) {
              case 0:
                if (!$.CONSTANT5.$lt(i, $.length(this.get$election().get$rounds())))
                  break L0;
                round = $.$$index(this.get$election().get$rounds(), i);
                t1 = $.getInterceptor(previousPlaces);
              default:
                if (state0 === 0 && previousPlaces == null)
                  drawPlaces = true;
                else
                  switch (state0) {
                    case 0:
                    default:
                      if (state0 === 0 && $.$$lt(t1.get$length(previousPlaces), $.length(round.get$places())) === true)
                        drawPlaces = true;
                      else
                        switch (state0) {
                          case 0:
                            drawPlaces = false;
                            i0 = 0;
                          default:
                            L1:
                              while (true)
                                switch (state0) {
                                  case 0:
                                    if (!$.CONSTANT5.$lt(i0, $.length(round.get$places())))
                                      break L1;
                                    currentPlace = $.$$index(round.get$places(), i0);
                                  case 1:
                                    state0 = 0;
                                    previousPlace = t1.$index(previousPlaces, i0);
                                  case 2:
                                    state0 = 0;
                                    t2 = $.getInterceptor$JSArrayJSString(currentPlace);
                                    t3 = $.getInterceptor$JSArrayJSString(previousPlace);
                                    if ($.$$eq(t2.get$length(currentPlace), t3.get$length(previousPlace)) !== true)
                                      drawPlaces = true;
                                    else
                                      for (j = 0; $.CONSTANT5.$lt(j, t2.get$length(currentPlace)); ++j)
                                        if ($.$$eq(t2.$index(currentPlace, j), t3.$index(previousPlace, j)) !== true) {
                                          drawPlaces = true;
                                          break;
                                        }
                                    ++i0;
                                }
                        }
                  }
                previousPlaces = round.get$places();
                if (drawPlaces) {
                  row = table.insertRow$1(-1);
                  row.insertCell$1(-1).set$innerHtml("&nbsp;");
                  for (t1 = $.iterator(round.get$places()); t1.moveNext$0() === true;) {
                    t2 = t1.get$current();
                    cell = $._ElementFactoryProvider_createElement_tag("th");
                    $.add(row.get$children(), cell);
                    cell.set$colSpan($.length(t2));
                    cell.set$innerHtml($.toString(t2.get$place()));
                    $.add(cell.get$classes(), "candidate-cell");
                  }
                  row = table.insertRow$1(-1);
                  row.insertCell$1(-1).set$innerHtml("&nbsp;");
                  for (t1 = $.iterator(round.get$places()); t1.moveNext$0() === true;)
                    for (t2 = $.iterator(t1.get$current()); t2.moveNext$0() === true;) {
                      t3 = t2.get$current();
                      cell = $._ElementFactoryProvider_createElement_tag("th");
                      $.add(row.get$children(), cell);
                      cell.set$innerHtml($.toString(t3));
                      $.add(cell.get$classes(), "candidate-cell");
                      t3 = $.getCandidateHexColor(t3, false);
                      cell.get$style().set$background(t3);
                    }
                }
                row = table.insertRow$1(-1);
                cell = $._ElementFactoryProvider_createElement_tag("th");
                i0 = i + 1;
                cell.set$innerHtml("Round " + $.S(i0));
                $.add(cell.get$classes(), "irv_round");
                $.$$indexSet(cell.get$dataAttributes(), "roundIndex", $.CONSTANT5.toString$0(i));
                $.add(row.get$children(), cell);
                for (t1 = $.iterator(round.get$places()); t1.moveNext$0() === true;) {
                  t2 = t1.get$current();
                  for (t3 = $.iterator(t2); t3.moveNext$0() === true;) {
                    t4 = t3.get$current();
                    cell = row.insertCell$1(-1);
                    cell.set$innerHtml($.toString(t2.get$voteCount()));
                    $.add(cell.get$classes(), "candidate-cell");
                    $.add(cell.get$classes(), "vote-count");
                    t4 = $.getCandidateHexColor(t4, false);
                    cell.get$style().set$background(t4);
                  }
                }
                el = $.length(round.get$eliminations());
              case 3:
                state0 = 0;
                for (t1 = $.getInterceptor$JSNumber(el), ei = 0; $.CONSTANT5.$lt(ei, el); ++ei) {
                  elimination = $.$$index(round.get$eliminations(), $.$$sub(t1.$sub(el, ei), 1));
                  row = table.insertRow$1(-1);
                  cell = row.insertCell$1(-1);
                  cell.set$innerHtml($.toString(elimination.get$candidate()));
                  cell.get$style().set$fontStyle("italic");
                  cell.get$style().set$textAlign("right");
                  for (t2 = $.iterator(round.get$candidates()), foundSelf = false; t2.moveNext$0() === true;) {
                    t3 = t2.get$current();
                    cell = row.insertCell$1(-1);
                    if ($.$$eq(t3, elimination.get$candidate()) === true) {
                      cell.set$innerHtml("&larr;");
                      foundSelf = true;
                    } else {
                      transferCount = elimination.getTransferCount$1(t3);
                      t3 = $.getInterceptor$JSNumber(transferCount);
                      if (t3.$gt(transferCount, 0) === true) {
                        cell.set$innerHtml(t3.toString$0(transferCount));
                        $.add(cell.get$classes(), "vote-count");
                      }
                    }
                  }
                }
                i = i0;
            }
        table.get$onMouseMove().listen$1(this.get$_onMouseOver());
        table.get$onMouseOut().listen$1(this.get$_onMouseOut());
        $.add(this.get$node().get$children(), table);
        this._updateHighlightedRound$1(null);
    }
  },
  _onMouseOver$1: function(e) {
    var t1 = e.get$toElement();
    if (typeof t1 === "object" && t1 !== null && t1.$isElement())
      if ($.contains1(t1.get$classes(), "irv_round") === true) {
        this._updateHighlightedRound$1($.int_parse($.$$index(t1.get$dataAttributes(), "roundIndex"), null, null));
        return;
      }
    this._updateHighlightedRound$1(null);
  },
  get$_onMouseOver: function() {
    return new $.BoundClosure$1(this, "_onMouseOver$1");
  },
  _onMouseOut$1: function(args) {
    this._updateHighlightedRound$1(null);
  },
  get$_onMouseOut: function() {
    return new $.BoundClosure$1(this, "_onMouseOut$1");
  },
  _updateHighlightedRound$1: function(roundIndex) {
    if ($.$$eq(roundIndex, this._highlightRound) !== true) {
      this._highlightRound = roundIndex;
      this._hoverChangedHandle.fireEvent$1($.CONSTANT8);
    }
  }
};

$$.RootMapElement = {"": "ParentThing;_voterMap,_candidateMap,_tx>,_candidatesMovedHandle,_averageCloseness,_bounds,_radius=,_transforms,_invalidatedEventHandle,_cacheCanvas,_width,_height,_alpha,_cacheEnabled,_lastDrawTime,_parent,_propertyValues,_eventHandlers,_disposed",
  get$candidatesMoved: function() {
    return this._candidatesMovedHandle;
  },
  candidatesMoved$0: function() {
    return this.get$candidatesMoved().call$0();
  },
  get$visualChildCount: function() {
    return 2;
  },
  getVisualChild$1: function(index) {
    switch (index) {
      case 0:
        return this._voterMap;
      case 1:
        return this._candidateMap;
      default:
        throw $.$$throw("bad index, foo!");
    }
  },
  set$locationData: function(data) {
    this.set$voters(data.get$voters());
    this.set$candidates(data.get$candidates());
    this.invalidateDraw$0();
  },
  get$voters: function() {
    return this._voterMap.get$players();
  },
  set$voterHexMap: function(value) {
    this._voterMap.set$playerHexMap(value);
  },
  set$voters: function(value) {
    var vals;
    $.requireArgumentNotNull(value, "value");
    vals = $.Tuple$(1, $.Box$(0, 0, 10, 10));
    this._averageCloseness = vals.item1;
    this._bounds = vals.item2;
    this._radius = null;
    this._voterMap.set$players(value);
  },
  set$candidates: function(value) {
    $.requireArgumentNotNull(value, "value");
    this._candidateMap.set$players(value);
  },
  set$showOnlyPlayers: function(value) {
    this._candidateMap.set$showOnlyPlayers(value);
  },
  dragCandidate$2: function(candidate, delta) {
    var can, t1, newCanLocPix;
    can = $.singleMatching(this._candidateMap.get$players(), new $.RootMapElement_dragCandidate_anon(candidate));
    t1 = this._tx;
    newCanLocPix = $.$$add(t1.transformCoordinate$1(candidate.get$location()), delta);
    can.set$location($.CONSTANT19.constrain$1(t1.createInverse$0().transformCoordinate$1(newCanLocPix)));
    this._candidatesMovedHandle.fireEvent$1($.CONSTANT8);
  },
  update$0: function() {
    var t1, dataScale, t2, t3, scale, offsetY, offsetX;
    t1 = this._bounds;
    if (!(t1 == null) && this._radius == null) {
      dataScale = $.Size$($.$$add(t1.get$width(), this._averageCloseness), $.$$add(this._bounds.get$height(), this._averageCloseness));
      t1 = $.$$gt(dataScale.get$aspectRatio(), this.get$size().get$aspectRatio());
      t2 = dataScale.width;
      t3 = dataScale.height;
      if (t1 === true) {
        scale = $.$$div(this.get$width(), t2);
        offsetY = $.$$div($.$$sub($.$$div(this.get$height(), scale), t3), 2);
        offsetX = 0;
      } else {
        scale = $.$$div(this.get$height(), t3);
        offsetX = $.$$div($.$$sub($.$$div(this.get$width(), scale), t2), 2);
        offsetY = 0;
      }
      t1 = this._tx;
      t1.setToScale$2(scale, scale);
      t1.translate$2($.$$add($.$$add(this._bounds.get$left(), $.$$div(this._averageCloseness, 2)), offsetX), $.$$add($.$$add(this._bounds.get$top(), $.$$div(this._averageCloseness, 2)), offsetY));
      this._radius = $.$$mul(this._averageCloseness, 0.3);
    }
    $.CONSTANT1.forEach$1([this._voterMap, this._candidateMap], new $.RootMapElement_update_anon(this));
    $.ParentThing.prototype.update$0.call(this);
  },
  RootMapElement$2: function(w, h) {
    this._voterMap.registerParent$1(this);
    this._candidateMap.registerParent$1(this);
  }
};

$$.VoterMapElement = {"": "Thing;_players,_tx>,_radius=,_liblib10$_map,_transforms,_invalidatedEventHandle,_cacheCanvas,_width,_height,_alpha,_cacheEnabled,_lastDrawTime,_parent,_propertyValues,_eventHandlers,_disposed",
  setTransform$1: function(value) {
    $.requireArgumentNotNull(value, "value");
    this._tx.setFromTransfrom$1(value);
    this.invalidateDraw$0();
  },
  get$players: function() {
    return this._players;
  },
  set$players: function(value) {
    var t1, t2;
    $.requireArgumentNotNull(value, "value");
    t1 = this._players;
    t2 = $.getInterceptor$JSArray(t1);
    t2.clear$0(t1);
    t2.addAll$1(t1, value);
    this.invalidateDraw$0();
  },
  set$playerHexMap: function(value) {
    this._liblib10$_map = value;
    this.invalidateDraw$0();
  },
  drawOverride$1: function(ctx) {
    var t1;
    for (t1 = $.CONSTANT1.get$iterator(this._players); t1.moveNext$0() === true;)
      this._drawPlayer$2(ctx, t1.get$current());
  },
  _drawPlayer$2: function(ctx, player) {
    var t1, hex, txLoc, t2, t3, t4, t6;
    t1 = this._liblib10$_map;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this._drawPlayer$2$bailout(1, ctx, player, t1);
    if (player !== (player | 0))
      throw $.iae(player);
    if (player < 0 || player >= t1.length)
      throw $.ioore(player);
    hex = t1[player];
    if (typeof hex !== "string")
      return this._drawPlayer$2$bailout(2, ctx, player, 0, hex);
    ctx.set$fillStyle(hex);
    t1 = this._tx;
    txLoc = t1.transformCoordinate$1(player.get$location());
    t2 = txLoc.get$x();
    t3 = txLoc.get$y();
    t4 = this._radius;
    t6 = t1.get$scaleX();
    if (typeof t4 !== "number")
      return this._drawPlayer$2$bailout(3, ctx, 0, t1, 0, t4, t2, t3);
    if (typeof t6 !== "number")
      return this._drawPlayer$2$bailout(4, ctx, 0, 0, 0, t4, t2, t3, t6);
    $.CanvasUtil_centeredCircle(ctx, t2, t3, t4 * t6);
    ctx.fill$0();
  },
  _drawPlayer$2$bailout: function(state0, ctx, player, t1, hex, t4, t2, t3, t6) {
    switch (state0) {
      case 0:
        t1 = this._liblib10$_map;
      case 1:
        state0 = 0;
        hex = $.$$index(t1, player);
      case 2:
        state0 = 0;
        ctx.set$fillStyle(hex == null ? "#999999" : hex);
        t1 = this._tx;
        txLoc = t1.transformCoordinate$1(player.get$location());
        t2 = txLoc.get$x();
        t3 = txLoc.get$y();
        t4 = this._radius;
      case 3:
        state0 = 0;
        t6 = t1.get$scaleX();
      case 4:
        var txLoc;
        state0 = 0;
        $.CanvasUtil_centeredCircle(ctx, t2, t3, $.$$mul(t4, t6));
        ctx.fill$0();
    }
  },
  VoterMapElement$2: function(w, h) {
    this.set$cacheEnabled(true);
    this._radius = 0.3;
  }
};

$$.CandidateMapElement = {"": "ParentThing;_players,_tx>,_radius=,_elements,_showOnlyPlayers,_transforms,_invalidatedEventHandle,_cacheCanvas,_width,_height,_alpha,_cacheEnabled,_lastDrawTime,_parent,_propertyValues,_eventHandlers,_disposed",
  get$visualChildCount: function() {
    this._ensureElements$0();
    return $.length(this._elements);
  },
  getVisualChild$1: function(index) {
    var t1;
    this._ensureElements$0();
    t1 = this._elements;
    if (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior())
      return this.getVisualChild$1$bailout1(1, index, t1);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  getVisualChild$1$bailout1: function(state0, index, t1) {
    return $.$$index(t1, index);
  },
  setTransform$1: function(value) {
    $.requireArgumentNotNull(value, "value");
    this._tx.setFromTransfrom$1(value);
    this.invalidateDraw$0();
  },
  get$players: function() {
    return this._players;
  },
  set$players: function(value) {
    var t1, t2;
    $.requireArgumentNotNull(value, "value");
    t1 = this._players;
    t2 = $.getInterceptor$JSArray(t1);
    t2.clear$0(t1);
    t2.addAll$1(t1, value);
    this._elements = null;
    this.invalidateDraw$0();
  },
  set$showOnlyPlayers: function(value) {
    if (value == null)
      this._showOnlyPlayers = null;
    else
      this._showOnlyPlayers = $.ReadOnlyCollection$(value);
    if (this._elements == null)
      this.invalidateDraw$0();
    else
      this._updateCandidateElements$0();
  },
  _ensureElements$0: function() {
    var t1, t2, t3, rgb, ce, tempTx, t4, t5, t6, t7;
    if (this._elements == null) {
      this._elements = $.List_List(0);
      for (t1 = $.CONSTANT1.get$iterator(this._players), t2 = this._tx; t1.moveNext$0() === true;) {
        t3 = t1.get$current();
        rgb = $.HslColor_HslColor($.LocationData_getHue(t3), 0.5, 0.6).toRgb$0();
        ce = $.CandidateElement$($.$$mul(this._radius, 4), $.$$mul(this._radius, 4), rgb.toHex$0(), t3);
        ce.registerParent$1(this);
        $.MouseManager_setCursor(ce, "pointer");
        $.MouseManager__setBoolProp(ce, $.get$MouseManager__isDraggableProperty(), true);
        $.MouseManager_addDragHandler(ce, this.get$_candidateDragged());
        tempTx = ce.addTransform$0();
        tempTx.concatenate$1(t2);
        t4 = t3.get$location().get$x();
        t5 = this._radius;
        if (typeof t5 !== "number")
          throw $.iae(t5);
        t4 = $.$$sub(t4, 2 * t5);
        t6 = t3.get$location().get$y();
        t7 = this._radius;
        if (typeof t7 !== "number")
          throw $.iae(t7);
        tempTx.translate$2(t4, $.$$sub(t6, 2 * t7));
        $.add(this._elements, ce);
      }
      this._updateCandidateElements$0();
    }
  },
  _candidateDragged$1: function(e) {
    this.get$parent().dragCandidate$2(e.get$thing().get$player(), e.get$delta());
  },
  get$_candidateDragged: function() {
    return new $.BoundClosure$1(this, "_candidateDragged$1");
  },
  _updateCandidateElements$0: function() {
    var t1, t2, t3;
    for (t1 = $.iterator(this._elements); t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      t3 = this._showOnlyPlayers;
      t2.set$hidden(!(t3 == null) && $.$$lt($.indexOf0(t3, t2.get$player()), 0) === true);
    }
  }
};

$$.CandidateElement = {"": "Thing;_color,player>,_text,_tx>,_hidden,_transforms,_invalidatedEventHandle,_cacheCanvas,_width,_height,_alpha,_cacheEnabled,_lastDrawTime,_parent,_propertyValues,_eventHandlers,_disposed",
  get$hidden: function() {
    return this._hidden;
  },
  set$hidden: function(value) {
    if ($.$$eq(value, this._hidden) !== true) {
      this._hidden = value;
      this.invalidateDraw$0();
    }
  },
  drawOverride$1: function(ctx) {
    var shadowDistance;
    if (this.get$hidden() === true) {
      ctx.set$globalAlpha(0.3);
      ctx.set$fillStyle("#999999");
    } else {
      shadowDistance = $.get$Mouse_isMouseDirectlyOverProperty().get$1(this) === true ? 4 : 2;
      ctx.set$shadowColor("black");
      ctx.set$shadowBlur(6);
      ctx.set$shadowOffsetX(shadowDistance);
      ctx.set$shadowOffsetY(shadowDistance);
      ctx.set$fillStyle(this._color);
    }
    $.CanvasUtil_ellipse(ctx, 0, 0, this.get$width(), this.get$height());
    ctx.fill$0();
    ctx.set$shadowColor("transparent");
    ctx.set$font("1px Helvetica");
    ctx.set$textAlign("center");
    ctx.set$textBaseline("baseline");
    ctx.set$fillStyle("black");
    ctx.fillText$3(this._text, $.$$mul(this.get$width(), 0.5), $.$$mul(this.get$height(), 0.8));
  },
  CandidateElement$4: function(w, h, _color, p) {
    this._tx = this.addTransform$0();
  }
};

$$.ToString__emitMap_anon = {"": "Closure;box_0,result_1,visiting_2",
  call$2: function(k, v) {
    var t1, t2;
    t1 = this.box_0;
    if (t1.first_0 !== true)
      $.add(this.result_1, ", ");
    t1.first_0 = false;
    t1 = this.result_1;
    t2 = this.visiting_2;
    $.ToString__emitObject(k, t1, t2);
    $.add(t1, ": ");
    $.ToString__emitObject(v, t1, t2);
  }
};

$$._LinkedHashMapImpl_forEach_anon = {"": "Closure;f_0",
  call$1: function(entry) {
    this.f_0.call$2(entry.get$key(), entry.get$value());
  }
};

$$.NoSuchMethodError_toString_anon = {"": "Closure;box_0",
  call$2: function(key, value) {
    var t1 = this.box_0;
    if ($.$$gt(t1.i_1, 0) === true)
      $.add(t1.sb_0, ", ");
    $.add(t1.sb_0, key);
    $.add(t1.sb_0, ": ");
    $.add(t1.sb_0, $.Error_safeToString(value));
    t1.i_1 = $.$$add(t1.i_1, 1);
  }
};

$$.invokeClosure_anon = {"": "Closure;closure_0",
  call$0: function() {
    return this.closure_0.call$0();
  }
};

$$.invokeClosure_anon0 = {"": "Closure;closure_1,arg1_2",
  call$0: function() {
    return this.closure_1.call$1(this.arg1_2);
  }
};

$$.invokeClosure_anon1 = {"": "Closure;closure_3,arg1_4,arg2_5",
  call$0: function() {
    return this.closure_3.call$2(this.arg1_4, this.arg2_5);
  }
};

$$.RgbColor_toHex_anon = {"": "Closure;buffer_0",
  call$1: function(c) {
    var t1, t2;
    t1 = this.buffer_0;
    t2 = $.toRadixString(c, 16);
    $.add(t1, $.$$eq($.length(t2), 1) === true ? $.CONSTANT.concat$1("0", t2) : t2);
  }
};

$$.CssClassSet_clear_anon = {"": "Closure;",
  call$1: function(s) {
    return $.clear(s);
  }
};

$$.HashSet_forEach_anon = {"": "Closure;f_0",
  call$2: function(key, value) {
    this.f_0.call$1(key);
  }
};

$$.CssClassSet_addAll_anon = {"": "Closure;iterable_0",
  call$1: function(s) {
    return $.addAll(s, this.iterable_0);
  }
};

$$.CssClassSet_add_anon = {"": "Closure;value_0",
  call$1: function(s) {
    return $.add(s, this.value_0);
  }
};

$$.Collection_clear_anon = {"": "Closure;",
  call$1: function(e) {
    return true;
  }
};

$$.CssClassSet_removeMatching_anon = {"": "Closure;test_0",
  call$1: function(s) {
    return $.removeMatching(s, this.test_0);
  }
};

$$.CssClassSet_removeAll_anon = {"": "Closure;iterable_0",
  call$1: function(s) {
    return $.removeAll(s, this.iterable_0);
  }
};

$$.FilteredElementList__filtered_anon = {"": "Closure;",
  call$1: function(n) {
    return typeof n === "object" && n !== null && n.$isElement();
  }
};

$$.CondorcetView_updateElement_anon = {"": "Closure;",
  call$1: function(p) {
    return p;
  }
};

$$.EventHandle_fireEvent_anon = {"": "Closure;args_0",
  call$2: function(id, handler) {
    handler.call$1(this.args_0);
  }
};

$$.CondorcetView__updateCellHoverStyle_anon = {"": "Closure;hoverPairClass_0",
  call$1: function(e) {
    $.remove(e.get$classes(), this.hoverPairClass_0);
  }
};

$$.CondorcetView__updateCellHoverStyle_anon0 = {"": "Closure;hoverPairClass_1",
  call$1: function(e) {
    $.add(e.get$classes(), this.hoverPairClass_1);
  }
};

$$.Stream_last_anon = {"": "Closure;box_0",
  call$1: function(value) {
    var t1 = this.box_0;
    t1.foundResult_1 = true;
    t1.result_0 = value;
  }
};

$$.Stream_last_anon0 = {"": "Closure;box_0,future_1",
  call$0: function() {
    var t1 = this.box_0;
    if (t1.foundResult_1 === true) {
      this.future_1._setValue$1(t1.result_0);
      return;
    }
    this.future_1._setError$1($.AsyncError$($.StateError$("No elements"), null));
  }
};

$$._FutureImpl__scheduleUnhandledError_anon = {"": "Closure;this_0",
  call$1: function(_) {
    var t1, error;
    t1 = this.this_0;
    if (t1.get$_hasUnhandledError() === true) {
      t1._clearUnhandledError$0();
      error = t1.get$_resultOrListeners();
      $.Primitives_printString("Uncaught Error: " + $.S(error.get$error()));
      t1 = error.get$stackTrace();
      if (!(t1 == null))
        $.Primitives_printString("Stack Trace:\n" + $.S(t1) + "\n");
      throw $.$$throw(error.get$error());
    }
  }
};

$$.anon = {"": "Closure;this_0,callback_1",
  call$0: function() {
    this.callback_1.call$1(this.this_0);
  }
};

$$.internalCallback = {"": "Closure;this_2,callback_3",
  call$0: function() {
    var t1, t2;
    t1 = this.callback_3;
    t2 = this.this_2;
    t1.call$1(t2);
    t2.set$_handle(null);
    t2 = $globalState.topEventLoop;
    t2.set$activeTimerCount($.$$sub(t2.get$activeTimerCount(), 1));
  }
};

$$.Stream_toSet_anon = {"": "Closure;result_0",
  call$1: function(data) {
    $.add(this.result_0, data);
  }
};

$$.Stream_toSet_anon0 = {"": "Closure;result_1,future_2",
  call$0: function() {
    this.future_2._setValue$1(this.result_1);
  }
};

$$.Stream_isEmpty_anon = {"": "Closure;box_0,future_1",
  call$1: function(_) {
    this.box_0.subscription_0.cancel$0();
    this.future_1._setValue$1(false);
  }
};

$$.Stream_isEmpty_anon0 = {"": "Closure;future_2",
  call$0: function() {
    this.future_2._setValue$1(true);
  }
};

$$.Stream_length_anon = {"": "Closure;box_0",
  call$1: function(_) {
    var t1 = this.box_0;
    t1.count_0 = $.$$add(t1.count_0, 1);
  }
};

$$.Stream_length_anon0 = {"": "Closure;box_0,future_1",
  call$0: function() {
    this.future_1._setValue$1(this.box_0.count_0);
  }
};

$$.Stream_contains_anon = {"": "Closure;box_0,match_1,future_2",
  call$1: function(element) {
    var t1, t2, t3;
    t1 = new $.Stream_contains__anon(this.match_1, element);
    t2 = this.box_0;
    t3 = this.future_2;
    $._runUserCode(t1, new $.Stream_contains__anon0(t2, t3), $._cancelAndError(t2.subscription_0, t3), null);
  }
};

$$.Stream_contains__anon = {"": "Closure;match_3,element_4",
  call$0: function() {
    return $.$$eq(this.element_4, this.match_3);
  }
};

$$.Stream_contains__anon0 = {"": "Closure;box_0,future_5",
  call$1: function(isMatch) {
    if (isMatch === true) {
      this.box_0.subscription_0.cancel$0();
      this.future_5._setValue$1(true);
    }
  }
};

$$.Stream_contains_anon0 = {"": "Closure;future_6",
  call$0: function() {
    this.future_6._setValue$1(false);
  }
};

$$._cancelAndError_anon = {"": "Closure;subscription_0,future_1",
  call$1: function(error) {
    this.subscription_0.cancel$0();
    this.future_1._setError$1(error);
  }
};

$$.AsyncError_throwDelayed_reportError = {"": "Closure;this_0",
  call$0: function() {
    var t1 = this.this_0;
    $.Primitives_printString("Uncaught Error: " + $.S(t1.get$error()));
    t1 = t1.get$stackTrace();
    if (!(t1 == null))
      $.Primitives_printString("Stack Trace:\n" + $.S(t1) + "\n");
  }
};

$$.AsyncError_throwDelayed_anon = {"": "Closure;this_1,reportError_2",
  call$1: function(_) {
    this.reportError_2.call$0();
    throw $.$$throw(this.this_1.get$error());
  }
};

$$.CondorcetView__getPair_anon = {"": "Closure;",
  call$1: function(s) {
    return $.int_parse(s, null, null);
  }
};

$$.Stream_toList_anon = {"": "Closure;result_0",
  call$1: function(data) {
    $.add(this.result_0, data);
  }
};

$$.Stream_toList_anon0 = {"": "Closure;result_1,future_2",
  call$0: function() {
    this.future_2._setValue$1(this.result_1);
  }
};

$$.MappedListIterable_map_anon = {"": "Closure;this_0,f_1",
  call$1: function(v) {
    return this.f_1.call$1(this.this_0._f$1(v));
  }
};

$$.Stream_elementAt_anon = {"": "Closure;box_0,future_1",
  call$1: function(value) {
    var t1 = this.box_0;
    if ($.$$eq(t1.index_0, 0) === true) {
      this.future_1._setValue$1(value);
      t1.subscription_1.cancel$0();
      return;
    }
    t1.index_0 = $.$$sub(t1.index_0, 1);
  }
};

$$.Stream_elementAt_anon0 = {"": "Closure;future_2",
  call$0: function() {
    this.future_2._setError$1($.AsyncError$($.StateError$("Not enough elements for elementAt"), null));
  }
};

$$._DataAttributeMap_keys_anon = {"": "Closure;this_0,keys_1",
  call$2: function(key, value) {
    var t1 = $.getInterceptor$JSString(key);
    if (t1.startsWith$1(key, "data-") === true)
      $.add(this.keys_1, t1.substring$1(key, 5));
  }
};

$$._DataAttributeMap_forEach_anon = {"": "Closure;this_0,f_1",
  call$2: function(key, value) {
    var t1 = $.getInterceptor$JSString(key);
    if (t1.startsWith$1(key, "data-") === true)
      this.f_1.call$2(t1.substring$1(key, 5), value);
  }
};

$$.CollectionUtil_selectMany_anon = {"": "Closure;func_0",
  call$1: function(s) {
    return $._SelectManyIterator$($.iterator(s), this.func_0);
  }
};

$$.IrvView_updateElement_anon = {"": "Closure;",
  call$1: function(p) {
    return p;
  }
};

$$.Stream_first_anon = {"": "Closure;box_0,future_1",
  call$1: function(value) {
    this.future_1._setValue$1(value);
    this.box_0.subscription_0.cancel$0();
    return;
  }
};

$$.Stream_first_anon0 = {"": "Closure;future_2",
  call$0: function() {
    this.future_2._setError$1($.AsyncError$($.StateError$("No elements"), null));
  }
};

$$.CandidateManagerView__removeCandidateWithId_anon = {"": "Closure;id_0",
  call$1: function(mp) {
    return $.$$eq(mp.get$id(), this.id_0);
  }
};

$$.anon4 = {"": "Closure;this_0",
  call$1: function(data) {
    this.this_0.get$_calcEngine().candidatesMoved$0();
  }
};

$$.anon5 = {"": "Closure;this_1",
  call$1: function(data) {
    this.this_1.get$_calcEngine().removeCandidate$1(data);
  }
};

$$.anon6 = {"": "Closure;this_2",
  call$1: function(args) {
    this.this_2.get$_calcEngine().addCandidate$0();
  }
};

$$.anon7 = {"": "Closure;this_3",
  call$1: function(args) {
    var t1 = this.this_3;
    t1._updateHighlightCandidates$1(t1.get$_condorcetView().get$highlightCandidates());
  }
};

$$.anon8 = {"": "Closure;this_4",
  call$1: function(args) {
    var t1 = this.this_4;
    t1._updateHighlightCandidates$1(t1.get$_irvView().get$highlightCandidates());
  }
};

$$.anon9 = {"": "Closure;this_0",
  call$1: function(_) {
    return this.this_0.requestFrame$0();
  }
};

$$.ParentThing_drawOverride_anon = {"": "Closure;ctx_0",
  call$1: function(e) {
    return e.drawCore$1(this.ctx_0);
  }
};

$$.DateTime_toString_fourDigits = {"": "Closure;",
  call$1: function(n) {
    var t1, absN, sign;
    t1 = $.getInterceptor$JSNumber(n);
    absN = t1.abs$0(n);
    sign = t1.$lt(n, 0) === true ? "-" : "";
    t1 = $.getInterceptor$JSNumber(absN);
    if (t1.$ge(absN, 1000) === true)
      return $.S(n);
    if (t1.$ge(absN, 100) === true)
      return sign + "0" + $.S(absN);
    if (t1.$ge(absN, 10) === true)
      return sign + "00" + $.S(absN);
    return sign + "000" + $.S(absN);
  }
};

$$.DateTime_toString_threeDigits = {"": "Closure;",
  call$1: function(n) {
    var t1 = $.getInterceptor$JSNumber(n);
    if (t1.$ge(n, 100) === true)
      return $.S(n);
    if (t1.$ge(n, 10) === true)
      return "0" + $.S(n);
    return "00" + $.S(n);
  }
};

$$.DateTime_toString_twoDigits = {"": "Closure;",
  call$1: function(n) {
    if ($.$$ge(n, 10) === true)
      return $.S(n);
    return "0" + $.S(n);
  }
};

$$.RootMapElement_update_anon = {"": "Closure;this_0",
  call$1: function(m) {
    var t1 = this.this_0;
    m.set$_radius(t1.get$_radius());
    m.setTransform$1(t1.get$_tx());
  }
};

$$.ParentThing_update_anon = {"": "Closure;",
  call$1: function(e) {
    return e.update$0();
  }
};

$$.convertDartToNative_Dictionary_anon = {"": "Closure;object_0",
  call$2: function(key, value) {
    this.object_0[key] = value;
  }
};

$$.anon3 = {"": "Closure;this_0",
  call$1: function(args) {
    this.this_0._distanceElectionChanged$0();
  }
};

$$._voterHexMapperIsolate_anon = {"": "Closure;",
  call$2: function(tuple, reply) {
    var map, t1, t2, candidate, hue;
    map = $._HashMapImpl$();
    for (t1 = $.iterator(tuple.get$item1().get$ballots()); t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      candidate = tuple.get$item3() == null ? t2.get$choice() : $.first($.where(t2.get$rank(), new $._voterHexMapperIsolate__anon(tuple)));
      if (!(candidate == null)) {
        hue = $.LocationData_getHue(candidate);
        map.$indexSet(t2.get$voter(), $.HslColor_HslColor(hue, 0.5, 0.75).toRgb$0().toHex$0());
      }
    }
    reply.send$1(map);
  }
};

$$._voterHexMapperIsolate__anon = {"": "Closure;tuple_0",
  call$1: function(c) {
    return $.$$ge($.indexOf0(this.tuple_0.get$item3(), c), 0);
  }
};

$$.IsolateNatives_spawn_anon = {"": "Closure;completer_0,port_1",
  call$2: function(msg, replyPort) {
    this.port_1.close$0();
    this.completer_0.complete$1(replyPort);
  }
};

$$._BaseSendPort_call_anon = {"": "Closure;completer_0,port_1",
  call$2: function(value, ignoreReplyTo) {
    var t1;
    this.port_1.close$0();
    t1 = this.completer_0;
    if (typeof value === "object" && value !== null && !!value.$isException)
      t1.completeError$1(value);
    else
      t1.complete$1(value);
  }
};

$$._NativeJsSendPort_send_anon = {"": "Closure;this_1,message_2,replyTo_3",
  call$0: function() {
    var t1, t2, t3, isolate, shouldSerialize, msg;
    t1 = {};
    t2 = this.this_1;
    t3 = this.replyTo_3;
    t2._checkReplyTo$1(t3);
    isolate = $.$$index($globalState.isolates, t2.get$_isolateId());
    if (isolate == null)
      return;
    if (t2.get$_receivePort().get$_callback() == null)
      return;
    shouldSerialize = !($globalState.currentContext == null) && $.$$eq($globalState.currentContext.get$id(), t2.get$_isolateId()) !== true;
    msg = this.message_2;
    t1.msg_0 = msg;
    t1.reply_1 = t3;
    if (shouldSerialize) {
      t1.msg_0 = $._serializeMessage(t1.msg_0);
      t1.reply_1 = $._serializeMessage(t1.reply_1);
    }
    $globalState.topEventLoop.enqueue$3(isolate, new $._NativeJsSendPort_send__anon(t1, t2, shouldSerialize), "receive " + $.S(msg));
  }
};

$$._NativeJsSendPort_send__anon = {"": "Closure;box_0,this_4,shouldSerialize_5",
  call$0: function() {
    var t1, t2;
    t1 = this.this_4;
    if (!(t1.get$_receivePort().get$_callback() == null)) {
      if (this.shouldSerialize_5 === true) {
        t2 = this.box_0;
        t2.msg_0 = $._deserializeMessage(t2.msg_0);
        t2.reply_1 = $._deserializeMessage(t2.reply_1);
      }
      t1 = t1.get$_receivePort();
      t2 = this.box_0;
      t1._callback$2(t2.msg_0, t2.reply_1);
    }
  }
};

$$._waitForPendingPorts_anon = {"": "Closure;callback_0",
  call$1: function(_) {
    return this.callback_0.call$0();
  }
};

$$._FutureImpl__handleValue_anon = {"": "Closure;thenFuture_0,value_1",
  call$1: function(_) {
    this.thenFuture_0._sendValue$1(this.value_1);
  }
};

$$._FutureImpl__handleError_anon = {"": "Closure;error_0,errorFuture_1",
  call$1: function(_) {
    this.errorFuture_1._sendError$1(this.error_0);
  }
};

$$._FutureImpl__FutureImpl$wait_anon = {"": "Closure;box_0,completer_1,values_2,pos_3",
  call$1: function(value) {
    var t1, t2, remaining;
    t1 = this.values_2;
    $.$$indexSet(t1, this.pos_3, value);
    t2 = this.box_0;
    remaining = $.$$sub(t2.remaining_0, 1);
    t2.remaining_0 = remaining;
    if ($.$$eq(remaining, 0) === true)
      this.completer_1.complete$1(t1);
  }
};

$$._FutureImpl__FutureImpl$wait_anon0 = {"": "Closure;box_0,completer_4",
  call$1: function(error) {
    var t1 = this.box_0;
    if (t1.completed_1 !== true)
      this.completer_4.completeError$2(error.get$error(), error.get$stackTrace());
    t1.completed_1 = true;
  }
};

$$.anon0 = {"": "Closure;this_0",
  call$1: function(p) {
    var t1, t2, t3, t4;
    t1 = this.this_0;
    t1.set$_port(p);
    for (t2 = $.iterator(t1.get$pending()); t2.moveNext$0() === true;) {
      t3 = t2.get$current();
      t4 = $.getInterceptor$JSArrayJSString(t3);
      p.send$2(t4.$index(t3, "message"), t4.$index(t3, "replyTo"));
    }
    t1.set$pending(null);
  }
};

$$.IsolateNatives__startNonWorker_function = {"": "Closure;functionName_0,replyPort_1",
  call$0: function() {
    $.IsolateNatives__startIsolate($[this.functionName_0], this.replyPort_1);
  }
};

$$._WorkerSendPort_send_anon = {"": "Closure;this_0,message_1,replyTo_2",
  call$0: function() {
    var t1, t2, workerMessage, manager;
    t1 = this.this_0;
    t2 = this.replyTo_2;
    t1._checkReplyTo$1(t2);
    workerMessage = $._serializeMessage($.makeLiteralMap(["command", "message", "port", t1, "msg", this.message_1, "replyTo", t2]));
    if ($globalState.isWorker === true)
      $globalState.mainManager.postMessage$1(workerMessage);
    else {
      manager = $.$$index($globalState.managers, t1.get$_workerId());
      if (!(manager == null))
        manager.postMessage$1(workerMessage);
    }
  }
};

$$._PendingSendPortFinder_visitMap_anon = {"": "Closure;this_0",
  call$1: function(e) {
    return this.this_0._dispatch$1(e);
  }
};

$$.Storage_values_anon = {"": "Closure;values_0",
  call$2: function(k, v) {
    return $.add(this.values_0, v);
  }
};

$$._LinkedHashMapImpl_values_anon = {"": "Closure;",
  call$1: function(entry) {
    return entry.get$value();
  }
};

$$._DataAttributeMap_values_anon = {"": "Closure;this_0,values_1",
  call$2: function(key, value) {
    if ($.startsWith(key, "data-") === true)
      $.add(this.values_1, value);
  }
};

$$.Storage_keys_anon = {"": "Closure;keys_0",
  call$2: function(k, v) {
    return $.add(this.keys_0, k);
  }
};

$$._LinkedHashMapImpl_keys_anon = {"": "Closure;",
  call$1: function(entry) {
    return entry.get$key();
  }
};

$$._Copier_visitMap_anon = {"": "Closure;box_0,this_1",
  call$2: function(key, val) {
    var t1, t2;
    t1 = this.box_0.copy_0;
    t2 = this.this_1;
    $.$$indexSet(t1, t2._dispatch$1(key), t2._dispatch$1(val));
  }
};

$$._PendingSendPortFinder_visitList_anon = {"": "Closure;this_0",
  call$1: function(e) {
    return this.this_0._dispatch$1(e);
  }
};

$$.IsolateNatives__processWorkerMessage_function = {"": "Closure;entryPoint_0,replyTo_1",
  call$0: function() {
    $.IsolateNatives__startIsolate(this.entryPoint_0, this.replyTo_1);
  }
};

$$._irvElectionIsolate_anon = {"": "Closure;",
  call$2: function(ballots, reply) {
    reply.send$1($.IrvElection_IrvElection(ballots));
  }
};

$$.IrvElection_IrvElection_anon = {"": "Closure;",
  call$1: function(b) {
    return b.get$rank();
  }
};

$$.IrvRound_IrvRound_anon = {"": "Closure;eliminatedCandidates_1",
  call$1: function(b) {
    var pruned, t1, winner;
    pruned = $.$$(b.get$rank()).exclude$1(this.eliminatedCandidates_1).toReadOnlyCollection$0();
    t1 = $.getInterceptor$JSArrayJSString(pruned);
    winner = $.$$eq(t1.get$length(pruned), 0) === true ? null : t1.$index(pruned, 0);
    return $.Tuple3$(b, pruned, winner);
  }
};

$$.IrvRound_IrvRound_anon0 = {"": "Closure;",
  call$1: function(t) {
    return !(t.get$item3() == null);
  }
};

$$.IrvRound_IrvRound_anon1 = {"": "Closure;",
  call$1: function(t) {
    return !(t.get$item3() == null);
  }
};

$$.IrvRound_IrvRound_anon2 = {"": "Closure;",
  call$1: function(tuple) {
    return tuple.get$item3();
  }
};

$$.IrvRound_IrvRound_anon3 = {"": "Closure;candidateAllocations_2",
  call$1: function(c) {
    return $.length($.$$index(this.candidateAllocations_2, c));
  }
};

$$.IrvRound_IrvRound_anon4 = {"": "Closure;",
  call$2: function(a, b) {
    return $.compareTo(b, a);
  }
};

$$.IrvRound_IrvRound_anon5 = {"": "Closure;box_0,voteGroups_3",
  call$1: function(pv) {
    var vg, t1, currentPlaceNumber;
    vg = $.$$index(this.voteGroups_3, pv);
    t1 = this.box_0;
    currentPlaceNumber = t1.placeNumber_0;
    t1.placeNumber_0 = $.$$add(currentPlaceNumber, $.length(vg));
    return $.PluralityElectionPlace$(currentPlaceNumber, vg, pv);
  }
};

$$.IrvRound_IrvRound_anon6 = {"": "Closure;cleanedBallots_4,newlyEliminatedCandidates_5",
  call$1: function(c) {
    var xfers, exhausted, t1, t2, t3, rb, pruned;
    xfers = $._HashMapImpl$();
    exhausted = $.List_List(0);
    for (t1 = $.iterator($.where(this.cleanedBallots_4, new $.IrvRound_IrvRound__anon(c))), t2 = this.newlyEliminatedCandidates_5; t1.moveNext$0() === true;) {
      t3 = t1.get$current();
      rb = t3.get$item1();
      pruned = t3.get$item2().exclude$1(t2);
      t3 = $.getInterceptor$JSArrayJSString(pruned);
      if (t3.get$isEmpty(pruned) === true)
        exhausted.push(rb);
      else
        $.add(xfers.putIfAbsent$2(t3.get$first(pruned), new $.IrvRound_IrvRound__anon0()), rb);
    }
    return $.IrvElimination$(c, xfers, $.ReadOnlyCollection$wrap(exhausted));
  }
};

$$.IrvRound_IrvRound__anon = {"": "Closure;c_6",
  call$1: function(t) {
    return $.$$eq(t.get$item3(), this.c_6);
  }
};

$$.IrvRound_IrvRound__anon0 = {"": "Closure;",
  call$0: function() {
    return $.List_List(0);
  }
};

$$.IrvRound_candidates_anon = {"": "Closure;",
  call$1: function(p) {
    return p;
  }
};

$$.IrvRound_eliminatedCandidates_anon = {"": "Closure;",
  call$1: function(ie) {
    return ie.get$candidate();
  }
};

$$.IrvRound__getEliminatedCandidates_anon = {"": "Closure;",
  call$1: function(p) {
    return $.$$mul(p.get$voteCount(), $.length(p));
  }
};

$$.IrvRound__getEliminatedCandidates_anon0 = {"": "Closure;",
  call$1: function(p) {
    return p;
  }
};

$$.anon1 = {"": "Closure;",
  call$1: function(v) {
    return v;
  }
};

$$.anon2 = {"": "Closure;",
  call$0: function() {
    return $.List_List(0);
  }
};

$$.CollectionUtil_count_anon = {"": "Closure;test_0",
  call$2: function(previous, element) {
    if (this.test_0.call$1(element) === true)
      return $.$$add(previous, 1);
    else
      return previous;
  }
};

$$.CollectionUtil_exclude_anon = {"": "Closure;itemsToExclude_0",
  call$1: function(e) {
    return $.contains1(this.itemsToExclude_0, e) !== true;
  }
};

$$.CollectionUtil_distinct_anon = {"": "Closure;",
  call$2: function(a, b) {
    return $.$$eq(a, b);
  }
};

$$.CollectionUtil_distinct_anon0 = {"": "Closure;box_0",
  call$1: function(s) {
    return $._DistinctIterator$($.iterator(s), this.box_0.comparer_0);
  }
};

$$._DistinctIterator_moveNext_anon = {"": "Closure;this_0,candidate_1",
  call$1: function(e) {
    return this.this_0._comparer$2(e, this.candidate_1);
  }
};

$$.Stream_any_anon = {"": "Closure;box_0,test_1,future_2",
  call$1: function(element) {
    var t1, t2, t3;
    t1 = new $.Stream_any__anon(this.test_1, element);
    t2 = this.box_0;
    t3 = this.future_2;
    $._runUserCode(t1, new $.Stream_any__anon0(t2, t3), $._cancelAndError(t2.subscription_0, t3), null);
  }
};

$$.Stream_any__anon = {"": "Closure;test_3,element_4",
  call$0: function() {
    return this.test_3.call$1(this.element_4);
  }
};

$$.Stream_any__anon0 = {"": "Closure;box_0,future_5",
  call$1: function(isMatch) {
    if (isMatch === true) {
      this.box_0.subscription_0.cancel$0();
      this.future_5._setValue$1(true);
    }
  }
};

$$.Stream_any_anon0 = {"": "Closure;future_6",
  call$0: function() {
    this.future_6._setValue$1(false);
  }
};

$$._condorcetElectionIsolate_anon = {"": "Closure;",
  call$2: function(ballots, reply) {
    reply.send$1($.CondorcetElection_CondorcetElection(ballots));
  }
};

$$.CondorcetElection_CondorcetElection_anon = {"": "Closure;",
  call$1: function(b) {
    return b.get$voter();
  }
};

$$.CondorcetElection_CondorcetElection_anon0 = {"": "Closure;",
  call$0: function() {
    return $.List_List(0);
  }
};

$$.CondorcetElection_CondorcetElection_anon1 = {"": "Closure;set_0",
  call$2: function(k, v) {
    var c = $.CondorcetPair_CondorcetPair(k.get$item1(), k.get$item2(), v);
    $.add(this.set_0, c);
  }
};

$$.CondorcetElection_getPair_anon = {"": "Closure;c1_0,c2_1",
  call$1: function(p) {
    return p.matches$2(this.c1_0, this.c2_1);
  }
};

$$.FilteredElementList_removeRange_anon = {"": "Closure;",
  call$1: function(el) {
    return el.remove$0();
  }
};

$$._TarjanList__TarjanList_anon = {"": "Closure;map_0,nodes_1",
  call$2: function(k, v) {
    var t1, tKey, t2, edges, t3;
    t1 = this.map_0;
    tKey = t1.putIfAbsent$2(k, new $._TarjanList__TarjanList__anon(k));
    t2 = this.nodes_1;
    edges = $.HashSet$();
    $.$$indexSet(t2, tKey, edges);
    if (!(v == null))
      for (t2 = $.iterator(v); t2.moveNext$0() === true;) {
        t3 = t2.get$current();
        edges.add$1(t1.putIfAbsent$2(t3, new $._TarjanList__TarjanList__anon0(t3)));
      }
  }
};

$$._TarjanList__TarjanList__anon = {"": "Closure;k_2",
  call$0: function() {
    return $._TarjanNode$(this.k_2);
  }
};

$$._TarjanList__TarjanList__anon0 = {"": "Closure;edge_3",
  call$0: function() {
    return $._TarjanNode$(this.edge_3);
  }
};

$$.CondorcetPair_CondorcetPair_anon = {"": "Closure;box_0",
  call$1: function(b) {
    var t1, t2, firstIndex, secondIndex;
    t1 = b.get$rank();
    t2 = this.box_0;
    firstIndex = $.indexOf0(t1, t2.can1_0);
    t1 = $.getInterceptor$JSNumber(firstIndex);
    $.requireArgument(t1.$ge(firstIndex, 0), "bals", null);
    secondIndex = $.indexOf0(b.get$rank(), t2.can2_1);
    $.requireArgument($.$$ge(secondIndex, 0), "bals", null);
    if (t1.$lt(firstIndex, secondIndex) === true)
      t2.fos_2 = $.$$add(t2.fos_2, 1);
    else
      t2.sof_3 = $.$$add(t2.sof_3, 1);
  }
};

$$._pluralityElectionIsolate_anon = {"": "Closure;",
  call$2: function(ballots, reply) {
    reply.send$1($.PluralityElection_PluralityElection(ballots));
  }
};

$$.PluralityElection_PluralityElection_anon = {"": "Closure;",
  call$1: function(pb) {
    return pb.get$voter();
  }
};

$$.PluralityElection_PluralityElection_anon0 = {"": "Closure;",
  call$1: function(pb) {
    return pb.get$choice();
  }
};

$$.PluralityElection_PluralityElection_anon1 = {"": "Closure;voteCounts_0",
  call$2: function(c, b) {
    var count = $.length(b);
    $.add(this.voteCounts_0.putIfAbsent$2(count, new $.PluralityElection_PluralityElection__anon()), c);
  }
};

$$.PluralityElection_PluralityElection__anon = {"": "Closure;",
  call$0: function() {
    return $.List_List(0);
  }
};

$$.PluralityElection_PluralityElection_anon2 = {"": "Closure;",
  call$2: function(a, b) {
    return $.compareTo(b, a);
  }
};

$$._distanceElectionIsolate_anon = {"": "Closure;",
  call$2: function(data, reply) {
    reply.send$1($.DistanceElection_DistanceElection(data.get$voters(), data.get$candidates()));
  }
};

$$.DistanceElection_DistanceElection_anon = {"": "Closure;cans_1",
  call$1: function(voter) {
    return $.DistanceBallot_DistanceBallot(voter, this.cans_1);
  }
};

$$.DistanceElection_DistanceElection_anon0 = {"": "Closure;ballots_2",
  call$1: function(candidate) {
    var t1, sumOfDistance, sumOfSquaredDistance, count, distance;
    for (t1 = $.iterator(this.ballots_2), sumOfDistance = 0, sumOfSquaredDistance = 0, count = 0; t1.moveNext$0() === true;) {
      distance = t1.get$current().getDistance$1(candidate);
      if (typeof distance !== "number")
        throw $.iae(distance);
      sumOfDistance += distance;
      sumOfSquaredDistance += distance * distance;
      ++count;
    }
    return $.Tuple$(sumOfDistance / count, sumOfSquaredDistance / count);
  }
};

$$.DistanceElection_DistanceElection_anon1 = {"": "Closure;",
  call$2: function(a, b) {
    return $.compareTo(a.get$item1(), b.get$item1());
  }
};

$$.DistanceElection_DistanceElection_anon2 = {"": "Closure;box_0,distanceGroups_3",
  call$1: function(d) {
    var placeCans, t1, place;
    placeCans = $.$$index(this.distanceGroups_3, d);
    t1 = this.box_0;
    place = $.DistanceElectionPlace$(t1.placeNumber_0, placeCans, d.get$item1(), d.get$item2());
    t1.placeNumber_0 = $.$$add(t1.placeNumber_0, $.length(placeCans));
    return place;
  }
};

$$.DistanceBallot_DistanceBallot_anon = {"": "Closure;voter_0",
  call$1: function(c) {
    return $.$$div($.toInt($.$$mul(this.voter_0.get$location().getDistance$1(c.get$location()), 128)), 128);
  }
};

$$.DistanceBallot_DistanceBallot_anon0 = {"": "Closure;distances_1",
  call$2: function(a, b) {
    var t1, t2, d;
    t1 = this.distances_1;
    t2 = $.getInterceptor$JSArrayJSString(t1);
    d = $.compareTo(t2.$index(t1, a), t2.$index(t1, b));
    if ($.$$eq(d, 0) === true) {
      if ($._botHelperRandom == null)
        $._botHelperRandom = $.Random_Random(null);
      d = $._botHelperRandom.nextBool$0() === true ? -1 : 1;
    }
    return d;
  }
};

$$.CollectionUtil_toMap_anon = {"": "Closure;",
  call$1: function(a) {
    return a;
  }
};

$$.LocationData_LocationData$random_anon = {"": "Closure;",
  call$1: function(c) {
    return c.scale$1(10);
  }
};

$$.LocationData_LocationData$random_anon0 = {"": "Closure;candidates_0",
  call$2: function(c, i) {
    var candidate = $.MapPlayer$(c, $.LocationData_getCandidateName(i));
    $.add(this.candidates_0, candidate);
  }
};

$$.Stream_singleMatching_anon = {"": "Closure;box_0,test_1,future_2",
  call$1: function(value) {
    var t1, t2, t3;
    t1 = new $.Stream_singleMatching__anon(this.test_1, value);
    t2 = this.box_0;
    t3 = this.future_2;
    $._runUserCode(t1, new $.Stream_singleMatching__anon0(t2, t3, value), $._cancelAndError(t2.subscription_2, t3), null);
  }
};

$$.Stream_singleMatching__anon = {"": "Closure;test_3,value_4",
  call$0: function() {
    return true === this.test_3.call$1(this.value_4);
  }
};

$$.Stream_singleMatching__anon0 = {"": "Closure;box_0,future_5,value_6",
  call$1: function(isMatch) {
    var t1;
    if (isMatch === true) {
      t1 = this.box_0;
      if (t1.foundResult_1 === true) {
        t1.subscription_2.cancel$0();
        this.future_5._setError$1($.AsyncError$($.StateError$("Multiple matches for \"single\""), null));
        return;
      }
      t1.foundResult_1 = true;
      t1.result_0 = this.value_6;
    }
  }
};

$$.Stream_singleMatching_anon0 = {"": "Closure;box_0,future_7",
  call$0: function() {
    var t1 = this.box_0;
    if (t1.foundResult_1 === true) {
      this.future_7._setValue$1(t1.result_0);
      return;
    }
    this.future_7._setError$1($.AsyncError$($.StateError$("single ended without match"), null));
  }
};

$$.MouseManager_MouseManager_anon = {"": "Closure;",
  call$1: function(s) {
    return $.MouseManager$_internal(s);
  }
};

$$.Mouse_markMouseOver_anon = {"": "Closure;",
  call$1: function(e) {
    $.get$Mouse_isMouseOverProperty().clear$1(e);
    $.get$Mouse_isMouseDirectlyOverProperty().clear$1(e);
  }
};

$$.Mouse_markMouseOver_anon0 = {"": "Closure;",
  call$1: function(e) {
    $.get$Mouse_isMouseOverProperty().set$2(e, true);
  }
};

$$.MouseManager__mouseUp_anon = {"": "Closure;",
  call$1: function(e) {
    return $.get$MouseManager__isClickableProperty().get$1(e);
  }
};

$$.MouseManager__mouseUp_anon0 = {"": "Closure;",
  call$0: function() {
    return;
  }
};

$$.LocationData_cloneAndRemove_anon = {"": "Closure;mp_0",
  call$1: function(e) {
    return $.$$eq(e, this.mp_0) !== true;
  }
};

$$.AttachableObject__addHandler_anon = {"": "Closure;",
  call$0: function() {
    return $.EventHandle$();
  }
};

$$.RootMapElement_dragCandidate_anon = {"": "Closure;candidate_0",
  call$1: function(mp) {
    return $.$$eq(mp, this.candidate_0);
  }
};

$$._EventLoop__runHelper_next = {"": "Closure;this_0",
  call$0: function() {
    if (this.this_0.runIteration$0() !== true)
      return;
    $.TimerImpl$(0, new $._EventLoop__runHelper_next_anon(this));
  }
};

$$._EventLoop__runHelper_next_anon = {"": "Closure;next_1",
  call$1: function(_) {
    return this.next_1.call$0();
  }
};

$$.BoundClosure$1 = {"": "Closure;self,target",
  call$1: function(p0) {
    return this.self[this.target](p0);
  }
};
$$.BoundClosure$i1 = {"": "Closure;self,target,receiver",
  call$1: function(p0) {
    return this.self[this.target](this.receiver, p0);
  }
};
$$.Bound_contains_JSString = {"": "Closure;self,target,receiver",
  call$2: function(p0, p1) {
    return this.self[this.target](this.receiver, p0, p1);
  },
  call$1: function($receiver, other) {
    return this.call$2($receiver, other, 0);
  }
};
$$.BoundClosure$0 = {"": "Closure;self,target",
  call$0: function() {
    return this.self[this.target]();
  }
};
$.main = function() {
  $.VoteDemo_VoteDemo(document.query$1("#content"), document.query$1("#pluralityView"), document.query$1("#distanceView"), document.query$1("#condorcetView"), document.query$1("#canManView"), document.query$1("#irvView")).requestFrame$0();
};

$.VoteDemo_VoteDemo = function(canvas, pluralityDiv, distanceDiv, condorcetDiv, canManDiv, irvDiv) {
  var voterMap, distanceView, pluralityView, condorcetView, irvView;
  voterMap = $.RootMapElement$(canvas.get$width(), canvas.get$height());
  distanceView = $.DistanceView$(distanceDiv);
  pluralityView = $.PluralityView$(pluralityDiv);
  condorcetView = $.CondorcetView$(condorcetDiv);
  irvView = $.IrvView$(irvDiv);
  return $.VoteDemo$_internal(canvas, voterMap, condorcetView, pluralityView, distanceView, $.CandidateManagerView$(canManDiv), irvView);
};

$.VoteDemo$_internal = function(canvas, rootMapElement, _condorcetView, _pluralityView, _distanceView, _canManView, _irvView) {
  var t1 = new $.VoteDemo($.CalcEngine$(), $.Map_Map(), _condorcetView, _irvView, _distanceView, _pluralityView, _canManView, null, canvas, $.Stage$(canvas, rootMapElement), rootMapElement, null, false, false);
  t1.StageWrapper$2(canvas, rootMapElement);
  t1.VoteDemo$_internal$7(canvas, rootMapElement, _condorcetView, _pluralityView, _distanceView, _canManView, _irvView);
  return t1;
};

$.MappedIterable$ = function(_iterable, _f) {
  return new $.MappedIterable(_iterable, _f);
};

$.MappedIterator$ = function(_iterator, _f) {
  return new $.MappedIterator(null, _iterator, _f);
};

$.MappedListIterable$ = function(_list, _f, _start, _end) {
  var t1 = new $.MappedListIterable(_list, _start, _end, _f);
  t1.MappedListIterable$4(_list, _f, _start, _end);
  return t1;
};

$.MappedListIterator$ = function(list, _f, start, _endIndex) {
  return new $.MappedListIterator(list, _f, _endIndex, $.length(list), start, null);
};

$.WhereIterable$ = function(_iterable, _f) {
  return new $.WhereIterable(_iterable, _f);
};

$.WhereIterator$ = function(_iterator, _f) {
  return new $.WhereIterator(_iterator, _f);
};

$.ListIterator$ = function(list) {
  return new $.ListIterator(list, list.length, -1, null);
};

$.Sort__doSort = function(a, left, right, compare) {
  if (right - left <= 32)
    $.Sort_insertionSort_(a, left, right, compare);
  else
    $.Sort__dualPivotQuicksort(a, left, right, compare);
};

$.Sort_insertionSort_ = function(a, left, right, compare) {
  var i, el, j, t1, t2, j0;
  if (typeof a !== "object" || a === null || (a.constructor !== Array || !!a.immutable$list) && !a.$isJavaScriptIndexingBehavior())
    return $.Sort_insertionSort_$bailout(1, a, left, right, compare);
  for (i = left + 1; i <= right; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    el = a[i];
    j = i;
    while (true) {
      if (j > left) {
        t1 = j - 1;
        if (t1 < 0 || t1 >= a.length)
          throw $.ioore(t1);
        t2 = $.$$gt(compare.call$2(a[t1], el), 0) === true;
        t1 = t2;
      } else
        t1 = false;
      t2 = a.length;
      if (!t1)
        break;
      j0 = j - 1;
      if (j0 < 0 || j0 >= t2)
        throw $.ioore(j0);
      t1 = a[j0];
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      a[j] = t1;
      j = j0;
    }
    if (j < 0 || j >= t2)
      throw $.ioore(j);
    a[j] = el;
  }
};

$.Sort_insertionSort_$bailout = function(state0, a, left, right, compare) {
  var i, el, j, t1, t2, j0;
  for (i = left + 1; i <= right; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    el = a[i];
    j = i;
    while (true) {
      if (j > left) {
        t1 = j - 1;
        if (t1 < 0 || t1 >= a.length)
          throw $.ioore(t1);
        t2 = $.$$gt(compare.call$2(a[t1], el), 0) === true;
        t1 = t2;
      } else
        t1 = false;
      if (!t1)
        break;
      j0 = j - 1;
      if (j0 < 0 || j0 >= a.length)
        throw $.ioore(j0);
      $.CONSTANT1.$indexSet(a, j, a[j0]);
      j = j0;
    }
    $.CONSTANT1.$indexSet(a, j, el);
  }
};

$.Sort__dualPivotQuicksort = function(a, left, right, compare) {
  var sixth, index1, index5, index3, index2, index4, t1, el1, el2, el3, el4, el5, t0, t2, less, great, k, ak, comp, t3, great0, less0, t4;
  if (typeof a !== "object" || a === null || (a.constructor !== Array || !!a.immutable$list) && !a.$isJavaScriptIndexingBehavior())
    return $.Sort__dualPivotQuicksort$bailout(1, a, left, right, compare);
  sixth = $.CONSTANT5.$tdiv(right - left + 1, 6);
  index1 = left + sixth;
  index5 = right - sixth;
  index3 = $.CONSTANT5.$tdiv(left + right, 2);
  index2 = index3 - sixth;
  index4 = index3 + sixth;
  t1 = a.length;
  if (index1 < 0 || index1 >= t1)
    throw $.ioore(index1);
  el1 = a[index1];
  if (index2 < 0 || index2 >= t1)
    throw $.ioore(index2);
  el2 = a[index2];
  if (index3 < 0 || index3 >= t1)
    throw $.ioore(index3);
  el3 = a[index3];
  if (index4 < 0 || index4 >= t1)
    throw $.ioore(index4);
  el4 = a[index4];
  if (index5 < 0 || index5 >= t1)
    throw $.ioore(index5);
  el5 = a[index5];
  if ($.$$gt(compare.call$2(el1, el2), 0) === true) {
    t0 = el2;
    el2 = el1;
    el1 = t0;
  }
  if ($.$$gt(compare.call$2(el4, el5), 0) === true) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  if ($.$$gt(compare.call$2(el1, el3), 0) === true) {
    t0 = el3;
    el3 = el1;
    el1 = t0;
  }
  if ($.$$gt(compare.call$2(el2, el3), 0) === true) {
    t0 = el3;
    el3 = el2;
    el2 = t0;
  }
  if ($.$$gt(compare.call$2(el1, el4), 0) === true) {
    t0 = el4;
    el4 = el1;
    el1 = t0;
  }
  if ($.$$gt(compare.call$2(el3, el4), 0) === true) {
    t0 = el4;
    el4 = el3;
    el3 = t0;
  }
  if ($.$$gt(compare.call$2(el2, el5), 0) === true) {
    t0 = el5;
    el5 = el2;
    el2 = t0;
  }
  if ($.$$gt(compare.call$2(el2, el3), 0) === true) {
    t0 = el3;
    el3 = el2;
    el2 = t0;
  }
  if ($.$$gt(compare.call$2(el4, el5), 0) === true) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  t1 = a.length;
  if (index1 >= t1)
    throw $.ioore(index1);
  a[index1] = el1;
  if (index3 >= t1)
    throw $.ioore(index3);
  a[index3] = el3;
  if (index5 >= t1)
    throw $.ioore(index5);
  a[index5] = el5;
  if (left < 0 || left >= t1)
    throw $.ioore(left);
  t2 = a[left];
  if (index2 >= t1)
    throw $.ioore(index2);
  a[index2] = t2;
  if (right < 0 || right >= t1)
    throw $.ioore(right);
  t2 = a[right];
  if (index4 >= t1)
    throw $.ioore(index4);
  a[index4] = t2;
  less = left + 1;
  great = right - 1;
  t1 = $.$$eq(compare.call$2(el2, el4), 0) === true;
  if (t1)
    for (k = less; k <= great; ++k) {
      if (k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      comp = compare.call$2(ak, el2);
      t2 = $.getInterceptor(comp);
      if (t2.$eq(comp, 0) === true)
        continue;
      if (t2.$lt(comp, 0) === true) {
        if (k !== less) {
          t2 = a.length;
          if (less >= t2)
            throw $.ioore(less);
          t3 = a[less];
          if (k >= t2)
            throw $.ioore(k);
          a[k] = t3;
          a[less] = ak;
        }
        ++less;
      } else
        for (; true;) {
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          comp = compare.call$2(a[great], el2);
          t2 = $.getInterceptor$JSNumber(comp);
          if (t2.$gt(comp, 0) === true) {
            --great;
            continue;
          } else {
            t2 = t2.$lt(comp, 0);
            t3 = a.length;
            great0 = great - 1;
            if (t2 === true) {
              if (less >= t3)
                throw $.ioore(less);
              t2 = a[less];
              if (k >= t3)
                throw $.ioore(k);
              a[k] = t2;
              less0 = less + 1;
              if (great >= t3)
                throw $.ioore(great);
              a[less] = a[great];
              a[great] = ak;
              great = great0;
              less = less0;
              break;
            } else {
              if (great >= t3)
                throw $.ioore(great);
              t2 = a[great];
              if (k >= t3)
                throw $.ioore(k);
              a[k] = t2;
              a[great] = ak;
              great = great0;
              break;
            }
          }
        }
    }
  else
    for (k = less; k <= great; ++k) {
      if (k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      if ($.$$lt(compare.call$2(ak, el2), 0) === true) {
        if (k !== less) {
          t2 = a.length;
          if (less >= t2)
            throw $.ioore(less);
          t3 = a[less];
          if (k >= t2)
            throw $.ioore(k);
          a[k] = t3;
          a[less] = ak;
        }
        ++less;
      } else if ($.$$gt(compare.call$2(ak, el4), 0) === true)
        for (; true;) {
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          if ($.$$gt(compare.call$2(a[great], el4), 0) === true) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            if (great >= a.length)
              throw $.ioore(great);
            t2 = $.$$lt(compare.call$2(a[great], el2), 0);
            great0 = great - 1;
            t3 = a.length;
            if (t2 === true) {
              if (less >= t3)
                throw $.ioore(less);
              t2 = a[less];
              if (k >= t3)
                throw $.ioore(k);
              a[k] = t2;
              less0 = less + 1;
              if (great >= t3)
                throw $.ioore(great);
              a[less] = a[great];
              a[great] = ak;
              less = less0;
            } else {
              if (great >= t3)
                throw $.ioore(great);
              t2 = a[great];
              if (k >= t3)
                throw $.ioore(k);
              a[k] = t2;
              a[great] = ak;
            }
            great = great0;
            break;
          }
        }
    }
  t2 = less - 1;
  t3 = a.length;
  if (t2 >= t3)
    throw $.ioore(t2);
  t4 = a[t2];
  if (left >= t3)
    throw $.ioore(left);
  a[left] = t4;
  a[t2] = el2;
  t2 = great + 1;
  if (t2 < 0 || t2 >= t3)
    throw $.ioore(t2);
  t4 = a[t2];
  if (right >= t3)
    throw $.ioore(right);
  a[right] = t4;
  a[t2] = el4;
  $.Sort__doSort(a, left, less - 2, compare);
  $.Sort__doSort(a, great + 2, right, compare);
  if (t1)
    return;
  if (less < index1 && great > index5) {
    while (true) {
      if (less >= a.length)
        throw $.ioore(less);
      if (!($.$$eq(compare.call$2(a[less], el2), 0) === true))
        break;
      ++less;
    }
    while (true) {
      if (great < 0 || great >= a.length)
        throw $.ioore(great);
      if (!($.$$eq(compare.call$2(a[great], el4), 0) === true))
        break;
      --great;
    }
    for (k = less; k <= great; ++k) {
      if (k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      if ($.$$eq(compare.call$2(ak, el2), 0) === true) {
        if (k !== less) {
          t1 = a.length;
          if (less >= t1)
            throw $.ioore(less);
          t2 = a[less];
          if (k >= t1)
            throw $.ioore(k);
          a[k] = t2;
          a[less] = ak;
        }
        ++less;
      } else if ($.$$eq(compare.call$2(ak, el4), 0) === true)
        for (; true;) {
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          if ($.$$eq(compare.call$2(a[great], el4), 0) === true) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            if (great >= a.length)
              throw $.ioore(great);
            t1 = $.$$lt(compare.call$2(a[great], el2), 0);
            great0 = great - 1;
            t2 = a.length;
            if (t1 === true) {
              if (less >= t2)
                throw $.ioore(less);
              t1 = a[less];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              less0 = less + 1;
              if (great >= t2)
                throw $.ioore(great);
              a[less] = a[great];
              a[great] = ak;
              less = less0;
            } else {
              if (great >= t2)
                throw $.ioore(great);
              t1 = a[great];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              a[great] = ak;
            }
            great = great0;
            break;
          }
        }
    }
    $.Sort__doSort(a, less, great, compare);
  } else
    $.Sort__doSort(a, less, great, compare);
};

$.Sort__dualPivotQuicksort$bailout = function(state0, a, left, right, compare) {
  var sixth, index1, index5, index3, index2, index4, t1, el1, el2, el3, el4, el5, t0, less, great, k, ak, comp, t2, t3, great0, less0;
  sixth = $.CONSTANT5.$tdiv(right - left + 1, 6);
  index1 = left + sixth;
  index5 = right - sixth;
  index3 = $.CONSTANT5.$tdiv(left + right, 2);
  index2 = index3 - sixth;
  index4 = index3 + sixth;
  t1 = a.length;
  if (index1 < 0 || index1 >= t1)
    throw $.ioore(index1);
  el1 = a[index1];
  if (index2 < 0 || index2 >= t1)
    throw $.ioore(index2);
  el2 = a[index2];
  if (index3 < 0 || index3 >= t1)
    throw $.ioore(index3);
  el3 = a[index3];
  if (index4 < 0 || index4 >= t1)
    throw $.ioore(index4);
  el4 = a[index4];
  if (index5 < 0 || index5 >= t1)
    throw $.ioore(index5);
  el5 = a[index5];
  if ($.$$gt(compare.call$2(el1, el2), 0) === true) {
    t0 = el2;
    el2 = el1;
    el1 = t0;
  }
  if ($.$$gt(compare.call$2(el4, el5), 0) === true) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  if ($.$$gt(compare.call$2(el1, el3), 0) === true) {
    t0 = el3;
    el3 = el1;
    el1 = t0;
  }
  if ($.$$gt(compare.call$2(el2, el3), 0) === true) {
    t0 = el3;
    el3 = el2;
    el2 = t0;
  }
  if ($.$$gt(compare.call$2(el1, el4), 0) === true) {
    t0 = el4;
    el4 = el1;
    el1 = t0;
  }
  if ($.$$gt(compare.call$2(el3, el4), 0) === true) {
    t0 = el4;
    el4 = el3;
    el3 = t0;
  }
  if ($.$$gt(compare.call$2(el2, el5), 0) === true) {
    t0 = el5;
    el5 = el2;
    el2 = t0;
  }
  if ($.$$gt(compare.call$2(el2, el3), 0) === true) {
    t0 = el3;
    el3 = el2;
    el2 = t0;
  }
  if ($.$$gt(compare.call$2(el4, el5), 0) === true) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  $.CONSTANT1.$indexSet(a, index1, el1);
  $.CONSTANT1.$indexSet(a, index3, el3);
  $.CONSTANT1.$indexSet(a, index5, el5);
  if (left < 0 || left >= a.length)
    throw $.ioore(left);
  $.CONSTANT1.$indexSet(a, index2, a[left]);
  if (right < 0 || right >= a.length)
    throw $.ioore(right);
  $.CONSTANT1.$indexSet(a, index4, a[right]);
  less = left + 1;
  great = right - 1;
  t1 = $.$$eq(compare.call$2(el2, el4), 0) === true;
  if (t1)
    for (k = less; k <= great; ++k) {
      if (k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      comp = compare.call$2(ak, el2);
      t2 = $.getInterceptor(comp);
      if (t2.$eq(comp, 0) === true)
        continue;
      if (t2.$lt(comp, 0) === true) {
        if (k !== less) {
          if (less >= a.length)
            throw $.ioore(less);
          $.CONSTANT1.$indexSet(a, k, a[less]);
          $.CONSTANT1.$indexSet(a, less, ak);
        }
        ++less;
      } else
        for (; true;) {
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          comp = compare.call$2(a[great], el2);
          t2 = $.getInterceptor$JSNumber(comp);
          if (t2.$gt(comp, 0) === true) {
            --great;
            continue;
          } else {
            t2 = t2.$lt(comp, 0);
            t3 = a.length;
            great0 = great - 1;
            if (t2 === true) {
              if (less >= t3)
                throw $.ioore(less);
              $.CONSTANT1.$indexSet(a, k, a[less]);
              less0 = less + 1;
              if (great >= a.length)
                throw $.ioore(great);
              $.CONSTANT1.$indexSet(a, less, a[great]);
              $.CONSTANT1.$indexSet(a, great, ak);
              great = great0;
              less = less0;
              break;
            } else {
              if (great >= t3)
                throw $.ioore(great);
              $.CONSTANT1.$indexSet(a, k, a[great]);
              $.CONSTANT1.$indexSet(a, great, ak);
              great = great0;
              break;
            }
          }
        }
    }
  else
    for (k = less; k <= great; ++k) {
      if (k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      if ($.$$lt(compare.call$2(ak, el2), 0) === true) {
        if (k !== less) {
          if (less >= a.length)
            throw $.ioore(less);
          $.CONSTANT1.$indexSet(a, k, a[less]);
          $.CONSTANT1.$indexSet(a, less, ak);
        }
        ++less;
      } else if ($.$$gt(compare.call$2(ak, el4), 0) === true)
        for (; true;) {
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          if ($.$$gt(compare.call$2(a[great], el4), 0) === true) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            if (great >= a.length)
              throw $.ioore(great);
            t2 = $.$$lt(compare.call$2(a[great], el2), 0);
            great0 = great - 1;
            t3 = a.length;
            if (t2 === true) {
              if (less >= t3)
                throw $.ioore(less);
              $.CONSTANT1.$indexSet(a, k, a[less]);
              less0 = less + 1;
              if (great >= a.length)
                throw $.ioore(great);
              $.CONSTANT1.$indexSet(a, less, a[great]);
              $.CONSTANT1.$indexSet(a, great, ak);
              great = great0;
              less = less0;
            } else {
              if (great >= t3)
                throw $.ioore(great);
              $.CONSTANT1.$indexSet(a, k, a[great]);
              $.CONSTANT1.$indexSet(a, great, ak);
              great = great0;
            }
            break;
          }
        }
    }
  t2 = less - 1;
  if (t2 >= a.length)
    throw $.ioore(t2);
  $.CONSTANT1.$indexSet(a, left, a[t2]);
  $.CONSTANT1.$indexSet(a, t2, el2);
  t2 = great + 1;
  if (t2 < 0 || t2 >= a.length)
    throw $.ioore(t2);
  $.CONSTANT1.$indexSet(a, right, a[t2]);
  $.CONSTANT1.$indexSet(a, t2, el4);
  $.Sort__doSort(a, left, less - 2, compare);
  $.Sort__doSort(a, great + 2, right, compare);
  if (t1)
    return;
  if (less < index1 && great > index5) {
    while (true) {
      if (less >= a.length)
        throw $.ioore(less);
      if (!($.$$eq(compare.call$2(a[less], el2), 0) === true))
        break;
      ++less;
    }
    while (true) {
      if (great < 0 || great >= a.length)
        throw $.ioore(great);
      if (!($.$$eq(compare.call$2(a[great], el4), 0) === true))
        break;
      --great;
    }
    for (k = less; k <= great; ++k) {
      if (k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      if ($.$$eq(compare.call$2(ak, el2), 0) === true) {
        if (k !== less) {
          if (less >= a.length)
            throw $.ioore(less);
          $.CONSTANT1.$indexSet(a, k, a[less]);
          $.CONSTANT1.$indexSet(a, less, ak);
        }
        ++less;
      } else if ($.$$eq(compare.call$2(ak, el4), 0) === true)
        for (; true;) {
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          if ($.$$eq(compare.call$2(a[great], el4), 0) === true) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            if (great >= a.length)
              throw $.ioore(great);
            t1 = $.$$lt(compare.call$2(a[great], el2), 0);
            great0 = great - 1;
            t2 = a.length;
            if (t1 === true) {
              if (less >= t2)
                throw $.ioore(less);
              $.CONSTANT1.$indexSet(a, k, a[less]);
              less0 = less + 1;
              if (great >= a.length)
                throw $.ioore(great);
              $.CONSTANT1.$indexSet(a, less, a[great]);
              $.CONSTANT1.$indexSet(a, great, ak);
              great = great0;
              less = less0;
            } else {
              if (great >= t2)
                throw $.ioore(great);
              $.CONSTANT1.$indexSet(a, k, a[great]);
              $.CONSTANT1.$indexSet(a, great, ak);
              great = great0;
            }
            break;
          }
        }
    }
    $.Sort__doSort(a, less, great, compare);
  } else
    $.Sort__doSort(a, less, great, compare);
};

$.ToString_collectionToString = function(c) {
  var result = $.JsStringBuffer$("");
  $.ToString__emitCollection(c, result, $.List_List(0));
  return result.toString$0();
};

$.ToString__emitCollection = function(c, result, visiting) {
  var t1, isList, t2, t3, first, t4;
  t1 = $.getInterceptor$JSArray(visiting);
  t1.add$1(visiting, c);
  isList = typeof c === "object" && c !== null && (c.constructor === Array || c.$isList());
  t2 = isList ? "[" : "{";
  t3 = $.getInterceptor$JSArray(result);
  t3.add$1(result, t2);
  for (t2 = $.iterator(c), first = true; t2.moveNext$0() === true; first = false) {
    t4 = t2.get$current();
    if (!first)
      t3.add$1(result, ", ");
    $.ToString__emitObject(t4, result, visiting);
  }
  t3.add$1(result, isList ? "]" : "}");
  t1.removeLast$0(visiting);
};

$.ToString__emitObject = function(o, result, visiting) {
  if (typeof o === "object" && o !== null && (o.constructor === Array || o.$isCollection()))
    if ($.ToString__containsRef(visiting, o) === true)
      $.add(result, typeof o === "object" && o !== null && (o.constructor === Array || o.$isList()) ? "[...]" : "{...}");
    else
      $.ToString__emitCollection(o, result, visiting);
  else if (typeof o === "object" && o !== null && o.$isMap())
    if ($.ToString__containsRef(visiting, o) === true)
      $.add(result, "{...}");
    else
      $.ToString__emitMap(o, result, visiting);
  else
    $.add(result, o);
};

$.ToString__containsRef = function(c, ref) {
  var t1, t2;
  for (t1 = $.iterator(c); t1.moveNext$0() === true;) {
    t2 = t1.get$current();
    if (t2 == null ? ref == null : t2 === ref)
      return true;
  }
  return false;
};

$.ToString_mapToString = function(m) {
  var result = $.JsStringBuffer$("");
  $.ToString__emitMap(m, result, $.List_List(0));
  return result.toString$0();
};

$.ToString__emitMap = function(m, result, visiting) {
  var t1, t2, t3;
  t1 = {};
  t2 = $.getInterceptor$JSArray(visiting);
  t2.add$1(visiting, m);
  t3 = $.getInterceptor$JSArray(result);
  t3.add$1(result, "{");
  t1.first_0 = true;
  $.forEach(m, new $.ToString__emitMap_anon(t1, result, visiting));
  t3.add$1(result, "}");
  t2.removeLast$0(visiting);
};

$.Strings__toJsStringArray = function(strings) {
  var $length, i, string;
  $.checkNull(strings);
  if (!strings.constructor === Array)
    strings = $.List_List$from(strings);
  $length = strings.length;
  for (i = 0; i < $length; ++i) {
    string = strings[i];
    if (!(typeof string === "string"))
      throw $.$$throw($.ArgumentError$(string));
  }
  return strings;
};

$._callInIsolate = function(isolate, $function) {
  isolate.eval$1($function);
  $globalState.topEventLoop.run$0();
};

$._currentIsolate = function() {
  return $globalState.currentContext;
};

$.startRootIsolate = function(entry) {
  var t1, rootContext;
  t1 = $._Manager$();
  $._globalState0(t1);
  if ($globalState.isWorker === true)
    return;
  rootContext = $._IsolateContext$();
  $globalState.rootContext = rootContext;
  $globalState.currentContext = rootContext;
  rootContext.eval$1(entry);
  $globalState.topEventLoop.run$0();
};

$._globalState = function() {
  return $globalState;
};

$._globalState0 = function(val) {
  $globalState = val;
};

$._Manager$ = function() {
  var t1 = new $._Manager(0, 0, 1, null, null, null, null, null, null, null, null, null);
  t1._Manager$0();
  return t1;
};

$._IsolateContext$ = function() {
  var t1 = new $._IsolateContext(null, null, null);
  t1._IsolateContext$0();
  return t1;
};

$._EventLoop$ = function() {
  return new $._EventLoop($.Queue_Queue(), 0);
};

$._IsolateEvent$ = function(isolate, fn, message) {
  return new $._IsolateEvent(isolate, fn, message);
};

$._MainManagerStub$ = function() {
  return new $._MainManagerStub();
};

$.IsolateNatives_computeThisScript = function() {
  var scripts, len, i, script, src, t1;
  scripts = document.getElementsByTagName('script');
  for (len = scripts.length, i = 0; i < len; ++i) {
    script = scripts[i];
    src = script && script.src;
    t1 = $.getInterceptor(src);
    if (!(src == null) && t1.endsWith$1(src, "test_controller.js") !== true && t1.endsWith$1(src, "dart.js") !== true)
      return src;
  }
  return;
};

$.IsolateNatives_computeGlobalThis = function() {
  return function() { return this; }();
};

$.IsolateNatives__processWorkerMessage = function(sender, e) {
  var msg, t1, t2, entryPoint, replyTo, context;
  msg = $._deserializeMessage(e.data);
  t1 = $.getInterceptor$JSArrayJSString(msg);
  switch (t1.$index(msg, "command")) {
    case "start":
      t2 = t1.$index(msg, "id");
      $globalState.currentManagerId = t2;
      entryPoint = $[t1.$index(msg, "functionName")];
      replyTo = $._deserializeMessage(t1.$index(msg, "replyTo"));
      context = $._IsolateContext$();
      $globalState.topEventLoop.enqueue$3(context, new $.IsolateNatives__processWorkerMessage_function(entryPoint, replyTo), "worker-start");
      $globalState.currentContext = context;
      $globalState.topEventLoop.run$0();
      break;
    case "spawn-worker":
      $.IsolateNatives__spawnWorker(t1.$index(msg, "functionName"), t1.$index(msg, "uri"), t1.$index(msg, "replyPort"));
      break;
    case "message":
      if (!(t1.$index(msg, "port") == null))
        t1.$index(msg, "port").send$2(t1.$index(msg, "msg"), t1.$index(msg, "replyTo"));
      $globalState.topEventLoop.run$0();
      break;
    case "close":
      $.IsolateNatives__log("Closing Worker");
      $.remove($globalState.managers, sender.get$id());
      sender.terminate$0();
      $globalState.topEventLoop.run$0();
      break;
    case "log":
      $.IsolateNatives__log(t1.$index(msg, "msg"));
      break;
    case "print":
      if ($globalState.isWorker === true)
        $globalState.mainManager.postMessage$1($._serializeMessage($.makeLiteralMap(["command", "print", "msg", msg])));
      else
        $.Primitives_printString($.toString(t1.$index(msg, "msg")));
      break;
    case "error":
      throw $.$$throw(t1.$index(msg, "msg"));
  }
};

$.IsolateNatives__log = function(msg) {
  var trace, exception;
  if ($globalState.isWorker === true)
    $globalState.mainManager.postMessage$1($._serializeMessage($.makeLiteralMap(["command", "log", "msg", msg])));
  else
    try {
      $.get$globalThis().console.log(msg);
    } catch (exception) {
      $.unwrapException(exception);
      trace = $.getTraceFromException(exception);
      throw $.$$throw($._ExceptionImplementation$(trace));
    }

};

$.IsolateNatives_spawnFunction = function(topLevelFunction) {
  var $name = (topLevelFunction.$name || null);
  if ($name == null)
    throw $.$$throw($.UnsupportedError$("only top-level functions can be spawned."));
  return $.IsolateNatives_spawn($name, null, false);
};

$.IsolateNatives_spawn = function(functionName, uri, isLight) {
  var completer, port, signalReply;
  completer = $._CompleterImpl$();
  port = $.ReceivePortImpl$();
  port.receive$1(new $.IsolateNatives_spawn_anon(completer, port));
  signalReply = port.toSendPort$0();
  if ($globalState.get$useWorkers() === true && !isLight)
    $.IsolateNatives__startWorker(functionName, uri, signalReply);
  else
    $.IsolateNatives__startNonWorker(functionName, uri, signalReply);
  return $._BufferingSendPort$($globalState.currentContext.get$id(), completer.future);
};

$.IsolateNatives__startWorker = function(functionName, uri, replyPort) {
  if ($globalState.isWorker === true)
    $globalState.mainManager.postMessage$1($._serializeMessage($.makeLiteralMap(["command", "spawn-worker", "functionName", functionName, "uri", uri, "replyPort", replyPort])));
  else
    $.IsolateNatives__spawnWorker(functionName, uri, replyPort);
};

$.IsolateNatives__startNonWorker = function(functionName, uri, replyPort) {
  if (!(uri == null))
    throw $.$$throw($.UnsupportedError$("Currently spawnUri is not supported without web workers."));
  $globalState.topEventLoop.enqueue$3($._IsolateContext$(), new $.IsolateNatives__startNonWorker_function(functionName, replyPort), "nonworker start");
};

$.IsolateNatives__startIsolate = function(topLevel, replyTo) {
  $.lazyPort = $.ReceivePortImpl$();
  replyTo.send$2("spawned", $._Isolate_port().toSendPort$0());
  topLevel.call$0();
};

$.IsolateNatives__spawnWorker = function(functionName, uri, replyPort) {
  var worker, t1, workerId;
  if (functionName == null)
    functionName = "main";
  if (uri == null)
    uri = $.get$IsolateNatives_thisScript();
  worker = new Worker(uri);
  worker.set$onmessage(function(e) { $.IsolateNatives__processWorkerMessage.call$2(worker, e); });
  t1 = $globalState;
  workerId = t1.nextManagerId;
  t1.nextManagerId = workerId + 1;
  worker.set$id(workerId);
  $.$$indexSet($globalState.managers, workerId, worker);
  worker.postMessage$1($._serializeMessage($.makeLiteralMap(["command", "start", "id", workerId, "replyTo", $._serializeMessage(replyPort), "functionName", functionName])));
};

$._NativeJsSendPort$ = function(_receivePort, isolateId) {
  return new $._NativeJsSendPort(_receivePort, isolateId);
};

$._WorkerSendPort$ = function(_workerId, isolateId, _receivePortId) {
  return new $._WorkerSendPort(_workerId, _receivePortId, isolateId);
};

$._BufferingSendPort$ = function(isolateId, _futurePort) {
  var t1 = new $._BufferingSendPort($._BufferingSendPort__idCount, null, _futurePort, [], isolateId);
  t1._BufferingSendPort$2(isolateId, _futurePort);
  return t1;
};

$.ReceivePortImpl$ = function() {
  var t1 = $.ReceivePortImpl__nextFreeId;
  $.ReceivePortImpl__nextFreeId = $.$$add(t1, 1);
  t1 = new $.ReceivePortImpl(t1, null);
  t1.ReceivePortImpl$0();
  return t1;
};

$._waitForPendingPorts = function(message, callback) {
  var finder = $._PendingSendPortFinder$();
  finder.traverse$1(message);
  $._FutureImpl__FutureImpl$wait(finder.ports).then$1(new $._waitForPendingPorts_anon(callback));
};

$._PendingSendPortFinder$ = function() {
  var t1 = new $._PendingSendPortFinder([], $._MessageTraverserVisitedMap$());
  t1._PendingSendPortFinder$0();
  return t1;
};

$._serializeMessage = function(message) {
  if ($globalState.get$needSerialization() === true)
    return $._JsSerializer$().traverse$1(message);
  else
    return $._JsCopier$().traverse$1(message);
};

$._deserializeMessage = function(message) {
  if ($globalState.get$needSerialization() === true)
    return $._JsDeserializer$().deserialize$1(message);
  else
    return message;
};

$._JsSerializer$ = function() {
  var t1 = new $._JsSerializer(0, $._MessageTraverserVisitedMap$());
  t1._JsSerializer$0();
  return t1;
};

$._JsCopier$ = function() {
  var t1 = new $._JsCopier($._MessageTraverserVisitedMap$());
  t1._JsCopier$0();
  return t1;
};

$._JsDeserializer$ = function() {
  return new $._JsDeserializer(null);
};

$._JsVisitedMap$ = function() {
  return new $._JsVisitedMap(null);
};

$._MessageTraverserVisitedMap$ = function() {
  return new $._MessageTraverserVisitedMap();
};

$.TimerImpl$ = function(milliseconds, callback) {
  var t1 = new $.TimerImpl(true, false, null);
  t1.TimerImpl$2(milliseconds, callback);
  return t1;
};

$.hasTimer = function() {
  return !($.get$globalThis().setTimeout == null);
};

$.checkMutable = function(list, reason) {
  if (!!(list.immutable$list))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.checkGrowable = function(list, reason) {
  if (!!(list.fixed$length))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.S = function(value) {
  var res;
  if (typeof value === "string")
    return value;
  if (typeof value === "number" && !(value === 0) || typeof value === "boolean")
    return String(value);
  if (value == null)
    return "null";
  res = $.toString(value);
  if (!(typeof res === "string"))
    throw $.$$throw($.ArgumentError$(value));
  return res;
};

$.Primitives_objectHashCode = function(object) {
  var hash = object.$identityHash;
  if (hash == null) {
    hash = $.$$add($.Primitives_hashCodeSeed, 1);
    $.Primitives_hashCodeSeed = hash;
    object.$identityHash = hash;
  }
  return hash;
};

$.Primitives_printString = function(string) {
  if (typeof dartPrint == "function") {
    dartPrint(string);
    return;
  }
  if (typeof window == "object") {
    if (typeof console == "object")
      console.log(string);
    return;
  }
  if (typeof print == "function") {
    print(string);
    return;
  }
  throw 'Unable to print message: ' + String(string);
};

$.Primitives__throwFormatException = function(string) {
  throw $.$$throw($.FormatException$(string));
};

$.Primitives_parseInt = function(source, radix, handleError) {
  var match, t1, maxCharCode, digitsPart, i;
  if (handleError == null)
    handleError = $.Primitives__throwFormatException;
  $.checkString(source);
  match = /^\s*[+-]?((0x[a-f0-9]+)|(\d+)|([a-z0-9]+))\s*$/i.exec(source);
  if (radix == null) {
    t1 = $.getInterceptor(match);
    if (!(match == null)) {
      if (!(t1.$index(match, 2) == null))
        return parseInt(source, 16);
      if (!(t1.$index(match, 3) == null))
        return parseInt(source, 10);
      return handleError.call$1(source);
    }
    radix = 10;
  } else {
    if (!(typeof radix === "number" && Math.floor(radix) === radix))
      throw $.$$throw($.ArgumentError$("Radix is not an integer"));
    if (radix < 2 || radix > 36)
      throw $.$$throw($.RangeError$("Radix " + $.S(radix) + " not in range 2..36"));
    t1 = $.getInterceptor(match);
    if (!(match == null)) {
      if (radix === 10 && !(t1.$index(match, 3) == null))
        return parseInt(source, 10);
      if (radix < 10 || t1.$index(match, 3) == null) {
        maxCharCode = radix <= 10 ? 48 + radix - 1 : 97 + radix - 10 - 1;
        digitsPart = $.toLowerCase(t1.$index(match, 1));
        for (t1 = $.getInterceptor$JSArrayJSString(digitsPart), i = 0; $.CONSTANT5.$lt(i, t1.get$length(digitsPart)); ++i)
          if ($.$$gt(t1.charCodeAt$1(digitsPart, i), maxCharCode) === true)
            return handleError.call$1(source);
      }
    }
    radix = radix;
  }
  if (match == null)
    return handleError.call$1(source);
  return parseInt(source, radix);
};

$.Primitives_objectTypeName = function(object) {
  var $name, decompiled, t1;
  $name = $.constructorNameFallback(object);
  if ($.$$eq($name, "Object") === true) {
    decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
    if (typeof decompiled === "string")
      $name = decompiled;
  }
  t1 = $.getInterceptor$JSString($name);
  return t1.charCodeAt$1($name, 0) === 36 ? t1.substring$1($name, 1) : $name;
};

$.Primitives_newFixedList = function($length) {
  var result = new Array($length);
  result.fixed$length = true;
  return result;
};

$.Primitives_dateNow = function() {
  return Date.now();
};

$.Primitives__fromCharCodeApply = function(array) {
  var end, t1, result, i, subarray, t2;
  end = array.length;
  for (t1 = end <= 500, result = "", i = 0; i < end; i += 500) {
    if (t1)
      subarray = array;
    else {
      t2 = i + 500;
      t2 = t2 < end ? t2 : end;
      subarray = array.slice(i, t2);
    }
    result = result + String.fromCharCode.apply(null, subarray);
  }
  return result;
};

$.Primitives_stringFromCodePoints = function(codePoints) {
  var a, t1, t2;
  a = [];
  for (t1 = $.CONSTANT1.get$iterator(codePoints); t1.moveNext$0() === true;) {
    t2 = t1.get$current();
    if (!(typeof t2 === "number" && Math.floor(t2) === t2))
      throw $.$$throw($.ArgumentError$(t2));
    if (t2 <= 65535)
      a.push(t2);
    else if (t2 <= 1114111) {
      a.push(55296 + ($.CONSTANT5.$shr(t2 - 65536, 10) & 1023));
      a.push(56320 + (t2 & 1023));
    } else
      throw $.$$throw($.ArgumentError$(t2));
  }
  return $.Primitives__fromCharCodeApply(a);
};

$.Primitives_stringFromCharCodes = function(charCodes) {
  var t1, t2;
  for (t1 = $.CONSTANT1.get$iterator(charCodes); t1.moveNext$0() === true;) {
    t2 = t1.get$current();
    if (!(typeof t2 === "number" && Math.floor(t2) === t2))
      throw $.$$throw($.ArgumentError$(t2));
    if (t2 < 0)
      throw $.$$throw($.ArgumentError$(t2));
    if (t2 > 65535)
      return $.Primitives_stringFromCodePoints(charCodes);
  }
  return $.Primitives__fromCharCodeApply(charCodes);
};

$.Primitives_lazyAsJsDate = function(receiver) {
  if (receiver.date === (void 0))
    receiver.date = new Date(receiver.millisecondsSinceEpoch);
  return receiver.date;
};

$.Primitives_getYear = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCFullYear() + 0) : ($.Primitives_lazyAsJsDate(receiver).getFullYear() + 0);
};

$.Primitives_getMonth = function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1 : $.Primitives_lazyAsJsDate(receiver).getMonth() + 1;
};

$.Primitives_getDay = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCDate() + 0) : ($.Primitives_lazyAsJsDate(receiver).getDate() + 0);
};

$.Primitives_getHours = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCHours() + 0) : ($.Primitives_lazyAsJsDate(receiver).getHours() + 0);
};

$.Primitives_getMinutes = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCMinutes() + 0) : ($.Primitives_lazyAsJsDate(receiver).getMinutes() + 0);
};

$.Primitives_getSeconds = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCSeconds() + 0) : ($.Primitives_lazyAsJsDate(receiver).getSeconds() + 0);
};

$.Primitives_getMilliseconds = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() + 0) : ($.Primitives_lazyAsJsDate(receiver).getMilliseconds() + 0);
};

$.iae = function(argument) {
  throw $.$$throw($.ArgumentError$(argument));
};

$.ioore = function(index) {
  throw $.$$throw($.RangeError$value(index));
};

$.listInsertRange = function(receiver, start, $length, initialValue) {
  var receiverLength, t1, t2, t3, i;
  if (typeof receiver !== "object" || receiver === null || (receiver.constructor !== Array || !!receiver.immutable$list) && !receiver.$isJavaScriptIndexingBehavior())
    return $.listInsertRange$bailout(1, receiver, start, $length, initialValue);
  if ($.$$eq($length, 0) === true)
    return;
  if (!(typeof $length === "number" && Math.floor($length) === $length))
    throw $.$$throw($.ArgumentError$($length));
  if ($length < 0)
    throw $.$$throw($.ArgumentError$($length));
  if (!(typeof start === "number" && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  receiverLength = receiver.length;
  if (start < 0 || start > receiverLength)
    throw $.$$throw($.RangeError$value(start));
  t1 = receiverLength + $length;
  $.CONSTANT1.set$length(receiver, t1);
  t2 = start + $length;
  $.Arrays_copy(receiver, start, receiver, t2, receiverLength - start);
  if (!(initialValue == null))
    for (t3 = receiver.length, i = start; i < t2; ++i) {
      if (i < 0 || i >= t3)
        throw $.ioore(i);
      receiver[i] = initialValue;
    }
  $.CONSTANT1.set$length(receiver, t1);
};

$.listInsertRange$bailout = function(state0, receiver, start, $length, initialValue) {
  var receiverLength, t1, t2, i;
  if ($.$$eq($length, 0) === true)
    return;
  if (!(typeof $length === "number" && Math.floor($length) === $length))
    throw $.$$throw($.ArgumentError$($length));
  if ($length < 0)
    throw $.$$throw($.ArgumentError$($length));
  if (!(typeof start === "number" && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  receiverLength = receiver.length;
  if (start < 0 || start > receiverLength)
    throw $.$$throw($.RangeError$value(start));
  t1 = receiverLength + $length;
  $.CONSTANT1.set$length(receiver, t1);
  t2 = start + $length;
  $.Arrays_copy(receiver, start, receiver, t2, receiverLength - start);
  if (!(initialValue == null))
    for (i = start; i < t2; ++i)
      $.CONSTANT1.$indexSet(receiver, i, initialValue);
  $.CONSTANT1.set$length(receiver, t1);
};

$.checkNull = function(object) {
  if (object == null)
    throw $.$$throw($.ArgumentError$(null));
  return object;
};

$.checkNum = function(value) {
  if (!(typeof value === "number"))
    throw $.$$throw($.ArgumentError$(value));
  return value;
};

$.checkString = function(value) {
  if (!(typeof value === "string"))
    throw $.$$throw($.ArgumentError$(value));
  return value;
};

$.$$throw = function(ex) {
  var wrapper;
  if (ex == null)
    ex = $.CONSTANT0;
  wrapper = $.DartError$(ex);
  if (!!Error.captureStackTrace)
    Error.captureStackTrace(wrapper, $.$$throw);
  else
    wrapper.stack = new Error().stack;
  return wrapper;
};

$.DartError$ = function(dartException) {
  var t1 = new $.DartError();
  t1.DartError$1(dartException);
  return t1;
};

$.DartError_toStringWrapper = function() {
  return $.toString(this);
};

$.unwrapException = function(ex) {
  var message, type, $name, t1, ieErrorCode, ieFacilityNumber, t2;
  if ("dartException" in ex)
    return ex.dartException;
  message = ex.message;
  if (ex instanceof TypeError) {
    type = ex.type;
    $name = ex.arguments ? ex.arguments[0] : "";
    if (message.indexOf("JSNull") === -1) {
      t1 = $.getInterceptor(type);
      t1 = t1.$eq(type, "property_not_function") === true || t1.$eq(type, "called_non_callable") === true || t1.$eq(type, "non_object_property_call") === true || t1.$eq(type, "non_object_property_load") === true;
    } else
      t1 = true;
    if (t1)
      return $.NoSuchMethodError$(null, $name, [], $.makeLiteralMap([]), null);
    else if ($.$$eq(type, "undefined_method") === true)
      return $.NoSuchMethodError$("", $name, [], $.makeLiteralMap([]), null);
    ieErrorCode = ex.number & 0xffff;
    ieFacilityNumber = ex.number>>16 & 0x1FFF;
    t1 = typeof message === "string";
    if (t1)
      if ($.CONSTANT.endsWith$1(message, "is null") === true || $.CONSTANT.endsWith$1(message, "is undefined") === true || $.CONSTANT.endsWith$1(message, "is null or undefined") === true || $.CONSTANT.endsWith$1(message, "of undefined") === true || $.CONSTANT.endsWith$1(message, "of null") === true)
        return $.NoSuchMethodError$(null, "<unknown>", [], $.makeLiteralMap([]), null);
      else {
        if (message.indexOf(" has no method ") === -1)
          if (message.indexOf(" is not a function") === -1)
            t2 = ieErrorCode === 438 && ieFacilityNumber === 10;
          else
            t2 = true;
        else
          t2 = true;
        if (t2)
          return $.NoSuchMethodError$("", "<unknown>", [], $.makeLiteralMap([]), null);
      }
    t1 = t1 ? message : "";
    return $._ExceptionImplementation$(t1);
  }
  if (ex instanceof RangeError) {
    if (typeof message === "string" && message.indexOf("call stack") !== -1)
      return $.StackOverflowError$();
    return $.ArgumentError$(null);
  }
  if (typeof InternalError == 'function' && ex instanceof InternalError)
    if (typeof message === "string" && message === "too much recursion")
      return $.StackOverflowError$();
  return ex;
};

$.getTraceFromException = function(exception) {
  return $.StackTrace$(exception.stack);
};

$.StackTrace$ = function(stack) {
  return new $.StackTrace(stack);
};

$.makeLiteralMap = function(keyValuePairs) {
  var iterator, result, key;
  iterator = $.CONSTANT1.get$iterator(keyValuePairs);
  result = $._LinkedHashMapImpl$();
  for (; iterator.moveNext$0() === true;) {
    key = iterator.get$current();
    iterator.moveNext$0();
    result.$indexSet(key, iterator.get$current());
  }
  return result;
};

$.invokeClosure = function(closure, isolate, numberOfArguments, arg1, arg2) {
  var t1 = $.getInterceptor(numberOfArguments);
  if (t1.$eq(numberOfArguments, 0) === true)
    return $._callInIsolate(isolate, new $.invokeClosure_anon(closure));
  else if (t1.$eq(numberOfArguments, 1) === true)
    return $._callInIsolate(isolate, new $.invokeClosure_anon0(closure, arg1));
  else if (t1.$eq(numberOfArguments, 2) === true)
    return $._callInIsolate(isolate, new $.invokeClosure_anon1(closure, arg1, arg2));
  else
    throw $.$$throw($._ExceptionImplementation$("Unsupported number of arguments for wrapped closure"));
};

$.convertDartClosureToJS = function(closure, arity) {
  var $function;
  if (closure == null)
    return;
  $function = closure.$identity;
  if (!!$function)
    return $function;
  $._currentIsolate();
  $function = function($0, $1) { return $.invokeClosure.call$5(closure, $._currentIsolate(), arity, $0, $1); };
  closure.$identity = $function;
  return $function;
};

$.throwCyclicInit = function(staticName) {
  throw $.$$throw($.RuntimeError$("Cyclic initialization for static " + $.S(staticName)));
};

$.typeNameInChrome = function(obj) {
  return $.typeNameInWebKitCommon(obj.constructor.name);
};

$.typeNameInSafari = function(obj) {
  return $.typeNameInWebKitCommon($.constructorNameFallback(obj));
};

$.typeNameInWebKitCommon = function(tag) {
  var $name = tag;
  if ($name === "Window")
    return "DOMWindow";
  if ($name === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if ($name === "WebKitMutationObserver")
    return "MutationObserver";
  if ($name === "AudioChannelMerger")
    return "ChannelMergerNode";
  if ($name === "AudioChannelSplitter")
    return "ChannelSplitterNode";
  if ($name === "AudioGainNode")
    return "GainNode";
  if ($name === "AudioPannerNode")
    return "PannerNode";
  if ($name === "JavaScriptAudioNode")
    return "ScriptProcessorNode";
  if ($name === "Oscillator")
    return "OscillatorNode";
  if ($name === "RealtimeAnalyserNode")
    return "AnalyserNode";
  if ($name === "IDBVersionChangeRequest")
    return "IDBOpenDBRequest";
  return $name;
};

$.typeNameInOpera = function(obj) {
  var $name = $.constructorNameFallback(obj);
  if ($name === "Window")
    return "DOMWindow";
  if ($name === "ApplicationCache")
    return "DOMApplicationCache";
  return $name;
};

$.typeNameInFirefox = function(obj) {
  var $name = $.constructorNameFallback(obj);
  if ($name === "Window")
    return "DOMWindow";
  if ($name === "CSS2Properties")
    return "CSSStyleDeclaration";
  if ($name === "DataTransfer")
    return "Clipboard";
  if ($name === "DragEvent")
    return "MouseEvent";
  if ($name === "GeoGeolocation")
    return "Geolocation";
  if ($name === "MouseScrollEvent")
    return "WheelEvent";
  if ($name === "OfflineResourceList")
    return "DOMApplicationCache";
  if ($name === "WorkerMessageEvent")
    return "MessageEvent";
  if ($name === "XMLDocument")
    return "Document";
  return $name;
};

$.typeNameInIE = function(obj) {
  var $name = $.constructorNameFallback(obj);
  if ($name === "Window")
    return "DOMWindow";
  if ($name === "Document") {
    if (!!obj.xmlVersion)
      return "Document";
    return "HTMLDocument";
  }
  if ($name === "ApplicationCache")
    return "DOMApplicationCache";
  if ($name === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if ($name === "DataTransfer")
    return "Clipboard";
  if ($name === "DragEvent")
    return "MouseEvent";
  if ($name === "HTMLDDElement")
    return "HTMLElement";
  if ($name === "HTMLDTElement")
    return "HTMLElement";
  if ($name === "HTMLTableDataCellElement")
    return "HTMLTableCellElement";
  if ($name === "HTMLTableHeaderCellElement")
    return "HTMLTableCellElement";
  if ($name === "HTMLPhraseElement")
    return "HTMLElement";
  if ($name === "MSStyleCSSProperties")
    return "CSSStyleDeclaration";
  if ($name === "MouseWheelEvent")
    return "WheelEvent";
  if ($name === "Position")
    return "Geoposition";
  if ($name === "Object")
    if (window.DataView && (obj instanceof window.DataView))
      return "DataView";
  return $name;
};

$.constructorNameFallback = function(object) {
  var $constructor, $name, t1, string;
  if (object == null)
    return "Null";
  $constructor = object.constructor;
  if (typeof($constructor) === "function") {
    $name = $constructor.name;
    if (typeof $name === "string")
      t1 = !($name === "") && !($name === "Object") && !($name === "Function.prototype");
    else
      t1 = false;
    if (t1)
      return $name;
  }
  string = Object.prototype.toString.call(object);
  return string.substring(8, string.length - 1);
};

$.alternateTag = function(object, tag) {
  if (!!/^HTML[A-Z].*Element$/.test(tag)) {
    if (Object.prototype.toString.call(object) === "[object Object]")
      return;
    return "HTMLElement";
  }
  return;
};

$.callHasOwnProperty = function($function, object, property) {
  return $function.call(object, property);
};

$.getFunctionForTypeNameOf = function() {
  if (!(typeof(navigator) === "object"))
    return $.typeNameInChrome;
  var userAgent = navigator.userAgent;
  if (userAgent.indexOf("Chrome") !== -1 || userAgent.indexOf("DumpRenderTree") !== -1)
    return $.typeNameInChrome;
  else if (userAgent.indexOf("Firefox") !== -1)
    return $.typeNameInFirefox;
  else if (userAgent.indexOf("MSIE") !== -1)
    return $.typeNameInIE;
  else if (userAgent.indexOf("Opera") !== -1)
    return $.typeNameInOpera;
  else if (userAgent.indexOf("AppleWebKit") !== -1)
    return $.typeNameInSafari;
  else
    return $.constructorNameFallback;
};

$.getTypeNameOf = function(obj) {
  if ($._getTypeNameOf == null)
    $._getTypeNameOf = $.getFunctionForTypeNameOf();
  return $._getTypeNameOf.call$1(obj);
};

$.toStringForNativeObject = function(obj) {
  return "Instance of " + $.getTypeNameOf(obj);
};

$.hashCodeForNativeObject = function(object) {
  return $.Primitives_objectHashCode(object);
};

$.defineProperty = function(obj, property, value) {
  Object.defineProperty(obj, property, {value: value, enumerable: false, writable: true, configurable: true});
};

$.dynamicBind = function(obj, $name, methods, $arguments) {
  var tag, hasOwnPropertyFunction, method, secondTag, proto;
  tag = $.getTypeNameOf(obj);
  hasOwnPropertyFunction = Object.prototype.hasOwnProperty;
  method = $.dynamicBindLookup(hasOwnPropertyFunction, tag, methods);
  if (method == null) {
    secondTag = $.alternateTag(obj, tag);
    if (!(secondTag == null))
      method = $.dynamicBindLookup(hasOwnPropertyFunction, secondTag, methods);
  }
  if (method == null)
    method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, $.getTypeNameOf($.CONSTANT20));
  proto = Object.getPrototypeOf(obj);
  if (method == null)
    method = function () {if (Object.getPrototypeOf(this) === proto) {throw new TypeError($name + " is not a function");} else {return Object.prototype[$name].apply(this, arguments);}};
  if ($.callHasOwnProperty(hasOwnPropertyFunction, proto, $name) !== true)
    $.defineProperty(proto, $name, method);
  return method.apply(obj, $arguments);
};

$.dynamicBindLookup = function(hasOwnPropertyFunction, tag, methods) {
  var method, i, entry;
  method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, tag);
  if (method == null && !($._dynamicMetadata0() == null))
    for (i = 0; i < $._dynamicMetadata0().length; ++i) {
      entry = $._dynamicMetadata0()[i];
      if ($.callHasOwnProperty(hasOwnPropertyFunction, entry.get$_liblib2$_set(), tag)) {
        method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, entry.get$_tag());
        if (!(method == null))
          break;
      }
    }
  return method;
};

$.lookupDynamicClass = function(hasOwnPropertyFunction, methods, className) {
  return $.callHasOwnProperty(hasOwnPropertyFunction, methods, className) ? methods[className] : null;
};

$.dynamicFunction = function($name) {
  var f, methods, dartMethod, bind;
  f = Object.prototype[$name];
  if (!(f == null) && !!f.methods)
    return f.methods;
  methods = {};
  dartMethod = Object.getPrototypeOf($.CONSTANT20)[$name];
  if (!(dartMethod == null))
    methods["Object"] = dartMethod;
  bind = function() {return $.dynamicBind.call$4(this, $name, methods, Array.prototype.slice.call(arguments));};
  bind.methods = methods;
  $.defineProperty(Object.prototype, $name, bind);
  return methods;
};

$.MetaInfo$ = function(_tag, _tags, _set) {
  return new $.MetaInfo(_tag, _tags, _set);
};

$._dynamicMetadata0 = function() {
  if (typeof($dynamicMetadata) === "undefined")
    $._dynamicMetadata([]);
  return $dynamicMetadata;
};

$._dynamicMetadata = function(table) {
  $dynamicMetadata = table;
};

$.buildDynamicMetadata = function(inputTable) {
  var result, i, tag, tags, set, tagNames, j;
  result = [];
  for (i = 0; i < inputTable.length; ++i) {
    tag = inputTable[i][0];
    tags = inputTable[i][1];
    set = {};
    tagNames = tags.split("|");
    for (j = 0; j < tagNames.length; ++j)
      set[tagNames[j]] = true;
    result.push($.MetaInfo$(tag, tags, set));
  }
  return result;
};

$.dynamicSetMetadata = function(inputTable) {
  var t1 = $.buildDynamicMetadata(inputTable);
  $._dynamicMetadata(t1);
};

$.regExpExec = function(regExp, str) {
  var result = $.regExpGetNative(regExp).exec(str);
  if (result == null)
    return;
  return result;
};

$.regExpTest = function(regExp, str) {
  return $.regExpGetNative(regExp).test(str);
};

$.regExpGetNative = function(regExp) {
  var r = regExp._re;
  return r == null ? regExp._re = $.regExpMakeNative(regExp, false) : r;
};

$.regExpMakeNative = function(regExp, global) {
  var pattern, sb, e, isMultiLine, isCaseSensitive, t1, exception;
  pattern = regExp.get$pattern();
  isMultiLine = regExp.get$isMultiLine();
  isCaseSensitive = regExp.get$isCaseSensitive();
  $.checkString(pattern);
  sb = $.JsStringBuffer$("");
  if (isMultiLine === true)
    $.add(sb, "m");
  if (isCaseSensitive !== true)
    $.add(sb, "i");
  if (global === true)
    $.add(sb, "g");
  try {
    t1 = new RegExp(pattern, $.toString(sb));
    return t1;
  } catch (exception) {
    t1 = $.unwrapException(exception);
    e = t1;
    throw $.$$throw($.IllegalJSRegExpException$(pattern, String(e)));
  }

};

$.JSSyntaxRegExp$ = function(pattern, caseSensitive, multiLine) {
  return new $.JSSyntaxRegExp(pattern, multiLine, caseSensitive);
};

$.JSSyntaxRegExp__globalVersionOf = function(other) {
  var t1, t2, re;
  t1 = other.get$pattern();
  t2 = other.get$isMultiLine();
  re = $.JSSyntaxRegExp$(t1, other.get$isCaseSensitive(), t2);
  re._re = $.regExpMakeNative(re, true);
  return re;
};

$._MatchImplementation$ = function(pattern, str, start, end, _groups) {
  return new $._MatchImplementation(pattern, str, start, end, _groups);
};

$._AllMatchesIterable$ = function(_re, _str) {
  return new $._AllMatchesIterable(_re, _str);
};

$._AllMatchesIterator$ = function(re, _str) {
  return new $._AllMatchesIterator($.JSSyntaxRegExp__globalVersionOf(re), _str, null);
};

$.StringMatch$ = function(start, str, pattern) {
  return new $.StringMatch(start, str, pattern);
};

$.allMatchesInStringUnchecked = function(needle, haystack) {
  var result, t1, $length, patternLength, startIndex, position, t2, endIndex;
  result = $.List_List(0);
  t1 = $.getInterceptor$JSArrayJSString(haystack);
  $length = t1.get$length(haystack);
  patternLength = needle.length;
  for (startIndex = 0; true;) {
    position = t1.indexOf$2(haystack, needle, startIndex);
    t2 = $.getInterceptor(position);
    if (t2.$eq(position, -1) === true)
      break;
    result.push($.StringMatch$(position, haystack, needle));
    endIndex = t2.$add(position, patternLength);
    if ($.$$eq(endIndex, $length) === true)
      break;
    else
      startIndex = t2.$eq(position, endIndex) === true ? $.$$add(startIndex, 1) : endIndex;
  }
  return result;
};

$.stringContainsUnchecked = function(receiver, other, startIndex) {
  if (typeof other === "string")
    return $.$$eq($.CONSTANT.indexOf$2(receiver, other, startIndex), -1) !== true;
  else if (typeof other === "object" && other !== null && !!other.$isJSSyntaxRegExp)
    return other.hasMatch$1($.CONSTANT.substring$1(receiver, startIndex));
  else
    return $.iterator($.allMatches(other, $.CONSTANT.substring$1(receiver, startIndex))).moveNext$0();
};

$.stringReplaceJS = function(receiver, replacer, to) {
  return receiver.replace(replacer, to.replace('$', '$$$$'));
};

$.stringReplaceAllUnchecked = function(receiver, from, to) {
  var result, $length, i;
  $.checkString(to);
  if (from === "")
    if (receiver === "")
      return to;
    else {
      result = $.JsStringBuffer$("");
      $length = receiver.length;
      result.add$1(to);
      for (i = 0; i < $length; ++i) {
        if (i >= receiver.length)
          throw $.ioore(i);
        result.add$1(receiver[i]);
        result.add$1(to);
      }
      return result.toString$0();
    }
  else
    return $.stringReplaceJS(receiver, $.regExpMakeNative($.JSSyntaxRegExp$(from.replace($.regExpMakeNative($.get$quoteRegExp(), true), "\\$&"), true, false), true), to);
};

$.JsStringBuffer$ = function($content) {
  var t1 = $content;
  return new $.JsStringBuffer(t1);
};

$.AsyncError$ = function(error, stackTrace) {
  return new $.AsyncError(error, stackTrace, null);
};

$.AsyncError$withCause = function(error, stackTrace, cause) {
  return new $.AsyncError(error, stackTrace, cause);
};

$._CompleterImpl$ = function() {
  return new $._CompleterImpl($._FutureImpl$(), false);
};

$._FutureListenerWrapper$ = function(future) {
  return new $._FutureListenerWrapper(future, null);
};

$._FutureImpl$ = function() {
  return new $._FutureImpl(0, null);
};

$._FutureImpl$immediate = function(value) {
  var t1 = new $._FutureImpl(0, null);
  t1._FutureImpl$immediate$1(value);
  return t1;
};

$._FutureImpl__FutureImpl$wait = function(futures) {
  var t1, t2, completer, values, i, i0;
  t1 = {};
  t2 = $.getInterceptor$JSArrayJSString(futures);
  if (t2.get$isEmpty(futures) === true)
    return $._FutureImpl$immediate($.CONSTANT6);
  completer = $._CompleterImpl$();
  t1.remaining_0 = t2.get$length(futures);
  values = $.List_List$fixedLength(t2.get$length(futures), null);
  t1.completed_1 = false;
  for (t2 = t2.get$iterator(futures), i = 0; t2.moveNext$0() === true; i = i0) {
    i0 = i + 1;
    t2.get$current().then$1(new $._FutureImpl__FutureImpl$wait_anon(t1, completer, values, i)).catchError$1(new $._FutureImpl__FutureImpl$wait_anon0(t1, completer));
  }
  return completer.future;
};

$._ThenFuture$ = function(_onValue) {
  return new $._ThenFuture(_onValue, null, 0, null);
};

$._CatchErrorFuture$ = function(_onError, _test) {
  return new $._CatchErrorFuture(_test, _onError, null, 0, null);
};

$._SubscribeFuture$ = function(onValue, _onError) {
  return new $._SubscribeFuture(_onError, onValue, null, 0, null);
};

$._FutureWrapper$ = function(_future) {
  return new $._FutureWrapper(_future);
};

$._nullDataHandler = function(value) {
};

$._nullErrorHandler = function(error) {
  error.throwDelayed$0();
};

$._nullDoneHandler = function() {
};

$._asyncError = function(error, stackTrace, cause) {
  if (typeof error === "object" && error !== null && !!error.$isAsyncError)
    return error;
  if (cause == null)
    return $.AsyncError$(error, stackTrace);
  return $.AsyncError$withCause(error, stackTrace, cause);
};

$._runUserCode = function(userCode, onSuccess, onError, cause) {
  var result, e, e0, s, exception, t1;
  result = null;
  try {
    result = userCode.call$0();
  } catch (exception) {
    t1 = $.unwrapException(exception);
    if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
      e = t1;
      return onError.call$1(e);
    } else {
      e0 = t1;
      s = $.getTraceFromException(exception);
      if (cause == null)
        onError.call$1($.AsyncError$(e0, s));
      else
        onError.call$1($.AsyncError$withCause(e0, s, cause));
    }
  }

  onSuccess.call$1(result);
};

$._cancelAndError = function(subscription, future) {
  return new $._cancelAndError_anon(subscription, future);
};

$._ForwardingStreamSubscription$ = function(_stream, onData, onError, onDone, _unsubscribeOnError) {
  var t1 = new $._ForwardingStreamSubscription(_stream, _unsubscribeOnError, null, onData, onError, onDone);
  t1._BaseStreamSubscription$3(onData, onError, onDone);
  t1._ForwardingStreamSubscription$5(_stream, onData, onError, onDone, _unsubscribeOnError);
  return t1;
};

$._WhereStream$ = function(source, test) {
  return new $._WhereStream(test, source);
};

$._MapStream$ = function(source, transform) {
  return new $._MapStream(transform, source);
};

$._DistinctStream$ = function(source, equals) {
  return new $._DistinctStream(equals, $.get$_DistinctStream__SENTINEL(), source);
};

$.Arrays_copy = function(src, srcStart, dst, dstStart, count) {
  var i, j, t2, t3, t1;
  if (typeof dst !== "object" || dst === null || (dst.constructor !== Array || !!dst.immutable$list) && !dst.$isJavaScriptIndexingBehavior())
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (srcStart < dstStart) {
    i = srcStart + count - 1;
    if (i !== (i | 0))
      return $.Arrays_copy$bailout(2, src, srcStart, dst, dstStart, count, i);
    j = dstStart + count - 1;
    t2 = src.length;
    t3 = dst.length;
    for (; i >= srcStart; --i, --j) {
      if (i < 0 || i >= t2)
        throw $.ioore(i);
      t1 = src[i];
      if (j !== (j | 0))
        throw $.iae(j);
      if (j < 0 || j >= t3)
        throw $.ioore(j);
      dst[j] = t1;
    }
  } else
    for (t1 = src.length, t2 = dst.length, j = dstStart, i = srcStart; i < srcStart + count; ++i, ++j) {
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      t3 = src[i];
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
    }
};

$.Arrays_copy$bailout = function(state0, src, srcStart, dst, dstStart, count, i) {
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
    case 2:
      var j;
      if (state0 === 2 || state0 === 0 && srcStart < dstStart)
        switch (state0) {
          case 0:
            i = srcStart + count - 1;
          case 2:
            state0 = 0;
            j = dstStart + count - 1;
            for (; i >= srcStart; --i, --j) {
              if (i !== (i | 0))
                throw $.iae(i);
              if (i < 0 || i >= src.length)
                throw $.ioore(i);
              $.CONSTANT1.$indexSet(dst, j, src[i]);
            }
        }
      else
        for (j = dstStart, i = srcStart; i < srcStart + count; ++i, ++j) {
          if (i < 0 || i >= src.length)
            throw $.ioore(i);
          $.CONSTANT1.$indexSet(dst, j, src[i]);
        }
  }
};

$.Arrays_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.$$eq(a[i], element) === true)
      return i;
  }
  return -1;
};

$.IterableMixinWorkaround_contains = function(iterable, element) {
  var t1, t2;
  for (t1 = $.iterator(iterable), t2 = $.getInterceptor(element); t1.moveNext$0() === true;)
    if (t2.$eq(element, t1.get$current()) === true)
      return true;
  return false;
};

$.IterableMixinWorkaround_any = function(iterable, f) {
  var t1;
  for (t1 = $.iterator(iterable); t1.moveNext$0() === true;)
    if (f.call$1(t1.get$current()) === true)
      return true;
  return false;
};

$.IterableMixinWorkaround_removeAll = function(collection, elementsToRemove) {
  var t1, t2;
  for (t1 = $.iterator(elementsToRemove), t2 = $.getInterceptor$JSArray(collection); t1.moveNext$0() === true;)
    t2.remove$1(collection, t1.get$current());
};

$.IterableMixinWorkaround_removeAllList = function(collection, elementsToRemove) {
  $.removeMatching(collection, $.contains0(typeof elementsToRemove === "object" && elementsToRemove !== null && !!elementsToRemove.$isSet ? elementsToRemove : $.toSet(elementsToRemove)));
};

$.IterableMixinWorkaround_removeMatching = function(collection, test) {
  var elementsToRemove, t1, t2, t3;
  elementsToRemove = [];
  for (t1 = $.getInterceptor$JSArray(collection), t2 = t1.get$iterator(collection); t2.moveNext$0() === true;) {
    t3 = t2.get$current();
    if (test.call$1(t3) === true)
      elementsToRemove.push(t3);
  }
  t1.removeAll$1(collection, elementsToRemove);
};

$.IterableMixinWorkaround_removeMatchingList = function(list, test) {
  var retained, $length, i, element, t1, t2, t3;
  if (typeof list !== "object" || list === null || (list.constructor !== Array || !!list.immutable$list) && !list.$isJavaScriptIndexingBehavior())
    return $.IterableMixinWorkaround_removeMatchingList$bailout(1, list, test);
  retained = [];
  $length = list.length;
  for (i = 0; i < $length; ++i) {
    if (i >= list.length)
      throw $.ioore(i);
    element = list[i];
    if (test.call$1(element) !== true)
      retained.push(element);
    if ($length !== list.length)
      throw $.$$throw($.ConcurrentModificationError$(list));
  }
  t1 = retained.length;
  if (t1 === $length)
    return;
  for (t2 = list.length, i = 0; i < t1; ++i) {
    t3 = retained[i];
    if (i >= t2)
      throw $.ioore(i);
    list[i] = t3;
  }
  $.CONSTANT1.set$length(list, t1);
};

$.IterableMixinWorkaround_removeMatchingList$bailout = function(state0, list, test) {
  var retained, $length, i, element, t1;
  retained = [];
  $length = list.length;
  for (i = 0; i < $length; ++i) {
    if (i >= list.length)
      throw $.ioore(i);
    element = list[i];
    if (test.call$1(element) !== true)
      retained.push(element);
    if ($length !== list.length)
      throw $.$$throw($.ConcurrentModificationError$(list));
  }
  if (retained.length === $length)
    return;
  for (i = 0; t1 = retained.length, i < t1; ++i)
    $.CONSTANT1.$indexSet(list, i, retained[i]);
  $.CONSTANT1.set$length(list, t1);
};

$.IterableMixinWorkaround_firstMatching = function(iterable, test, orElse) {
  var t1, t2;
  for (t1 = $.iterator(iterable); t1.moveNext$0() === true;) {
    t2 = t1.get$current();
    if (test.call$1(t2) === true)
      return t2;
  }
  if (!(orElse == null))
    return orElse.call$0();
  throw $.$$throw($.StateError$("No matching element"));
};

$.IterableMixinWorkaround_singleMatching = function(iterable, test) {
  var t1, result, foundMatching, result0;
  for (t1 = $.iterator(iterable), result = null, foundMatching = false; t1.moveNext$0() === true;) {
    result0 = t1.get$current();
    if (test.call$1(result0) === true) {
      if (foundMatching)
        throw $.$$throw($.StateError$("More than one matching element"));
      result = result0;
      foundMatching = true;
    }
  }
  if (foundMatching)
    return result;
  throw $.$$throw($.StateError$("No matching element"));
};

$.IterableMixinWorkaround_joinList = function(list, separator) {
  var t1, buffer, i;
  if (typeof list !== "string" && (typeof list !== "object" || list === null || list.constructor !== Array && !list.$isJavaScriptIndexingBehavior()))
    return $.IterableMixinWorkaround_joinList$bailout(1, list, separator);
  if (typeof separator !== "string")
    return $.IterableMixinWorkaround_joinList$bailout(1, list, separator);
  if ($.isEmpty(list) === true)
    return "";
  t1 = list.length;
  if (t1 === 1) {
    if (0 >= t1)
      throw $.ioore(0);
    return $.S(list[0]);
  }
  buffer = $.JsStringBuffer$("");
  if (separator === "")
    for (i = 0; i < list.length; ++i)
      buffer.add$1($.S(list[i]));
  else {
    if (0 >= list.length)
      throw $.ioore(0);
    buffer.add$1($.S(list[0]));
    for (i = 1; i < list.length; ++i) {
      buffer.add$1(separator);
      if (i >= list.length)
        throw $.ioore(i);
      buffer.add$1($.S(list[i]));
    }
  }
  return buffer.toString$0();
};

$.IterableMixinWorkaround_joinList$bailout = function(state0, list, separator) {
  var t1, buffer, i;
  t1 = $.getInterceptor$JSArrayJSString(list);
  if (t1.get$isEmpty(list) === true)
    return "";
  if ($.$$eq(t1.get$length(list), 1) === true)
    return $.S(t1.$index(list, 0));
  buffer = $.JsStringBuffer$("");
  if (separator == null || $.$$eq(separator, "") === true)
    for (i = 0; $.CONSTANT5.$lt(i, t1.get$length(list)); ++i)
      buffer.add$1($.S(t1.$index(list, i)));
  else {
    buffer.add$1($.S(t1.$index(list, 0)));
    for (i = 1; $.CONSTANT5.$lt(i, t1.get$length(list)); ++i) {
      buffer.add$1(separator);
      buffer.add$1($.S(t1.$index(list, i)));
    }
  }
  return buffer.toString$0();
};

$.IterableMixinWorkaround_sortList = function(l, compare) {
  if (compare == null)
    compare = $.Comparable_compare;
  $.Sort__doSort(l, 0, l.length - 1, compare);
};

$.HashMap_HashMap = function() {
  return $._HashMapImpl$();
};

$._HashMapImpl$ = function() {
  var t1 = new $._HashMapImpl(null, null, null, null, null);
  t1._HashMapImpl$0();
  return t1;
};

$._HashMapImpl__computeLoadLimit = function(capacity) {
  return $.CONSTANT5.$tdiv(capacity * 3, 4);
};

$._HashMapImpl__nextProbe = function(currentProbe, numberOfProbes, $length) {
  return $.$$and($.$$add(currentProbe, numberOfProbes), $.$$sub($length, 1));
};

$._HashMapImplKeyIterable$ = function(_map) {
  return new $._HashMapImplKeyIterable(_map);
};

$._HashMapImplValueIterable$ = function(_map) {
  return new $._HashMapImplValueIterable(_map);
};

$._HashMapImplKeyIterator$ = function(map) {
  return new $._HashMapImplKeyIterator(map, -1, null);
};

$._HashMapImplValueIterator$ = function(map) {
  return new $._HashMapImplValueIterator(map, -1, null);
};

$._HashMapImplIndexIterator$ = function(map) {
  return new $._HashMapImplIndexIterator(map, -1, null);
};

$._KeyValuePair$ = function(key, value) {
  return new $._KeyValuePair(key, value);
};

$._LinkedHashMapImpl$ = function() {
  var t1 = new $._LinkedHashMapImpl(null, null);
  t1._LinkedHashMapImpl$0();
  return t1;
};

$.Queue_Queue = function() {
  return $.DoubleLinkedQueue$();
};

$.DoubleLinkedQueueEntry$ = function(e) {
  var t1 = new $.DoubleLinkedQueueEntry(null, null, null);
  t1.DoubleLinkedQueueEntry$1(e);
  return t1;
};

$._DoubleLinkedQueueEntrySentinel$ = function() {
  var t1 = new $._DoubleLinkedQueueEntrySentinel(null, null, null);
  t1.DoubleLinkedQueueEntry$1(null);
  t1._DoubleLinkedQueueEntrySentinel$0();
  return t1;
};

$.DoubleLinkedQueue$ = function() {
  var t1 = new $.DoubleLinkedQueue(null);
  t1.DoubleLinkedQueue$0();
  return t1;
};

$._DoubleLinkedQueueIterator$ = function(sentinel) {
  return new $._DoubleLinkedQueueIterator(sentinel, sentinel, null);
};

$.HashSet$ = function() {
  return new $.HashSet($._HashMapImpl$());
};

$.HashSet_HashSet$from = function(other) {
  var set, t1;
  set = $.HashSet$();
  for (t1 = $.iterator(other); t1.moveNext$0() === true;)
    set.add$1(t1.get$current());
  return set;
};

$._HashSetIterator$ = function(set) {
  return new $._HashSetIterator($.CONSTANT1.get$iterator(set._backingMap._keys));
};

$.Comparable_compare = function(a, b) {
  return $.compareTo(a, b);
};

$.DateTime$fromMillisecondsSinceEpoch = function(millisecondsSinceEpoch, isUtc) {
  var t1 = new $.DateTime(millisecondsSinceEpoch, isUtc);
  t1.DateTime$fromMillisecondsSinceEpoch$2$isUtc(millisecondsSinceEpoch, isUtc);
  return t1;
};

$.DateTime$_now = function() {
  var t1 = new $.DateTime($.Primitives_dateNow(), false);
  t1.DateTime$_now$0();
  return t1;
};

$.Error_safeToString = function(object) {
  if (typeof object === "number" && Math.floor(object) === object || typeof object === "number" || typeof object === "boolean" || null == object)
    return $.toString(object);
  if (typeof object === "string")
    return "\"" + $.S($.replaceAll($.replaceAll($.replaceAll($.CONSTANT.replaceAll$2(object, "\\", "\\\\"), "\n", "\\n"), "\r", "\\r"), "\"", "\\\"")) + "\"";
  return "Instance of '" + $.S($.Primitives_objectTypeName(object)) + "'";
};

$.ArgumentError$ = function(message) {
  return new $.ArgumentError(message);
};

$.RangeError$ = function(message) {
  return new $.RangeError(message);
};

$.RangeError$value = function(value) {
  return new $.RangeError("value " + $.S(value));
};

$.NoSuchMethodError$ = function(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames) {
  return new $.NoSuchMethodError(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames);
};

$.UnsupportedError$ = function(message) {
  return new $.UnsupportedError(message);
};

$.UnimplementedError$ = function(message) {
  return new $.UnimplementedError(message);
};

$.StateError$ = function(message) {
  return new $.StateError(message);
};

$.ConcurrentModificationError$ = function(modifiedObject) {
  return new $.ConcurrentModificationError(modifiedObject);
};

$.StackOverflowError$ = function() {
  return new $.StackOverflowError();
};

$.RuntimeError$ = function(message) {
  return new $.RuntimeError(message);
};

$._ExceptionImplementation$ = function(message) {
  return new $._ExceptionImplementation(message);
};

$.FormatException$ = function(message) {
  return new $.FormatException(message);
};

$.IllegalJSRegExpException$ = function(pattern, errmsg) {
  return new $.IllegalJSRegExpException("Illegal pattern: " + $.S(pattern) + ", " + errmsg);
};

$.int_parse = function(source, onError, radix) {
  return $.Primitives_parseInt(source, radix, onError);
};

$.List_List = function($length) {
  if (!(typeof $length === "number" && Math.floor($length) === $length) || $length < 0)
    throw $.$$throw($.ArgumentError$("Length must be a positive integer: " + $.S($length) + "."));
  return new Array($length);
};

$.List_List$fixedLength = function($length, fill) {
  var result, t1, i;
  if (!(typeof $length === "number" && Math.floor($length) === $length) || $length < 0)
    throw $.$$throw($.ArgumentError$("Length must be a positive integer: " + $.S($length) + "."));
  result = $.Primitives_newFixedList($length);
  if (typeof result !== "object" || result === null || (result.constructor !== Array || !!result.immutable$list) && !result.$isJavaScriptIndexingBehavior())
    return $.List_List$fixedLength$bailout(1, $length, fill, result);
  if ($.$$eq($length, 0) !== true && !(fill == null))
    for (t1 = result.length, i = 0; i < t1; ++i)
      result[i] = fill;
  return result;
};

$.List_List$fixedLength$bailout = function(state0, $length, fill, result) {
  var t1, i;
  if ($.$$eq($length, 0) !== true && !(fill == null))
    for (t1 = $.getInterceptor$JSArrayJSString(result), i = 0; $.CONSTANT5.$lt(i, t1.get$length(result)); ++i)
      t1.$indexSet(result, i, fill);
  return result;
};

$.List_List$from = function(other) {
  var list, t1;
  list = $.List_List(0);
  for (t1 = $.iterator(other); t1.moveNext$0() === true;)
    list.push(t1.get$current());
  return list;
};

$.Map_Map = function() {
  return $._HashMapImpl$();
};

$.Object$ = function() {
  return new $.Object();
};

$.RegExp_RegExp = function(pattern, caseSensitive, multiLine) {
  return $.JSSyntaxRegExp$(pattern, caseSensitive, multiLine);
};

$.String_String$fromCharCodes = function(charCodes) {
  if (!charCodes.constructor === Array)
    charCodes = $.List_List$from(charCodes);
  return $.Primitives_stringFromCharCodes(charCodes);
};

$.Strings_join = function(strings, separator) {
  $.checkNull(strings);
  return $.Strings__toJsStringArray(strings).join(separator);
};

$.window = function() {
  return window;
};

$.CanvasElement_CanvasElement = function(height, width) {
  var e = document.$$dom_createElement$1("canvas");
  if (!(width == null))
    e.set$width(width);
  if (!(height == null))
    e.set$height(height);
  return e;
};

$._browserPrefix = function() {
  if ($._cachedBrowserPrefix == null)
    if ($._Device_isFirefox() === true)
      $._cachedBrowserPrefix = "-moz-";
    else if ($._Device_isIE() === true)
      $._cachedBrowserPrefix = "-ms-";
    else if ($._Device_isOpera() === true)
      $._cachedBrowserPrefix = "-o-";
    else
      $._cachedBrowserPrefix = "-webkit-";
  return $._cachedBrowserPrefix;
};

$._ChildrenElementList$_wrap = function(element) {
  return new $._ChildrenElementList(element, element.get$$$dom_children());
};

$._FrozenElementList$_wrap = function(_nodeList) {
  return new $._FrozenElementList(_nodeList);
};

$._FrozenElementListIterator$ = function(_list) {
  return new $._FrozenElementListIterator(_list, -1, null);
};

$._ElementCssClassSet$ = function(_element) {
  return new $._ElementCssClassSet(_element);
};

$.Element_Element$tag = function(tag) {
  return $._ElementFactoryProvider_createElement_tag(tag);
};

$._ElementFactoryProvider_createElement_tag = function(tag) {
  return document.createElement(tag);
};

$._ChildNodeListLazy$ = function(_this) {
  return new $._ChildNodeListLazy(_this);
};

$.Window__isDartLocation = function(thing) {
  var t1, exception;
  try {
    t1 = thing;
    return typeof t1 === "object" && t1 !== null && t1.$isLocation();
  } catch (exception) {
    $.unwrapException(exception);
    return false;
  }

};

$._ElementAttributeMap$ = function(element) {
  return new $._ElementAttributeMap(element);
};

$._DataAttributeMap$ = function($$dom_attributes) {
  return new $._DataAttributeMap($$dom_attributes);
};

$._Device_userAgent = function() {
  return $.window().get$navigator().get$userAgent();
};

$._Device_isOpera = function() {
  return $.contains($._Device_userAgent(), "Opera", 0);
};

$._Device_isIE = function() {
  return $._Device_isOpera() !== true && $.contains($._Device_userAgent(), "MSIE", 0) === true;
};

$._Device_isFirefox = function() {
  return $.contains($._Device_userAgent(), "Firefox", 0);
};

$._Device_isWebKit = function() {
  return $._Device_isOpera() !== true && $.contains($._Device_userAgent(), "WebKit", 0) === true;
};

$._EventStream$ = function(_target, _eventType, _useCapture) {
  return new $._EventStream(_target, _eventType, _useCapture);
};

$._EventStreamSubscription$ = function(_target, _eventType, _onData, _useCapture) {
  var t1 = new $._EventStreamSubscription(0, _target, _eventType, _onData, _useCapture);
  t1._EventStreamSubscription$4(_target, _eventType, _onData, _useCapture);
  return t1;
};

$._convertNativeToDart_Window = function(win) {
  return $._DOMWindowCrossFrame__createSafe(win);
};

$._convertNativeToDart_EventTarget = function(e) {
  if ("setInterval" in e)
    return $._DOMWindowCrossFrame__createSafe(e);
  else
    return e;
};

$._DOMWindowCrossFrame$ = function(_window) {
  return new $._DOMWindowCrossFrame(_window);
};

$._DOMWindowCrossFrame__createSafe = function(w) {
  if (w === window)
    return w;
  else
    return $._DOMWindowCrossFrame$(w);
};

$._LocationCrossFrame$ = function(_location) {
  return new $._LocationCrossFrame(_location);
};

$._LocationCrossFrame__createSafe = function($location) {
  if ($location === window.get$location())
    return $location;
  else
    return $._LocationCrossFrame$($location);
};

$._LocationWrapper$ = function(_ptr) {
  return new $._LocationWrapper(_ptr);
};

$.FixedSizeListIterator$ = function(array) {
  return new $.FixedSizeListIterator(array, $.length(array), -1, null);
};

$.convertDartToNative_Dictionary = function(dict) {
  var object;
  if (dict == null)
    return;
  object = {};
  $.forEach(dict, new $.convertDartToNative_Dictionary_anon(object));
  return object;
};

$.FilteredElementList$ = function(node) {
  return new $.FilteredElementList(node, node.get$nodes());
};

$.Lists_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (typeof a !== "string" && (typeof a !== "object" || a === null || a.constructor !== Array && !a.$isJavaScriptIndexingBehavior()))
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof startIndex !== "number")
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof endIndex !== "number")
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.$$eq(a[i], element) === true)
      return i;
  }
  return -1;
};

$.Lists_indexOf$bailout = function(state0, a, element, startIndex, endIndex) {
  var t1, t2, i;
  t1 = $.getInterceptor$JSArrayJSString(a);
  t2 = $.getInterceptor$JSNumber(startIndex);
  if (t2.$ge(startIndex, t1.get$length(a)) === true)
    return -1;
  if (t2.$lt(startIndex, 0) === true)
    startIndex = 0;
  for (i = startIndex; t2 = $.getInterceptor$JSNumber(i), t2.$lt(i, endIndex) === true; i = t2.$add(i, 1))
    if ($.$$eq(t1.$index(a, i), element) === true)
      return i;
  return -1;
};

$.Lists_getRange = function(a, start, $length, accumulator) {
  var end, i;
  if (typeof a !== "string" && (typeof a !== "object" || a === null || a.constructor !== Array && !a.$isJavaScriptIndexingBehavior()))
    return $.Lists_getRange$bailout(1, a, start, $length, accumulator);
  if ($length < 0)
    throw $.$$throw($.ArgumentError$("length"));
  if (start < 0)
    throw $.$$throw($.RangeError$value(start));
  end = start + $length;
  if (end > a.length)
    throw $.$$throw($.RangeError$value(end));
  for (i = start; i < end; ++i) {
    if (i >= a.length)
      throw $.ioore(i);
    accumulator.push(a[i]);
  }
  return accumulator;
};

$.Lists_getRange$bailout = function(state0, a, start, $length, accumulator) {
  var end, t1, i;
  if ($length < 0)
    throw $.$$throw($.ArgumentError$("length"));
  if (start < 0)
    throw $.$$throw($.RangeError$value(start));
  end = start + $length;
  t1 = $.getInterceptor$JSArrayJSString(a);
  if ($.CONSTANT5.$gt(end, t1.get$length(a)))
    throw $.$$throw($.RangeError$value(end));
  for (i = start; i < end; ++i)
    accumulator.push(t1.$index(a, i));
  return accumulator;
};

$.spawnFunction = function(topLevelFunction, UnhandledExceptionCallback) {
  return $._Isolate_spawnFunction(topLevelFunction, UnhandledExceptionCallback);
};

$.ReceivePort_ReceivePort = function() {
  return $.ReceivePortImpl$();
};

$._Isolate_port = function() {
  if ($.lazyPort == null)
    $.lazyPort = $.ReceivePort_ReceivePort();
  return $.lazyPort;
};

$._Isolate_spawnFunction = function(topLevelFunction, UnhandledExceptionCallback) {
  return $.IsolateNatives_spawnFunction(topLevelFunction);
};

$.min = function(a, b) {
  if (typeof a === "number") {
    if (typeof b === "number") {
      if (a > b)
        return b;
      if (a < b)
        return a;
      if (typeof b === "number") {
        if (typeof a === "number")
          if (a === 0)
            return (a + b) * a * b;
        if (a === 0 && $.CONSTANT7.get$isNegative(b) === true || $.CONSTANT7.get$isNaN(b) === true)
          return b;
        return a;
      }
      return a;
    }
    throw $.$$throw($.ArgumentError$(b));
  }
  throw $.$$throw($.ArgumentError$(a));
};

$.max = function(a, b) {
  if (typeof a === "number") {
    if (typeof b === "number") {
      if (a > b)
        return a;
      if (a < b)
        return b;
      if (typeof b === "number") {
        if (typeof a === "number")
          if (a === 0)
            return a + b;
        if ($.CONSTANT7.get$isNaN(b) === true)
          return b;
        return a;
      }
      if (b === 0 && $.CONSTANT4.get$isNegative(a) === true)
        return b;
      return a;
    }
    throw $.$$throw($.ArgumentError$(b));
  }
  throw $.$$throw($.ArgumentError$(a));
};

$.sqrt = function(x) {
  return Math.sqrt($.checkNum(x));
};

$.Random_Random = function(seed) {
  return $.CONSTANT14;
};

$._AttributeClassSet$ = function(_element) {
  return new $._AttributeClassSet(_element);
};

$.AttachedEvent$ = function($name) {
  return new $.AttachedEvent($name);
};

$.Property$ = function($name, defaultValue) {
  return new $.Property(defaultValue, $name);
};

$.CollectionUtil_allUnique = function(items) {
  var i, j, j0, t1;
  if (typeof items !== "string" && (typeof items !== "object" || items === null || items.constructor !== Array && !items.$isJavaScriptIndexingBehavior()))
    return $.CollectionUtil_allUnique$bailout(1, items);
  $.requireArgumentNotNull(items, "items");
  for (i = 0; i < items.length; i = j)
    for (j = i + 1, j0 = j; t1 = items.length, j0 < t1; ++j0) {
      if (i >= t1)
        throw $.ioore(i);
      if ($.$$eq(items[i], items[j0]) === true)
        return false;
    }
  return true;
};

$.CollectionUtil_allUnique$bailout = function(state0, items) {
  var t1, i, j, j0;
  $.requireArgumentNotNull(items, "items");
  for (t1 = $.getInterceptor$JSArrayJSString(items), i = 0; $.CONSTANT5.$lt(i, t1.get$length(items)); i = j)
    for (j = i + 1, j0 = j; $.CONSTANT5.$lt(j0, t1.get$length(items)); ++j0)
      if ($.$$eq(t1.$index(items, i), t1.$index(items, j0)) === true)
        return false;
  return true;
};

$.CollectionUtil_selectMany = function(source, func) {
  return $._FuncEnumerable$(source, new $.CollectionUtil_selectMany_anon(func));
};

$.CollectionUtil_count = function(source, test) {
  return source.reduce$2(0, new $.CollectionUtil_count_anon(test));
};

$.CollectionUtil_exclude = function(source, itemsToExclude) {
  $.requireArgumentNotNull(itemsToExclude, "itemsToExclude");
  return $.$$($.WhereIterable$(source, new $.CollectionUtil_exclude_anon(itemsToExclude)));
};

$.CollectionUtil_distinct = function(source, comparer) {
  var t1 = {};
  t1.comparer_0 = comparer;
  if (t1.comparer_0 == null)
    t1.comparer_0 = new $.CollectionUtil_distinct_anon();
  return $._FuncEnumerable$(source, new $.CollectionUtil_distinct_anon0(t1));
};

$.CollectionUtil_toMap = function(source, valueFunc, keyFunc) {
  var map, t1, t2, k;
  if (keyFunc == null)
    keyFunc = new $.CollectionUtil_toMap_anon();
  map = $._HashMapImpl$();
  for (t1 = $.iterator(source); t1.moveNext$0() === true;) {
    t2 = t1.get$current();
    k = keyFunc.call$1(t2);
    if (map.containsKey$1(k) === true)
      throw $.$$throw($.UnsupportedError$("The key '" + $.S(k) + "' is duplicated"));
    map.$indexSet(k, valueFunc.call$1(t2));
  }
  return map;
};

$._DistinctIterator$ = function(_source, _comparer) {
  return new $._DistinctIterator(_source, _comparer, $.List_List(0), null);
};

$._SelectManyIterator$ = function(_sourceIterator, _func) {
  return new $._SelectManyIterator(_sourceIterator, _func, null, null);
};

$._ListIterator$ = function(list) {
  return new $._ListIterator(list, list.get$length(), -1, null);
};

$.$$ = function(source) {
  if (typeof source === "object" && source !== null && !!source.$isEnumerable)
    return source;
  else
    return $.Enumerable_Enumerable$fromIterable(source);
};

$.Enumerable_Enumerable$fromIterable = function(source) {
  $.requireArgumentNotNull(source, "source");
  return $._SimpleEnumerable$(source);
};

$._SimpleEnumerable$ = function(_source) {
  return new $._SimpleEnumerable(_source);
};

$._FuncEnumerable$ = function(_source, _func) {
  return new $._FuncEnumerable(_source, _func);
};

$.Grouping$ = function(source, keyFunc) {
  var t1 = new $.Grouping($.HashMap_HashMap());
  t1.Grouping$2(source, keyFunc);
  return t1;
};

$.NumberEnumerable_NumberEnumerable$from = function(source) {
  $.requireArgumentNotNull(source, "source");
  return $._SimpleNumEnumerable$(source);
};

$._SimpleNumEnumerable$ = function(_source) {
  return new $._SimpleNumEnumerable(_source);
};

$.ReadOnlyCollection$wrap = function(source) {
  return new $.ReadOnlyCollection(source);
};

$.ReadOnlyCollection$empty = function() {
  return new $.ReadOnlyCollection($.CONSTANT6);
};

$.ReadOnlyCollection$ = function(source) {
  return new $.ReadOnlyCollection($.List_List$from(source));
};

$.HslColor$_internal = function(h, s, l) {
  return new $.HslColor(h, s, l);
};

$.HslColor_HslColor = function(h, s, l) {
  var t1 = $.getInterceptor(h);
  $.requireArgument(!(h == null) && t1.get$isInfinite(h) !== true && t1.get$isNaN(h) !== true, "h", "hue value was not valid");
  h = t1.$mod(h, 360);
  $.requireArgument($.CONSTANT4.get$isInfinite(s) !== true && $.CONSTANT4.get$isNaN(s) !== true, "s", "must be a valid number");
  t1 = s >= 0 && s <= 1;
  $.requireArgument(t1, "s", "must be >= 0 && <= 1 but was " + $.S(s));
  $.requireArgument($.CONSTANT7.get$isInfinite(l) !== true && $.CONSTANT7.get$isNaN(l) !== true, "l", "must be a valid number");
  t1 = l >= 0 && l <= 1;
  $.requireArgument(t1, "l", "must be >= 0 && <=1 but was " + $.S(l));
  return $.HslColor$_internal(h, s, l);
};

$.HslColor__hueToRgb = function(v1, v2, vH) {
  vH = $.$$mod(vH, 1);
  if (typeof vH !== "number")
    throw $.iae(vH);
  if (6 * vH < 1)
    return v1 + (v2 - v1) * 6 * vH;
  else if (2 * vH < 1)
    return v2;
  else if (3 * vH < 2)
    return v1 + (v2 - v1) * (0.6666666666666666 - vH) * 6;
  return v1;
};

$.RgbColor$_internal = function(r, g, b) {
  return new $.RgbColor(r, g, b);
};

$.RgbColor_RgbColor = function(r, g, b) {
  $.RgbColor__validateComponent(r, "r");
  $.RgbColor__validateComponent(g, "g");
  $.RgbColor__validateComponent(b, "b");
  return $.RgbColor$_internal(r, g, b);
};

$.RgbColor__validateComponent = function(c, $name) {
  var t1 = $.getInterceptor(c);
  $.requireArgument(!(c == null) && t1.get$isInfinite(c) !== true && t1.get$isNaN(c) !== true, $name, null);
  $.requireArgument(t1.$ge(c, 0) === true && t1.$le(c, 255) === true, $name, null);
};

$.EventHandle$ = function() {
  return new $.EventHandle(null, false);
};

$.DetailedArgumentError$ = function(argument, details) {
  var t1 = new $.DetailedArgumentError(argument, details);
  t1.DetailedArgumentError$2(argument, details);
  return t1;
};

$.InvalidOperationError$ = function(message) {
  return new $.InvalidOperationError(message);
};

$.NullArgumentError$ = function(argument) {
  var t1 = new $.NullArgumentError(argument, "cannot be null");
  t1.DetailedArgumentError$2(argument, "cannot be null");
  return t1;
};

$.GlobalId$_internal = function(value) {
  return new $.GlobalId(value, $.Util_getHashCode([value]));
};

$.GlobalId_GlobalId = function() {
  var t1 = $.GlobalId__globalId;
  $.GlobalId__globalId = $.$$add(t1, 1);
  return $.GlobalId$_internal(t1);
};

$.AffineTransform$ = function(scaleX, shearY, shearX, scaleY, translateX, translateY) {
  return new $.AffineTransform(scaleX, shearY, shearX, scaleY, translateX, translateY);
};

$.Box$ = function(left, $top, width, height) {
  return new $.Box(left, $top, width, height);
};

$.Coordinate$ = function(x, y) {
  return new $.Coordinate(x, y);
};

$.isValidNumber = function(value) {
  var t1 = $.getInterceptor(value);
  return !(value == null) && t1.get$isInfinite(value) !== true && t1.get$isNaN(value) !== true;
};

$.Size$ = function(width, height) {
  return new $.Size(width, height);
};

$.TarjanCycleDetect$_internal = function(_list) {
  return new $.TarjanCycleDetect(0, $.List_List(0), $.List_List(0), _list);
};

$.TarjanCycleDetect_getStronglyConnectedComponents = function(graph) {
  return $.TarjanCycleDetect$_internal($._TarjanList__TarjanList(graph))._executeTarjan$0();
};

$._TarjanNode$ = function(value) {
  return new $._TarjanNode(value, -1, null);
};

$._TarjanList$_internal = function(_nodes) {
  return new $._TarjanList(_nodes);
};

$._TarjanList__TarjanList = function(source) {
  var map, nodes;
  map = $._HashMapImpl$();
  nodes = $._HashMapImpl$();
  source.forEach$1(new $._TarjanList__TarjanList_anon(map, nodes));
  return $._TarjanList$_internal(nodes);
};

$.Vector$ = function(x, y) {
  return new $.Vector(x, y);
};

$.require = function(truth, message) {
  if (truth !== true)
    throw $.$$throw($._ExceptionImplementation$(message));
};

$.requireArgument = function(truth, argName, message) {
  $._metaRequireArgumentNotNullOrEmpty(argName);
  if (truth !== true) {
    if (message == null || $.isEmpty(message) === true)
      message = "value was invalid";
    throw $.$$throw($.DetailedArgumentError$(argName, message));
  }
};

$.requireArgumentNotNull = function(argument, argName) {
  $._metaRequireArgumentNotNullOrEmpty(argName);
  if (argument == null)
    throw $.$$throw($.NullArgumentError$(argName));
};

$._metaRequireArgumentNotNullOrEmpty = function(argName) {
  if (argName == null || $.$$eq($.length(argName), 0) === true)
    throw $.$$throw($.InvalidOperationError$("That's just sad. Give me a good argName"));
};

$.Tuple$ = function(item1, item2) {
  return new $.Tuple(item1, item2);
};

$.Tuple3$ = function(param1, param2, item3) {
  return new $.Tuple3(item3, param1, param2);
};

$.Util_getHashCode = function(source) {
  var t1, hash, t2, next, hash0, hash1;
  $.requireArgumentNotNull(source, "source");
  for (t1 = $.CONSTANT1.get$iterator(source), hash = 0; t1.moveNext$0() === true; hash = hash1) {
    t2 = t1.get$current();
    next = t2 == null ? 0 : $.hashCode(t2);
    if (typeof next !== "number")
      throw $.iae(next);
    hash0 = 536870911 & hash + next;
    hash1 = 536870911 & hash0 + ((524287 & hash0) << 10 >>> 0);
    hash1 = (hash1 ^ $.CONSTANT5.$shr(hash1, 6)) >>> 0;
  }
  hash0 = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
  hash0 = (hash0 ^ $.CONSTANT5.$shr(hash0, 11)) >>> 0;
  return 536870911 & hash0 + ((16383 & hash0) << 15 >>> 0);
};

$.FutureValueResult$ = function(value, _outputSerializer) {
  return new $.FutureValueResult(value, null, null, _outputSerializer);
};

$.FutureValueResult$fromException = function(error, stackTrace) {
  var t1 = new $.FutureValueResult(null, error, stackTrace, null);
  t1.FutureValueResult$fromException$2(error, stackTrace);
  return t1;
};

$.FutureValueResult_FutureValueResult$fromMap = function(value) {
  var t1, ex;
  $.requireArgumentNotNull(value, "value");
  $.requireArgument($.FutureValueResult_isMyMap(value), "value", null);
  t1 = $.getInterceptor$JSArrayJSString(value);
  ex = t1.$index(value, "error");
  if (!(ex == null))
    return $.FutureValueResult$fromException(ex, t1.$index(value, "stackTrace"));
  else
    return $.FutureValueResult$(t1.$index(value, "value"), null);
};

$.FutureValueResult_isMyMap = function(value) {
  return !(value == null) && $.$$eq($.length(value), 3) === true && value.containsKey$1("value") === true && value.containsKey$1("error") === true && value.containsKey$1("stackTrace") === true;
};

$.CanvasUtil_transform = function(ctx, tx) {
  $.requireArgumentNotNull(ctx, "ctx");
  $.requireArgumentNotNull(tx, "tx");
  ctx.transform$6(tx.get$scaleX(), tx.get$shearY(), tx.get$shearX(), tx.get$scaleY(), tx.get$translateX(), tx.get$translateY());
};

$.CanvasUtil_centeredCircle = function(ctx, x, y, radius) {
  var t1 = $.getInterceptor$JSNumber(radius);
  $.CanvasUtil_ellipse(ctx, $.$$sub(x, radius), $.$$sub(y, radius), t1.$mul(radius, 2), t1.$mul(radius, 2));
};

$.CanvasUtil_ellipse = function(ctx, x, y, width, height) {
  var t1, hB, t2, vB, t3, eX, t4, eY, mX, mY;
  t1 = $.getInterceptor$JSNumber(width);
  hB = $.$$mul(t1.$div(width, 2), 0.5522847498307935);
  t2 = $.getInterceptor$JSNumber(height);
  vB = $.$$mul(t2.$div(height, 2), 0.5522847498307935);
  t3 = $.getInterceptor$JSNumber(x);
  eX = t3.$add(x, width);
  t4 = $.getInterceptor$JSNumber(y);
  eY = t4.$add(y, height);
  mX = t3.$add(x, t1.$div(width, 2));
  mY = t4.$add(y, t2.$div(height, 2));
  ctx.beginPath$0();
  ctx.moveTo$2(x, mY);
  t4 = $.getInterceptor$JSNumber(mY);
  t3 = $.getInterceptor$JSNumber(mX);
  ctx.bezierCurveTo$6(x, t4.$sub(mY, vB), t3.$sub(mX, hB), y, mX, y);
  ctx.bezierCurveTo$6(t3.$add(mX, hB), y, eX, t4.$sub(mY, vB), eX, mY);
  ctx.bezierCurveTo$6(eX, t4.$add(mY, vB), t3.$add(mX, hB), eY, mX, eY);
  ctx.bezierCurveTo$6(t3.$sub(mX, hB), eY, x, t4.$add(mY, vB), x, mY);
  ctx.closePath$0();
};

$.Mouse_markMouseOver = function(stage, coordinate) {
  var t1, items, hits;
  $.requireArgumentNotNull(stage, "stage");
  t1 = !(coordinate == null);
  $.requireArgument(coordinate == null || coordinate.get$isValid() === true, "coordinate", null);
  items = $.get$Mouse__stageMouseCacheProperty().get$1(stage);
  if (!(items == null)) {
    $.forEach(items, new $.Mouse_markMouseOver_anon());
    $.get$Mouse__stageMouseCacheProperty().clear$1(stage);
  }
  if (t1) {
    hits = $.RetainedUtil__hitTest(stage.get$rootThing(), coordinate);
    $.get$Mouse__stageMouseCacheProperty().set$2(stage, hits);
    t1 = $.getInterceptor$JSArray(hits);
    t1.forEach$1(hits, new $.Mouse_markMouseOver_anon0());
    if ($.$$gt(t1.get$length(hits), 0) === true)
      $.get$Mouse_isMouseDirectlyOverProperty().set$2(t1.$index(hits, 0), true);
    return hits;
  }
  return;
};

$.MouseManager_MouseManager = function(stage) {
  $.requireArgumentNotNull(stage, "stage");
  return $.get$MouseManager__clickManagerProperty().get$2(stage, new $.MouseManager_MouseManager_anon());
};

$.MouseManager$_internal = function(_stage) {
  var t1 = new $.MouseManager(_stage, null, null, null);
  t1.MouseManager$_internal$1(_stage);
  return t1;
};

$.MouseManager_setCursor = function(thing, value) {
  $.get$MouseManager__cursorProperty().set$2(thing, value);
};

$.MouseManager__setBoolProp = function(thing, prop, value) {
  if (value)
    prop.set$2(thing, true);
  else
    prop.clear$1(thing);
};

$.MouseManager_addDragHandler = function(thing, handler) {
  return $.get$MouseManager__dragEvent().addHandler$2(thing, handler);
};

$.ThingDragStartingEventArgs$ = function(thing, source) {
  var t1 = new $.ThingDragStartingEventArgs(false, thing, source);
  t1.ThingMouseEventArgs$2(thing, source);
  return t1;
};

$.ThingDragEventArgs$ = function(thing, source, delta) {
  var t1 = new $.ThingDragEventArgs(delta, thing, source);
  t1.ThingMouseEventArgs$2(thing, source);
  return t1;
};

$.RetainedUtil__hitTest = function(thing, point) {
  var bounds, hits, $length, t1, i;
  point = $.RetainedUtil_transformPointGlobalToLocal(thing, point);
  bounds = $.Box$(0, 0, thing.get$width(), thing.get$height());
  hits = $.List_List(0);
  if (bounds.contains$1(point) === true) {
    if (typeof thing === "object" && thing !== null && !!thing.$isParentThing) {
      $length = thing.get$visualChildCount();
      if (typeof $length !== "number")
        return $.RetainedUtil__hitTest$bailout(1, thing, hits, point, $length);
      for (t1 = $length - 1, i = 0; i < $length; ++i) {
        hits = $.RetainedUtil__hitTest(thing.getVisualChild$1(t1 - i), point);
        if (typeof hits !== "object" || hits === null || hits.constructor !== Array || !!hits.fixed$length)
          return $.RetainedUtil__hitTest$bailout(2, thing, hits, point, $length, $.CONSTANT4, i);
        if (hits.length > 0)
          break;
      }
      thing = thing;
    }
    hits.push(thing);
  }
  return hits;
};

$.RetainedUtil__hitTest$bailout = function(state0, thing, hits, point, $length, t1, i, t2) {
  switch (state0) {
    case 0:
      point = $.RetainedUtil_transformPointGlobalToLocal(thing, point);
      bounds = $.Box$(0, 0, thing.get$width(), thing.get$height());
      hits = $.List_List(0);
    default:
      var bounds;
      if (state0 === 3 || state0 === 2 || state0 === 1 || state0 === 0 && bounds.contains$1(point) === true)
        switch (state0) {
          case 0:
          default:
            if (state0 === 3 || state0 === 2 || state0 === 1 || state0 === 0 && typeof thing === "object" && thing !== null && !!thing.$isParentThing)
              switch (state0) {
                case 0:
                  $length = thing.get$visualChildCount();
                case 1:
                  state0 = 0;
                  t1 = $.getInterceptor$JSNumber($length);
                  i = 0;
                default:
                  L0:
                    while (true)
                      switch (state0) {
                        case 0:
                          if (!$.CONSTANT5.$lt(i, $length))
                            break L0;
                          hits = $.RetainedUtil__hitTest(thing.getVisualChild$1($.$$sub(t1.$sub($length, 1), i)), point);
                        case 2:
                          state0 = 0;
                          t2 = $.length(hits);
                        case 3:
                          state0 = 0;
                          if ($.$$gt(t2, 0) === true)
                            break L0;
                          ++i;
                      }
                  thing = thing;
              }
            $.add(hits, thing);
        }
      return hits;
  }
};

$.RetainedUtil_transformPointGlobalToLocal = function(thing, point) {
  return thing.getTransform$0().createInverse$0().transformCoordinate$1(point);
};

$.Stage$ = function(_canvas, rootThing) {
  var t1 = new $.Stage($.EventHandle$(), _canvas, rootThing, null, $.HashMap_HashMap(), $.HashMap_HashMap(), false);
  t1.Stage$2(_canvas, rootThing);
  return t1;
};

$.ThingMouseEventArgs$ = function(thing, sourceEvent) {
  var t1 = new $.ThingMouseEventArgs(thing, sourceEvent);
  t1.ThingMouseEventArgs$2(thing, sourceEvent);
  return t1;
};

$.CalcEngine$ = function() {
  var t1 = new $.CalcEngine($._DistanceElectionMapper$(), $._PluralityElectionMapper$(), $._CondorcetElectionMapper$(), $._IrvElectionMapper$(), $._VoterHexMapper$(), null);
  t1.CalcEngine$0();
  return t1;
};

$._DistanceElectionMapper$ = function() {
  return new $._DistanceElectionMapper($.spawnFunction($._distanceElectionIsolate, null), null, null, null, null, null, null, null, false, $.EventHandle$(), $.EventHandle$(), $.EventHandle$());
};

$._distanceElectionIsolate = function() {
  $._Isolate_port().receive$1(new $._distanceElectionIsolate_anon());
};

$._PluralityElectionMapper$ = function() {
  return new $._PluralityElectionMapper($.spawnFunction($._pluralityElectionIsolate, null), null, null, null, null, null, null, null, false, $.EventHandle$(), $.EventHandle$(), $.EventHandle$());
};

$._pluralityElectionIsolate = function() {
  $._Isolate_port().receive$1(new $._pluralityElectionIsolate_anon());
};

$._CondorcetElectionMapper$ = function() {
  return new $._CondorcetElectionMapper($.spawnFunction($._condorcetElectionIsolate, null), null, null, null, null, null, null, null, false, $.EventHandle$(), $.EventHandle$(), $.EventHandle$());
};

$._condorcetElectionIsolate = function() {
  $._Isolate_port().receive$1(new $._condorcetElectionIsolate_anon());
};

$._IrvElectionMapper$ = function() {
  return new $._IrvElectionMapper($.spawnFunction($._irvElectionIsolate, null), null, null, null, null, null, null, null, false, $.EventHandle$(), $.EventHandle$(), $.EventHandle$());
};

$._irvElectionIsolate = function() {
  $._Isolate_port().receive$1(new $._irvElectionIsolate_anon());
};

$._VoterHexMapper$ = function() {
  return new $._VoterHexMapper($.spawnFunction($._voterHexMapperIsolate, null), null, null, null, null, null, null, null, false, $.EventHandle$(), $.EventHandle$(), $.EventHandle$());
};

$._voterHexMapperIsolate = function() {
  $._Isolate_port().receive$1(new $._voterHexMapperIsolate_anon());
};

$.getCandidateHexColor = function(c, dark) {
  var hue = $.LocationData_getHue(c);
  if (hue == null)
    return "#999999";
  else
    return $.HslColor_HslColor(hue, 1, dark === true ? 0.3 : 0.75).toRgb$0().toHex$0();
};

$.CandidateManagerView$ = function(node) {
  var t1 = new $.CandidateManagerView($.EventHandle$(), $.EventHandle$(), $.ReadOnlyCollection$empty(), node, null);
  t1.HtmlView$1(node);
  return t1;
};

$.CondorcetView$ = function(node) {
  var t1 = new $.CondorcetView($.EventHandle$(), null, null, null, node, null);
  t1.HtmlView$1(node);
  return t1;
};

$.CondorcetView__getPair = function(elem) {
  var pairIdStr, ids, t1;
  pairIdStr = $.$$index(elem.get$dataAttributes(), "pair-ids");
  if (!(pairIdStr == null)) {
    ids = $.toList($.map($.split($.substring(pairIdStr, 4), "_"), new $.CondorcetView__getPair_anon()));
    t1 = $.getInterceptor$JSArrayJSString(ids);
    return $.Tuple$(t1.$index(ids, 0), t1.$index(ids, 1));
  }
  return;
};

$.DistanceView$ = function(node) {
  var t1 = new $.DistanceView(null, node, null);
  t1.HtmlView$1(node);
  return t1;
};

$.IrvView$ = function(node) {
  var t1 = new $.IrvView($.EventHandle$(), null, null, node, null);
  t1.HtmlView$1(node);
  return t1;
};

$.PluralityView$ = function(node) {
  var t1 = new $.PluralityView(null, node, null);
  t1.HtmlView$1(node);
  return t1;
};

$.DistanceBallot$_internal = function(voter, items, _distances) {
  return new $.DistanceBallot(_distances, items, items.$index(0), voter);
};

$.DistanceBallot_DistanceBallot = function(voter, candidates) {
  var distances, rank;
  distances = $.$$(candidates).toMap$1(new $.DistanceBallot_DistanceBallot_anon(voter));
  rank = $.List_List$from(candidates);
  $.requireArgument(rank.length > 0, "candidates", null);
  $.requireArgument($.CollectionUtil_allUnique(rank), "candidates", null);
  $.CONSTANT1.sort$1(rank, new $.DistanceBallot_DistanceBallot_anon0(distances));
  return $.DistanceBallot$_internal(voter, $.ReadOnlyCollection$(rank), distances);
};

$.DistanceElection$_internal = function(candidates, ballots, places) {
  return new $.DistanceElection(candidates, ballots, places);
};

$.DistanceElection_DistanceElection = function(voters, candidates) {
  var t1, cans, ballots, distanceGroups, distances;
  t1 = {};
  cans = $.ReadOnlyCollection$(candidates);
  ballots = $.ReadOnlyCollection$($.map(voters, new $.DistanceElection_DistanceElection_anon(cans)));
  distanceGroups = cans.group$1(new $.DistanceElection_DistanceElection_anon0(ballots));
  distances = $.List_List$from(distanceGroups.getKeys$0());
  $.CONSTANT1.sort$1(distances, new $.DistanceElection_DistanceElection_anon1());
  t1.placeNumber_0 = 1;
  return $.DistanceElection$_internal(cans, ballots, $.ReadOnlyCollection$($.CONSTANT1.map$1(distances, new $.DistanceElection_DistanceElection_anon2(t1, distanceGroups))));
};

$.DistanceElectionPlace$ = function(place, candidates, avgDistance, avgDistanceSquared) {
  var t1 = new $.DistanceElectionPlace(avgDistance, avgDistanceSquared, place, $.List_List$from(candidates));
  t1.ElectionPlace$2(place, candidates);
  return t1;
};

$.LocationData$ = function(voters, candidates) {
  var t1 = new $.LocationData(candidates, voters);
  t1.LocationData$2(voters, candidates);
  return t1;
};

$.LocationData_LocationData$random = function() {
  var voters, i, t1, j, coords, middle, coord, candidates;
  voters = $.List_List(0);
  for (i = 0; i < 10; ++i)
    for (t1 = i * 1.1111111111111112, j = 0; j < 10; ++j)
      voters.push($.MapPlayer$($.Coordinate$(t1, j * 1.1111111111111112), null));
  coords = $.List_List(0);
  middle = $.Vector$(0.5, 0.5);
  coords.push(middle);
  for (i = 0; i < 4; ++i) {
    if ($._botHelperRandom == null)
      $._botHelperRandom = $.Random_Random(null);
    t1 = $._botHelperRandom.nextDouble$0();
    if ($._botHelperRandom == null)
      $._botHelperRandom = $.Random_Random(null);
    coord = $.Vector$(t1, $._botHelperRandom.nextDouble$0());
    coords.push(coord);
  }
  candidates = $.List_List(0);
  $.map($.$$(coords), new $.LocationData_LocationData$random_anon()).forEachWithIndex$1(new $.LocationData_LocationData$random_anon0(candidates));
  return $.LocationData$($.ReadOnlyCollection$wrap(voters), $.ReadOnlyCollection$wrap(candidates));
};

$.LocationData_getHue = function(candidate) {
  var letterCode;
  if ($.LocationData__candidateHues == null)
    $.LocationData__candidateHues = $.LocationData__slice(26, 360, 3);
  letterCode = $.$$sub($.charCodeAt(candidate.get$name(), 0), 65);
  return $.$$index($.LocationData__candidateHues, letterCode);
};

$.LocationData__slice = function(itemCount, maxValue, sliceCount) {
  var values, sliceSize, index, i, index0, index1, t1;
  values = $.List_List$fixedLength(itemCount, null);
  sliceSize = maxValue / sliceCount;
  for (index = 0, i = 0; i < sliceCount; ++i, index = index0)
    if (index === itemCount)
      return values;
    else {
      index0 = index + 1;
      if (index >= itemCount)
        throw $.ioore(index);
      values[index] = i * sliceSize;
    }
  for (; true; index = index0) {
    sliceSize = maxValue / (index * 2);
    for (index0 = index, i = 0; i < index; ++i, index0 = index1)
      if (index0 === itemCount)
        return values;
      else {
        index1 = index0 + 1;
        if (i >= itemCount)
          throw $.ioore(i);
        t1 = values[i];
        if (typeof t1 !== "number")
          return $.LocationData__slice$bailout(3, itemCount, sliceSize, 0, maxValue, values, index, index0, i, index1, t1);
        if (index0 < 0 || index0 >= itemCount)
          throw $.ioore(index0);
        values[index0] = t1 + sliceSize;
      }
  }
};

$.LocationData__slice$bailout = function(state0, itemCount, sliceSize, sliceCount, maxValue, values, index, index0, i, index1, t1) {
  switch (state0) {
    case 0:
      values = $.List_List$fixedLength(itemCount, null);
      sliceSize = maxValue / sliceCount;
    case 1:
      state0 = 0;
      for (index = 0, i = 0; i < sliceCount; ++i, index = index0)
        if (index === itemCount)
          return values;
        else {
          index0 = index + 1;
          if (index >= itemCount)
            throw $.ioore(index);
          values[index] = i * sliceSize;
        }
    default:
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!true)
                break L0;
              sliceSize = maxValue / (index * 2);
            case 2:
              state0 = 0;
              index0 = index;
              i = 0;
            case 3:
              L1:
                while (true)
                  switch (state0) {
                    case 0:
                      if (!(i < index))
                        break L1;
                    case 3:
                      if (state0 === 0 && index0 === itemCount)
                        return values;
                      else
                        switch (state0) {
                          case 0:
                            index1 = index0 + 1;
                            if (i >= itemCount)
                              throw $.ioore(i);
                            t1 = values[i];
                          case 3:
                            state0 = 0;
                            t1 = $.$$add(t1, sliceSize);
                            if (index0 < 0 || index0 >= itemCount)
                              throw $.ioore(index0);
                            values[index0] = t1;
                        }
                      ++i;
                      index0 = index1;
                  }
              index = index0;
          }
  }
};

$.LocationData_getCandidateName = function(i) {
  var t1 = $.getInterceptor$JSNumber(i);
  $.requireArgument(t1.$ge(i, 0), "i", null);
  $.requireArgument(t1.$lt(i, 26), "i", null);
  return $.String_String$fromCharCodes([t1.$add(i, 65)]);
};

$.MapPlayer$ = function(_location, $name) {
  return new $.MapPlayer($.GlobalId_GlobalId(), $name, _location);
};

$.CandidateElement$ = function(w, h, _color, p) {
  var t1 = new $.CandidateElement(_color, p, p.get$name(), null, false, $.List_List(0), $.EventHandle$(), null, w, h, 1, false, null, null, $.HashMap_HashMap(), $.HashMap_HashMap(), false);
  t1.CandidateElement$4(w, h, _color, p);
  return t1;
};

$.CandidateMapElement$ = function(w, h) {
  return new $.CandidateMapElement($.List_List(0), $.AffineTransform$(1, 0, 0, 1, 0, 0), 0, null, null, $.List_List(0), $.EventHandle$(), null, w, h, 1, false, null, null, $.HashMap_HashMap(), $.HashMap_HashMap(), false);
};

$.RootMapElement$ = function(w, h) {
  var t1, t2;
  t1 = $.AffineTransform$(1, 0, 0, 1, 0, 0);
  t2 = $.EventHandle$();
  t2 = new $.RootMapElement($.VoterMapElement$(w, h), $.CandidateMapElement$(w, h), t1, t2, null, null, null, $.List_List(0), $.EventHandle$(), null, w, h, 1, false, null, null, $.HashMap_HashMap(), $.HashMap_HashMap(), false);
  t2.RootMapElement$2(w, h);
  return t2;
};

$.VoterMapElement$ = function(w, h) {
  var t1 = new $.VoterMapElement($.List_List(0), $.AffineTransform$(1, 0, 0, 1, 0, 0), null, $.Map_Map(), $.List_List(0), $.EventHandle$(), null, w, h, 1, false, null, null, $.HashMap_HashMap(), $.HashMap_HashMap(), false);
  t1.VoterMapElement$2(w, h);
  return t1;
};

$.CondorcetCandidateProfile$_internal = function(candidate, lostTo, beat, tied) {
  return new $.CondorcetCandidateProfile(candidate, lostTo, beat, tied);
};

$.CondorcetElection$_internal = function(_pairs, _profiles, ballots, places) {
  return new $.CondorcetElection(_pairs, _profiles, ballots, places);
};

$.CondorcetElection_CondorcetElection = function(ballots) {
  var roBallots, map, candidateSet, t1, t2, i, candidateI, j, j0, set, candidateProfiles, tarjanMap, lostTo, beat, tied, tarjanLostTiedSet, t3, t4, other, components, places, placeNumber;
  roBallots = $.ReadOnlyCollection$(ballots);
  $.requireArgument($.CollectionUtil_allUnique($.ReadOnlyCollection$(roBallots.map$1(new $.CondorcetElection_CondorcetElection_anon()))), "Only one ballot per voter is allowed", null);
  map = $._HashMapImpl$();
  candidateSet = $.HashSet$();
  for (t1 = $.iterator(ballots); t1.moveNext$0() === true;) {
    t2 = t1.get$current();
    for (i = 0; $.CONSTANT5.$lt(i, $.length(t2.get$rank())); i = j) {
      candidateI = $.$$index(t2.get$rank(), i);
      candidateSet.add$1(candidateI);
      for (j = i + 1, j0 = j; $.CONSTANT5.$lt(j0, $.length(t2.get$rank())); ++j0)
        $.add(map.putIfAbsent$2($.CondorcetPair_CondorcetPair(candidateI, $.$$index(t2.get$rank(), j0), null), new $.CondorcetElection_CondorcetElection_anon0()), t2);
    }
  }
  set = $.HashSet$();
  map.forEach$1(new $.CondorcetElection_CondorcetElection_anon1(set));
  candidateProfiles = $._HashMapImpl$();
  tarjanMap = $._HashMapImpl$();
  for (t1 = candidateSet.get$iterator(); t1.moveNext$0() === true;) {
    t2 = t1.get$current();
    lostTo = $.List_List(0);
    beat = $.List_List(0);
    tied = $.List_List(0);
    tarjanLostTiedSet = $.HashSet$();
    for (t3 = set.get$iterator(); t3.moveNext$0() === true;) {
      t4 = t3.get$current();
      if ($.$$eq(t4.get$item1(), t2) === true || $.$$eq(t4.get$item2(), t2) === true) {
        other = $.$$eq(t4.get$item1(), t2) === true ? t4.get$item2() : t4.get$item1();
        if (t4.get$isTie() === true) {
          tied.push(other);
          tarjanLostTiedSet.add$1(other);
        } else if ($.$$eq(t4.get$winner(), t2) === true)
          beat.push(other);
        else {
          lostTo.push(other);
          tarjanLostTiedSet.add$1(other);
        }
      }
    }
    candidateProfiles.$indexSet(t2, $.CondorcetCandidateProfile$_internal(t2, $.ReadOnlyCollection$(lostTo), $.ReadOnlyCollection$(beat), $.ReadOnlyCollection$(tied)));
    tarjanMap.$indexSet(t2, tarjanLostTiedSet);
  }
  components = $.TarjanCycleDetect_getStronglyConnectedComponents(tarjanMap);
  places = $.List_List(0);
  for (t1 = $.iterator(components), placeNumber = 1; t1.moveNext$0() === true;) {
    t2 = t1.get$current();
    places.push($.ElectionPlace$(placeNumber, t2));
    t2 = $.length(t2);
    if (typeof t2 !== "number")
      throw $.iae(t2);
    placeNumber += t2;
  }
  return $.CondorcetElection$_internal(set, candidateProfiles, roBallots, $.ReadOnlyCollection$(places));
};

$.CondorcetPair$_internal = function(can1, can2, ballots, firstOverSecond, secondOverFirst) {
  return new $.CondorcetPair(ballots, firstOverSecond, secondOverFirst, can1, can2);
};

$.CondorcetPair_CondorcetPair = function(can1, can2, bals) {
  var t1, temp, roBallots;
  t1 = {};
  t1.can1_0 = can1;
  t1.can2_1 = can2;
  $.requireArgumentNotNull(t1.can1_0, "can1");
  $.requireArgumentNotNull(t1.can2_1, "can2");
  $.requireArgument($.$$eq(t1.can1_0, t1.can2_1) !== true, "can1 and can2 must be different", null);
  if ($.$$gt($.compareTo(t1.can1_0, t1.can2_1), 0) === true) {
    temp = t1.can2_1;
    t1.can2_1 = t1.can1_0;
    t1.can1_0 = temp;
  }
  if (bals == null)
    return $.CondorcetPair$_internal(t1.can1_0, t1.can2_1, null, 0, 0);
  else {
    roBallots = $.ReadOnlyCollection$(bals);
    $.requireArgument($.CollectionUtil_allUnique(roBallots), "Only one ballot per voter is allowed", null);
    t1.fos_2 = 0;
    t1.sof_3 = 0;
    roBallots.forEach$1(new $.CondorcetPair_CondorcetPair_anon(t1));
    return $.CondorcetPair$_internal(t1.can1_0, t1.can2_1, roBallots, t1.fos_2, t1.sof_3);
  }
};

$.ElectionPlace$ = function(place, candidates) {
  var t1 = new $.ElectionPlace(place, $.List_List$from(candidates));
  t1.ElectionPlace$2(place, candidates);
  return t1;
};

$.IrvElection$_internal = function(candidates, ballots, rounds) {
  return new $.IrvElection(candidates, ballots, rounds);
};

$.IrvElection_IrvElection = function(ballots) {
  var roBallots, roCandidates, rounds, eliminatedCandidates, round;
  roBallots = $.ReadOnlyCollection$(ballots);
  roCandidates = roBallots.selectMany$1(new $.IrvElection_IrvElection_anon()).distinct$0().toReadOnlyCollection$0();
  rounds = $.List_List(0);
  eliminatedCandidates = $.List_List(0);
  do {
    round = $.IrvRound_IrvRound(roBallots, eliminatedCandidates);
    rounds.push(round);
    $.CONSTANT1.addAll$1(eliminatedCandidates, $.toList(round.get$eliminatedCandidates()));
  } while (round.get$isFinal() !== true);
  return $.IrvElection$_internal(roCandidates, roBallots, $.ReadOnlyCollection$wrap(rounds));
};

$.IrvElimination$ = function(candidate, _transfers, exhausted) {
  var t1 = new $.IrvElimination(candidate, _transfers, exhausted);
  t1.IrvElimination$3(candidate, _transfers, exhausted);
  return t1;
};

$.IrvRound_IrvRound = function(ballots, eliminatedCandidates) {
  var t1, cleanedBallots, candidateAllocations, voteGroups, placeVotes, t2, places, newlyEliminatedCandidates;
  t1 = {};
  cleanedBallots = ballots.map$1(new $.IrvRound_IrvRound_anon(eliminatedCandidates));
  cleanedBallots.count$1(new $.IrvRound_IrvRound_anon0());
  candidateAllocations = $.Grouping$($.where(cleanedBallots, new $.IrvRound_IrvRound_anon1()), new $.IrvRound_IrvRound_anon2());
  voteGroups = $.Grouping$(candidateAllocations.getKeys$0(), new $.IrvRound_IrvRound_anon3(candidateAllocations));
  placeVotes = $.toList(voteGroups.getKeys$0());
  t2 = $.getInterceptor$JSArray(placeVotes);
  t2.sort$1(placeVotes, new $.IrvRound_IrvRound_anon4());
  t1.placeNumber_0 = 1;
  places = $.ReadOnlyCollection$(t2.map$1(placeVotes, new $.IrvRound_IrvRound_anon5(t1, voteGroups)));
  newlyEliminatedCandidates = $.IrvRound__getEliminatedCandidates(places);
  return $.IrvRound$_internal(places, $.ReadOnlyCollection$($.map(newlyEliminatedCandidates, new $.IrvRound_IrvRound_anon6(cleanedBallots, newlyEliminatedCandidates))));
};

$.IrvRound$_internal = function(places, eliminations) {
  return new $.IrvRound(places, eliminations);
};

$.IrvRound__getEliminatedCandidates = function(places) {
  var majorityCount;
  if ($.$$eq(places.get$length(), 1) === true)
    return [];
  majorityCount = $.$$add($.$$tdiv(places.selectNumbers$1(new $.IrvRound__getEliminatedCandidates_anon()).sum$0(), 2), 1);
  if ($.$$eq($.length(places.$index(0)), 1) === true && $.$$ge(places.$index(0).get$voteCount(), majorityCount) === true)
    return [];
  return $.toList($.map(places.$index($.$$sub(places.get$length(), 1)), new $.IrvRound__getEliminatedCandidates_anon0()));
};

$.PluralityElection$_internal = function(ballots, _ballotGroup, sourcePlaces) {
  return new $.PluralityElection(ballots, _ballotGroup, $.ReadOnlyCollection$(sourcePlaces));
};

$.PluralityElection_PluralityElection = function(ballots) {
  var roBallots, group, voteCounts, ballotCounts, places, t1, place, t2, p;
  roBallots = $.ReadOnlyCollection$(ballots);
  $.requireArgument($.CollectionUtil_allUnique($.ReadOnlyCollection$(roBallots.map$1(new $.PluralityElection_PluralityElection_anon()))), "Only one ballot per voter is allowed", null);
  group = roBallots.group$1(new $.PluralityElection_PluralityElection_anon0());
  voteCounts = $._HashMapImpl$();
  $.forEach(group, new $.PluralityElection_PluralityElection_anon1(voteCounts));
  ballotCounts = $.List_List$from(voteCounts.get$keys());
  $.CONSTANT1.sort$1(ballotCounts, new $.PluralityElection_PluralityElection_anon2());
  places = $.List_List(0);
  for (t1 = $.CONSTANT1.get$iterator(ballotCounts), place = 1; t1.moveNext$0() === true;) {
    t2 = t1.get$current();
    p = $.PluralityElectionPlace$(place, voteCounts.$index(t2), t2);
    places.push(p);
    t2 = p.get$length();
    if (typeof t2 !== "number")
      throw $.iae(t2);
    place += t2;
  }
  return $.PluralityElection$_internal(roBallots, group, places);
};

$.PluralityElectionPlace$ = function(place, candidates, voteCount) {
  var t1 = new $.PluralityElectionPlace(voteCount, place, $.List_List$from(candidates));
  t1.ElectionPlace$2(place, candidates);
  t1.PluralityElectionPlace$3(place, candidates, voteCount);
  return t1;
};

$.IsolateNatives__processWorkerMessage.call$2 = $.IsolateNatives__processWorkerMessage;
$.IsolateNatives__processWorkerMessage.$name = "IsolateNatives__processWorkerMessage";
$.Primitives__throwFormatException.call$1 = $.Primitives__throwFormatException;
$.Primitives__throwFormatException.$name = "Primitives__throwFormatException";
$.$$throw.call$1 = $.$$throw;
$.$$throw.$name = "$$throw";
$.DartError_toStringWrapper.call$0 = $.DartError_toStringWrapper;
$.DartError_toStringWrapper.$name = "DartError_toStringWrapper";
$.invokeClosure.call$5 = $.invokeClosure;
$.invokeClosure.$name = "invokeClosure";
$.typeNameInChrome.call$1 = $.typeNameInChrome;
$.typeNameInChrome.$name = "typeNameInChrome";
$.typeNameInSafari.call$1 = $.typeNameInSafari;
$.typeNameInSafari.$name = "typeNameInSafari";
$.typeNameInOpera.call$1 = $.typeNameInOpera;
$.typeNameInOpera.$name = "typeNameInOpera";
$.typeNameInFirefox.call$1 = $.typeNameInFirefox;
$.typeNameInFirefox.$name = "typeNameInFirefox";
$.typeNameInIE.call$1 = $.typeNameInIE;
$.typeNameInIE.$name = "typeNameInIE";
$.constructorNameFallback.call$1 = $.constructorNameFallback;
$.constructorNameFallback.$name = "constructorNameFallback";
$.dynamicBind.call$4 = $.dynamicBind;
$.dynamicBind.$name = "dynamicBind";
$._nullDataHandler.call$1 = $._nullDataHandler;
$._nullDataHandler.$name = "_nullDataHandler";
$._nullErrorHandler.call$1 = $._nullErrorHandler;
$._nullErrorHandler.$name = "_nullErrorHandler";
$._nullDoneHandler.call$0 = $._nullDoneHandler;
$._nullDoneHandler.$name = "_nullDoneHandler";
$.Comparable_compare.call$2 = $.Comparable_compare;
$.Comparable_compare.$name = "Comparable_compare";
$._distanceElectionIsolate.call$0 = $._distanceElectionIsolate;
$._distanceElectionIsolate.$name = "_distanceElectionIsolate";
$._pluralityElectionIsolate.call$0 = $._pluralityElectionIsolate;
$._pluralityElectionIsolate.$name = "_pluralityElectionIsolate";
$._condorcetElectionIsolate.call$0 = $._condorcetElectionIsolate;
$._condorcetElectionIsolate.$name = "_condorcetElectionIsolate";
$._irvElectionIsolate.call$0 = $._irvElectionIsolate;
$._irvElectionIsolate.$name = "_irvElectionIsolate";
$._voterHexMapperIsolate.call$0 = $._voterHexMapperIsolate;
$._voterHexMapperIsolate.$name = "_voterHexMapperIsolate";
Isolate.$finishClasses($$);
$$ = {};
$.List = {builtin$cls: 'List'};
$.num = {builtin$cls: 'num'};
$.Match = {builtin$cls: 'Match'};
$.Set = {builtin$cls: 'Set'};
$.String = {builtin$cls: 'String'};
$.bool = {builtin$cls: 'bool'};
$._ManagerStub = {builtin$cls: '_ManagerStub'};
$.Node = {builtin$cls: 'Node'};
$.Element = {builtin$cls: 'Element'};
$.SendPort = {builtin$cls: 'SendPort'};
$.ReceivePort = {builtin$cls: 'ReceivePort'};
$.$int = {builtin$cls: '$int'};
Isolate.makeConstantList = function(list) {
  list.immutable$list = true;
  list.fixed$length = true;
  return list;
};
$.CONSTANT6 = Isolate.makeConstantList([]);
$.CONSTANT20 = new Isolate.$isolateProperties.Object();
$.CONSTANT8 = new Isolate.$isolateProperties.EventArgs();
$.CONSTANT16 = new Isolate.$isolateProperties.EventStreamProvider("blur");
$.CONSTANT19 = new Isolate.$isolateProperties.Box(0, 0, 10, 10);
$.CONSTANT21 = new Isolate.$isolateProperties.Coordinate(0, 0);
$.CONSTANT17 = new Isolate.$isolateProperties.EventStreamProvider("mousedown");
$.CONSTANT12 = new Isolate.$isolateProperties.DisposedError("Invalid operation on disposed object");
$.CONSTANT13 = new Isolate.$isolateProperties.InvalidOperationError("Input contained a null item");
$.CONSTANT11 = new Isolate.$isolateProperties.EventStreamProvider("click");
$.CONSTANT2 = new Isolate.$isolateProperties.JSNull();
$.CONSTANT1 = new Isolate.$isolateProperties.JSArray();
$.CONSTANT4 = new Isolate.$isolateProperties.JSNumber();
$.CONSTANT5 = new Isolate.$isolateProperties.JSInt();
$.CONSTANT7 = new Isolate.$isolateProperties.JSDouble();
$.CONSTANT = new Isolate.$isolateProperties.JSString();
$.CONSTANT0 = new Isolate.$isolateProperties.NullThrownError();
$.CONSTANT14 = new Isolate.$isolateProperties._Random();
$.CONSTANT15 = new Isolate.$isolateProperties._UndefinedValue();
$.CONSTANT3 = new Isolate.$isolateProperties._DeletedKeySentinel();
$.CONSTANT9 = new Isolate.$isolateProperties.EventStreamProvider("mouseout");
$.CONSTANT18 = new Isolate.$isolateProperties.EventStreamProvider("mouseup");
$.CONSTANT10 = new Isolate.$isolateProperties.EventStreamProvider("mousemove");
$.lazyPort = null;
$._BufferingSendPort__idCount = 0;
$.ReceivePortImpl__nextFreeId = 1;
$.Primitives_hashCodeSeed = 0;
$._getTypeNameOf = null;
$._cachedBrowserPrefix = null;
$.GlobalId__globalId = 0;
$._botHelperRandom = null;
$.LocationData__candidateHues = null;
$.$$mod = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$mod(receiver, a0);
};
$.$$and = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$and(receiver, a0);
};
$.$$mul = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$mul(receiver, a0);
};
$.$$add = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$add(receiver, a0);
};
$.$$sub = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$sub(receiver, a0);
};
$.$$div = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$div(receiver, a0);
};
$.$$lt = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$lt(receiver, a0);
};
$.$$shl = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$shl(receiver, a0);
};
$.$$le = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$le(receiver, a0);
};
$.$$eq = function(receiver, a0) {
  return $.getInterceptor(receiver).$eq(receiver, a0);
};
$.$$gt = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$gt(receiver, a0);
};
$.$$ge = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$ge(receiver, a0);
};
$.abs = function(receiver) {
  return $.getInterceptor$JSNumber(receiver).abs$0(receiver);
};
$.add = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).add$1(receiver, a0);
};
$.addAll = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).addAll$1(receiver, a0);
};
$.addLast = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).addLast$1(receiver, a0);
};
$.allMatches = function(receiver, a0) {
  return $.getInterceptor$JSString(receiver).allMatches$1(receiver, a0);
};
$.any = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).any$1(receiver, a0);
};
$.charCodeAt = function(receiver, a0) {
  return $.getInterceptor$JSString(receiver).charCodeAt$1(receiver, a0);
};
$.clear = function(receiver) {
  return $.getInterceptor$JSArray(receiver).clear$0(receiver);
};
$.compareTo = function(receiver, a0) {
  return $.getInterceptor$JSNumberJSString(receiver).compareTo$1(receiver, a0);
};
$.contains0 = function(receiver) {
  return $.getInterceptor$JSArrayJSString(receiver).get$contains(receiver);
};
$.contains1 = function(receiver, a0) {
  return $.getInterceptor$JSArrayJSString(receiver).contains$1(receiver, a0);
};
$.contains = function(receiver, a0, a1) {
  return $.getInterceptor$JSString(receiver).contains$2(receiver, a0, a1);
};
$.elementAt = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).elementAt$1(receiver, a0);
};
$.first = function(receiver) {
  return $.getInterceptor$JSArray(receiver).get$first(receiver);
};
$.firstMatching = function(receiver, a0, a1) {
  return $.getInterceptor$JSArray(receiver).firstMatching$2$orElse(receiver, a0, a1);
};
$.forEach = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).forEach$1(receiver, a0);
};
$.getRange = function(receiver, a0, a1) {
  return $.getInterceptor$JSArray(receiver).getRange$2(receiver, a0, a1);
};
$.hashCode = function(receiver) {
  return $.getInterceptor(receiver).get$hashCode(receiver);
};
$.indexOf0 = function(receiver, a0) {
  return $.getInterceptor$JSArrayJSString(receiver).indexOf$1(receiver, a0);
};
$.indexOf = function(receiver, a0, a1) {
  return $.getInterceptor$JSArrayJSString(receiver).indexOf$2(receiver, a0, a1);
};
$.insertRange = function(receiver, a0, a1, a2) {
  return $.getInterceptor$JSArray(receiver).insertRange$3(receiver, a0, a1, a2);
};
$.isEmpty = function(receiver) {
  return $.getInterceptor$JSArrayJSString(receiver).get$isEmpty(receiver);
};
$.join = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).join$1(receiver, a0);
};
$.last = function(receiver) {
  return $.getInterceptor$JSArray(receiver).get$last(receiver);
};
$.length = function(receiver) {
  return $.getInterceptor$JSArrayJSString(receiver).get$length(receiver);
};
$.map = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).map$1(receiver, a0);
};
$.remove = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).remove$1(receiver, a0);
};
$.removeAll = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).removeAll$1(receiver, a0);
};
$.removeMatching = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).removeMatching$1(receiver, a0);
};
$.replaceAll = function(receiver, a0, a1) {
  return $.getInterceptor$JSString(receiver).replaceAll$2(receiver, a0, a1);
};
$.round = function(receiver) {
  return $.getInterceptor$JSNumber(receiver).round$0(receiver);
};
$.singleMatching = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).singleMatching$1(receiver, a0);
};
$.split = function(receiver, a0) {
  return $.getInterceptor$JSString(receiver).split$1(receiver, a0);
};
$.startsWith = function(receiver, a0) {
  return $.getInterceptor$JSString(receiver).startsWith$1(receiver, a0);
};
$.substring = function(receiver, a0) {
  return $.getInterceptor$JSString(receiver).substring$1(receiver, a0);
};
$.toInt = function(receiver) {
  return $.getInterceptor$JSNumber(receiver).toInt$0(receiver);
};
$.toList = function(receiver) {
  return $.getInterceptor$JSArray(receiver).toList$0(receiver);
};
$.toLowerCase = function(receiver) {
  return $.getInterceptor$JSString(receiver).toLowerCase$0(receiver);
};
$.toRadixString = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).toRadixString$1(receiver, a0);
};
$.toSet = function(receiver) {
  return $.getInterceptor$JSArray(receiver).toSet$0(receiver);
};
$.toString = function(receiver) {
  return $.getInterceptor(receiver).toString$0(receiver);
};
$.toStringAsFixed = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).toStringAsFixed$1(receiver, a0);
};
$.trim = function(receiver) {
  return $.getInterceptor$JSString(receiver).trim$0(receiver);
};
$.where = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).where$1(receiver, a0);
};
$.$$index = function(receiver, a0) {
  return $.getInterceptor$JSArrayJSString(receiver).$index(receiver, a0);
};
$.$$indexSet = function(receiver, a0, a1) {
  return $.getInterceptor$JSArray(receiver).$indexSet(receiver, a0, a1);
};
$.$$xor = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$xor(receiver, a0);
};
$.iterator = function(receiver) {
  return $.getInterceptor$JSArray(receiver).get$iterator(receiver);
};
$.$$negate = function(receiver) {
  return $.getInterceptor$JSNumber(receiver).$negate(receiver);
};
$.$$or = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$or(receiver, a0);
};
$.$$tdiv = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$tdiv(receiver, a0);
};
$.getInterceptor = function(receiver) {
  if (typeof receiver == "number") {
    if (Math.floor(receiver) == receiver)
      return $.JSInt.prototype;
    return $.JSDouble.prototype;
  }
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return $.JSNull.prototype;
  if (typeof receiver == "function")
    return $.JSFunction.prototype;
  if (typeof receiver == "boolean")
    return $.JSBool.prototype;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSArray = function(receiver) {
  if (receiver == null)
    return void 0;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSArrayJSString = function(receiver) {
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return void 0;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSNumber = function(receiver) {
  if (typeof receiver == "number")
    return $.JSNumber.prototype;
  if (receiver == null)
    return void 0;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSNumberJSString = function(receiver) {
  if (typeof receiver == "number")
    return $.JSNumber.prototype;
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return void 0;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSString = function(receiver) {
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return void 0;
  return $.ObjectInterceptor.prototype;
};
Isolate.$lazy($, "globalThis", "globalThis", "get$globalThis", function() {
  return $.IsolateNatives_computeGlobalThis();
});
Isolate.$lazy($, "globalWindow", "globalWindow", "get$globalWindow", function() {
  return $.get$globalThis().window;
});
Isolate.$lazy($, "globalWorker", "globalWorker", "get$globalWorker", function() {
  return $.get$globalThis().Worker;
});
Isolate.$lazy($, "globalPostMessageDefined", "globalPostMessageDefined", "get$globalPostMessageDefined", function() {
  return $.get$globalThis().postMessage !== (void 0);
});
Isolate.$lazy($, "thisScript", "IsolateNatives_thisScript", "get$IsolateNatives_thisScript", function() {
  return $.IsolateNatives_computeThisScript();
});
Isolate.$lazy($, "quoteRegExp", "quoteRegExp", "get$quoteRegExp", function() {
  return $.JSSyntaxRegExp$("[-[\\]{}()*+?.,\\\\^$|#\\s]", true, false);
});
Isolate.$lazy($, "_SENTINEL", "_DistinctStream__SENTINEL", "get$_DistinctStream__SENTINEL", function() {
  return $.Object$();
});
Isolate.$lazy($, "isMouseOverProperty", "Mouse_isMouseOverProperty", "get$Mouse_isMouseOverProperty", function() {
  return $.Property$("IsMouseOver", false);
});
Isolate.$lazy($, "isMouseDirectlyOverProperty", "Mouse_isMouseDirectlyOverProperty", "get$Mouse_isMouseDirectlyOverProperty", function() {
  return $.Property$("IsMouseDirectlyOver", false);
});
Isolate.$lazy($, "_stageMouseCacheProperty", "Mouse__stageMouseCacheProperty", "get$Mouse__stageMouseCacheProperty", function() {
  return $.Property$("_stageMouseCacheProperty", null);
});
Isolate.$lazy($, "_clickManagerProperty", "MouseManager__clickManagerProperty", "get$MouseManager__clickManagerProperty", function() {
  return $.Property$("_clickManager", null);
});
Isolate.$lazy($, "_isClickableProperty", "MouseManager__isClickableProperty", "get$MouseManager__isClickableProperty", function() {
  return $.Property$("isClickable", false);
});
Isolate.$lazy($, "_isDraggableProperty", "MouseManager__isDraggableProperty", "get$MouseManager__isDraggableProperty", function() {
  return $.Property$("isDraggable", false);
});
Isolate.$lazy($, "_cursorProperty", "MouseManager__cursorProperty", "get$MouseManager__cursorProperty", function() {
  return $.Property$("_cursor", null);
});
Isolate.$lazy($, "_clickEvent", "MouseManager__clickEvent", "get$MouseManager__clickEvent", function() {
  return $.AttachedEvent$("clickEvent");
});
Isolate.$lazy($, "_mouseDownEvent", "MouseManager__mouseDownEvent", "get$MouseManager__mouseDownEvent", function() {
  return $.AttachedEvent$("mouseDown");
});
Isolate.$lazy($, "_mouseUpEvent", "MouseManager__mouseUpEvent", "get$MouseManager__mouseUpEvent", function() {
  return $.AttachedEvent$("mouseUp");
});
Isolate.$lazy($, "_mouseMoveEvent", "MouseManager__mouseMoveEvent", "get$MouseManager__mouseMoveEvent", function() {
  return $.AttachedEvent$("mouseMove");
});
Isolate.$lazy($, "_mouseOutEvent", "MouseManager__mouseOutEvent", "get$MouseManager__mouseOutEvent", function() {
  return $.AttachedEvent$("mouseOut");
});
Isolate.$lazy($, "_dragStartingEvent", "MouseManager__dragStartingEvent", "get$MouseManager__dragStartingEvent", function() {
  return $.AttachedEvent$("_dragStartingEvent");
});
Isolate.$lazy($, "_dragEvent", "MouseManager__dragEvent", "get$MouseManager__dragEvent", function() {
  return $.AttachedEvent$("_dragStarting");
});
var $ = null;
Isolate.$finishClasses($$);
$$ = {};
Isolate = Isolate.$finishIsolateConstructor(Isolate);
var $ = new Isolate();
$.$defineNativeClass = function(cls, desc) {
  var fields = desc[''];
  var fields_array = fields ? fields.split(',') : [];
  for (var i = 0; i < fields_array.length; i++) {
    $.$generateAccessor(fields_array[i], desc);
  }
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var method in desc) {
    if (method) {
      if (hasOwnProperty.call(desc, method)) {
        $.dynamicFunction(method)[cls] = desc[method];
      }
    }
  }
};

(function(table) {
  for (var key in table)
    $.defineProperty(Object.prototype, key, table[key]);
})({
  $isJavaScriptIndexingBehavior: function() {
    return false;
  },
  $isCollection: function() {
    return false;
  },
  $isList: function() {
    return false;
  },
  $isMap: function() {
    return false;
  },
  $isElement: function() {
    return false;
  },
  $isLocation: function() {
    return false;
  },
  $isNode: function() {
    return false;
  },
  toString$0: function() {
    return $.toStringForNativeObject(this);
  },
  get$hashCode: function() {
    return $.hashCodeForNativeObject(this);
  },
  $eq: function(a) {
    return this === a;
  }
});

$.$defineNativeClass("Worker", {
  get$id: function() {
    return this.id;
  },
  set$id: function(i) {
    this.id = i;
  },
  set$onmessage: function(f) {
    this.onmessage = f;
  },
  postMessage$1: function(msg) {
    this.postMessage(msg);
  },
  terminate$0: function() {
    this.terminate();
  }
});

$.$defineNativeClass("HTMLAnchorElement", {"": "name>",
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("HTMLBodyElement", {
  get$onBlur: function() {
    return $.CONSTANT16.forTarget$1(this);
  }
});

$.$defineNativeClass("HTMLButtonElement", {"": "disabled<,name>,value="});

$.$defineNativeClass("HTMLCanvasElement", {"": "height=,width=",
  getContext$2: function(contextId, attrs) {
    var t1 = $ === attrs;
    if (t1)
      attrs = null;
    if (!t1)
      return this._getContext_1$2(contextId, $.convertDartToNative_Dictionary(attrs));
    return this._getContext_2$1(contextId);
  },
  getContext$1: function(contextId) {
    return this.getContext$2(contextId, $);
  },
  _getContext_1$2: function(contextId, attrs) {
    return this.getContext(contextId,attrs);
  },
  _getContext_2$1: function(contextId) {
    return this.getContext(contextId);
  },
  get$context2d: function() {
    return this.getContext$1("2d");
  }
});

$.$defineNativeClass("CanvasRenderingContext2D", {"": "fillStyle<,font<,globalAlpha=,shadowBlur<,shadowColor<,shadowOffsetX<,shadowOffsetY<,textAlign<,textBaseline<",
  beginPath$0: function() {
    return this.beginPath();
  },
  bezierCurveTo$6: function(cp1x, cp1y, cp2x, cp2y, x, y) {
    return this.bezierCurveTo(cp1x,cp1y,cp2x,cp2y,x,y);
  },
  clearRect$4: function(x, y, width, height) {
    return this.clearRect(x,y,width,height);
  },
  closePath$0: function() {
    return this.closePath();
  },
  drawImage$9: function(canvas_OR_image_OR_video, sx_OR_x, sy_OR_y, sw_OR_width, height_OR_sh, dx, dy, dw, dh) {
    return this.drawImage(canvas_OR_image_OR_video,sx_OR_x,sy_OR_y,sw_OR_width,height_OR_sh,dx,dy,dw,dh);
  },
  drawImage$3: function(canvas_OR_image_OR_video, sx_OR_x, sy_OR_y) {
    return this.drawImage(canvas_OR_image_OR_video, sx_OR_x, sy_OR_y);
  },
  fill$1: function(winding) {
    return this.fill(winding);
  },
  fill$0: function() {
    return this.fill();
  },
  fillText$4: function(text, x, y, maxWidth) {
    return this.fillText(text,x,y,maxWidth);
  },
  fillText$3: function(text, x, y) {
    return this.fillText(text, x, y);
  },
  moveTo$2: function(x, y) {
    return this.moveTo(x,y);
  },
  restore$0: function() {
    return this.restore();
  },
  save$0: function() {
    return this.save();
  },
  transform$6: function(m11, m12, m21, m22, dx, dy) {
    return this.transform(m11,m12,m21,m22,dx,dy);
  },
  translate$2: function(tx, ty) {
    return this.translate(tx,ty);
  }
});

$.$defineNativeClass("CharacterData", {"": "length>"});

$.$defineNativeClass("ClientRect", {"": "height>,left>,top>,width>"});

$.$defineNativeClass("CSSStyleDeclaration", {"": "length>",
  _getPropertyValue$1: function(propertyName) {
    return this.getPropertyValue(propertyName);
  },
  getPropertyValue$1: function(propertyName) {
    var propValue = this._getPropertyValue$1(propertyName);
    return !(propValue == null) ? propValue : "";
  },
  setProperty$3: function(propertyName, value, priority) {
    this.setProperty(propertyName, value, priority);
    if (!!this.setAttribute)
      this.setAttribute(propertyName, value);
  },
  get$aspectRatio: function() {
    return this.getPropertyValue$1($.S($._browserPrefix()) + "aspect-ratio");
  },
  set$background: function(value) {
    this.setProperty$3("background", value, "");
  },
  get$clear: function() {
    return this.getPropertyValue$1("clear");
  },
  clear$0: function() {
    return this.get$clear().call$0();
  },
  clear$1: function(arg0) {
    return this.get$clear().call$1(arg0);
  },
  set$color: function(value) {
    this.setProperty$3("color", value, "");
  },
  set$cursor: function(value) {
    this.setProperty$3("cursor", value, "");
  },
  set$font: function(value) {
    this.setProperty$3("font", value, "");
  },
  set$fontStyle: function(value) {
    this.setProperty$3("font-style", value, "");
  },
  get$height: function() {
    return this.getPropertyValue$1("height");
  },
  set$height: function(value) {
    this.setProperty$3("height", value, "");
  },
  get$left: function() {
    return this.getPropertyValue$1("left");
  },
  set$textAlign: function(value) {
    this.setProperty$3("text-align", value, "");
  },
  get$top: function() {
    return this.getPropertyValue$1("top");
  },
  get$transform: function() {
    return this.getPropertyValue$1($.S($._browserPrefix()) + "transform");
  },
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.get$transform().call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  },
  get$width: function() {
    return this.getPropertyValue$1("width");
  },
  set$width: function(value) {
    this.setProperty$3("width", value, "");
  }
});

$.$defineNativeClass("Document", {
  $$dom_createElement$1: function(tagName) {
    return this.createElement(tagName);
  },
  $$dom_getElementById$1: function(elementId) {
    return this.getElementById(elementId);
  },
  $$dom_getElementsByName$1: function(elementName) {
    return this.getElementsByName(elementName);
  },
  $$dom_getElementsByTagName$1: function(tagname) {
    return this.getElementsByTagName(tagname);
  },
  $$dom_querySelector$1: function(selectors) {
    return this.querySelector(selectors);
  },
  $$dom_querySelectorAll$1: function(selectors) {
    return this.querySelectorAll(selectors);
  },
  get$onBlur: function() {
    return $.CONSTANT16.forTarget$1(this);
  },
  get$onClick: function() {
    return $.CONSTANT11.forTarget$1(this);
  },
  get$onMouseDown: function() {
    return $.CONSTANT17.forTarget$1(this);
  },
  get$onMouseMove: function() {
    return $.CONSTANT10.forTarget$1(this);
  },
  get$onMouseOut: function() {
    return $.CONSTANT9.forTarget$1(this);
  },
  get$onMouseUp: function() {
    return $.CONSTANT18.forTarget$1(this);
  },
  query$1: function(selectors) {
    if ($.RegExp_RegExp("^#[_a-zA-Z]\\w*$", true, false).hasMatch$1(selectors) === true)
      return this.$$dom_getElementById$1($.CONSTANT.substring$1(selectors, 1));
    return this.$$dom_querySelector$1(selectors);
  },
  queryAll$1: function(selectors) {
    var mutableMatches, len, copyOfMatches, t1, i;
    if ($.RegExp_RegExp("^\\[name=[\"'][^'\"]+['\"]\\]$", true, false).hasMatch$1(selectors) === true) {
      mutableMatches = this.$$dom_getElementsByName$1($.CONSTANT.substring$2(selectors, 7, selectors.length - 2));
      if (typeof mutableMatches !== "string" && (typeof mutableMatches !== "object" || mutableMatches === null || mutableMatches.constructor !== Array && !mutableMatches.$isJavaScriptIndexingBehavior()))
        return this.queryAll$1$bailout(1, mutableMatches);
      len = mutableMatches.length;
      copyOfMatches = $.List_List$fixedLength(len, null);
      for (t1 = mutableMatches.length, i = 0; i < len; ++i) {
        if (i >= t1)
          throw $.ioore(i);
        copyOfMatches[i] = mutableMatches[i];
      }
      return $._FrozenElementList$_wrap(copyOfMatches);
    } else if ($.RegExp_RegExp("^[*a-zA-Z0-9]+$", true, false).hasMatch$1(selectors) === true) {
      mutableMatches = this.$$dom_getElementsByTagName$1(selectors);
      if (typeof mutableMatches !== "string" && (typeof mutableMatches !== "object" || mutableMatches === null || mutableMatches.constructor !== Array && !mutableMatches.$isJavaScriptIndexingBehavior()))
        return this.queryAll$1$bailout(3, mutableMatches);
      len = mutableMatches.length;
      copyOfMatches = $.List_List$fixedLength(len, null);
      for (t1 = mutableMatches.length, i = 0; i < len; ++i) {
        if (i >= t1)
          throw $.ioore(i);
        copyOfMatches[i] = mutableMatches[i];
      }
      return $._FrozenElementList$_wrap(copyOfMatches);
    } else
      return $._FrozenElementList$_wrap(this.$$dom_querySelectorAll$1(selectors));
  },
  queryAll$1$bailout: function(state0, mutableMatches, t2, len) {
    switch (state0) {
      case 0:
      default:
        var copyOfMatches, i, t1;
        if (state0 === 2 || state0 === 1 || state0 === 0 && $.RegExp_RegExp("^\\[name=[\"'][^'\"]+['\"]\\]$", true, false).hasMatch$1(selectors) === true)
          switch (state0) {
            case 0:
              mutableMatches = this.$$dom_getElementsByName$1($.CONSTANT.substring$2(selectors, 7, selectors.length - 2));
            case 1:
              state0 = 0;
              t2 = $.getInterceptor$JSArrayJSString(mutableMatches);
              len = t2.get$length(mutableMatches);
            case 2:
              state0 = 0;
              copyOfMatches = $.List_List$fixedLength(len, null);
              for (i = 0; $.CONSTANT5.$lt(i, len); ++i) {
                t1 = t2.$index(mutableMatches, i);
                if (i >= copyOfMatches.length)
                  throw $.ioore(i);
                copyOfMatches[i] = t1;
              }
              return $._FrozenElementList$_wrap(copyOfMatches);
          }
        else
          switch (state0) {
            case 0:
            default:
              if (state0 === 4 || state0 === 3 || state0 === 0 && $.RegExp_RegExp("^[*a-zA-Z0-9]+$", true, false).hasMatch$1(selectors) === true)
                switch (state0) {
                  case 0:
                    mutableMatches = this.$$dom_getElementsByTagName$1(selectors);
                  case 3:
                    state0 = 0;
                    t2 = $.getInterceptor$JSArrayJSString(mutableMatches);
                    len = t2.get$length(mutableMatches);
                  case 4:
                    state0 = 0;
                    copyOfMatches = $.List_List$fixedLength(len, null);
                    for (i = 0; $.CONSTANT5.$lt(i, len); ++i) {
                      t1 = t2.$index(mutableMatches, i);
                      if (i >= copyOfMatches.length)
                        throw $.ioore(i);
                      copyOfMatches[i] = t1;
                    }
                    return $._FrozenElementList$_wrap(copyOfMatches);
                }
              else
                return $._FrozenElementList$_wrap(this.$$dom_querySelectorAll$1(selectors));
          }
    }
  }
});

$.$defineNativeClass("DocumentFragment", {
  get$children: function() {
    if (this._children == null)
      this._children = $.FilteredElementList$(this);
    return this._children;
  },
  queryAll$1: function(selectors) {
    return $._FrozenElementList$_wrap(this.$$dom_querySelectorAll$1(selectors));
  },
  set$innerHtml: function(value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("set$innerHtml")) {
      var e, nodes;
      $.clear(this.get$nodes());
      e = $.Element_Element$tag("div");
      e.set$innerHtml(value);
      nodes = $.List_List$from(e.get$nodes());
      $.addAll(this.get$nodes(), nodes);
    } else
      return Object.prototype.set$innerHtml.call(this, value);
  },
  $$dom_querySelectorAll$1: function(selectors) {
    return this.querySelectorAll(selectors);
  }
});

$.$defineNativeClass("DOMError", {"": "name>"});

$.$defineNativeClass("DOMException", {
  get$name: function() {
    var errorName = this.name;
    if ($._Device_isWebKit() === true && errorName === "SECURITY_ERR")
      return "SecurityError";
    if ($._Device_isWebKit() === true && errorName === "SYNTAX_ERR")
      return "SyntaxError";
    return errorName;
  },
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("Element", {"": "$$dom_children:children~,hidden<,id>,innerHtml:innerHTML|,$$dom_className:className},$$dom_firstElementChild:firstElementChild~,$$dom_lastElementChild:lastElementChild~,style>",
  get$attributes: function() {
    return $._ElementAttributeMap$(this);
  },
  get$children: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$children")) {
      return $._ChildrenElementList$_wrap(this);
    } else
      return Object.prototype.get$children.call(this);
  },
  set$children: function(value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("set$children")) {
      var copy, children, t1;
      copy = $.List_List$from(value);
      children = this.get$children();
      t1 = $.getInterceptor$JSArray(children);
      t1.clear$0(children);
      t1.addAll$1(children, copy);
    } else
      return Object.prototype.set$children.call(this, value);
  },
  queryAll$1: function(selectors) {
    return $._FrozenElementList$_wrap(this.$$dom_querySelectorAll$1(selectors));
  },
  get$classes: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$classes")) {
      return $._ElementCssClassSet$(this);
    } else
      return Object.prototype.get$classes.call(this);
  },
  get$dataAttributes: function() {
    return $._DataAttributeMap$(this.get$attributes());
  },
  translate$2: function(arg0, arg1) {
    return this.translate.call$2(arg0, arg1);
  },
  $$dom_getAttribute$1: function($name) {
    return this.getAttribute($name);
  },
  getBoundingClientRect$0: function() {
    return this.getBoundingClientRect();
  },
  $$dom_hasAttribute$1: function($name) {
    return this.hasAttribute($name);
  },
  $$dom_querySelectorAll$1: function(selectors) {
    return this.querySelectorAll(selectors);
  },
  $$dom_removeAttribute$1: function($name) {
    return this.removeAttribute($name);
  },
  $$dom_setAttribute$2: function($name, value) {
    return this.setAttribute($name,value);
  },
  get$onBlur: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$onBlur")) {
      return $.CONSTANT16.forTarget$1(this);
    } else
      return Object.prototype.get$onBlur.call(this);
  },
  get$onClick: function() {
    return $.CONSTANT11.forTarget$1(this);
  },
  get$onMouseDown: function() {
    return $.CONSTANT17.forTarget$1(this);
  },
  get$onMouseMove: function() {
    return $.CONSTANT10.forTarget$1(this);
  },
  get$onMouseOut: function() {
    return $.CONSTANT9.forTarget$1(this);
  },
  get$onMouseUp: function() {
    return $.CONSTANT18.forTarget$1(this);
  },
  $isElement: function() {
    return true;
  }
});

$.$defineNativeClass("HTMLEmbedElement", {"": "height=,name>,width="});

$.$defineNativeClass("Event", {
  get$target: function() {
    return $._convertNativeToDart_EventTarget(this.target);
  },
  preventDefault$0: function() {
    return this.preventDefault();
  }
});

$.$defineNativeClass("EventException", {"": "name>",
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("EventTarget", {
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    if (Object.getPrototypeOf(this).hasOwnProperty("$$dom_addEventListener$3")) {
      return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
    } else
      return Object.prototype.$$dom_addEventListener$3.call(this, type, listener, useCapture);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    if (Object.getPrototypeOf(this).hasOwnProperty("$$dom_removeEventListener$3")) {
      return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
    } else
      return Object.prototype.$$dom_removeEventListener$3.call(this, type, listener, useCapture);
  }
});

$.$defineNativeClass("HTMLFieldSetElement", {"": "disabled<,name>"});

$.$defineNativeClass("FileException", {"": "name>",
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("HTMLFormElement", {"": "length>,name>",
  reset$0: function() {
    return this.reset();
  }
});

$.$defineNativeClass("HTMLCollection", {
  get$length: function() {
    return this.length;
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure$1(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  map$1: function(f) {
    return $.MappedListIterable$(this, f, 0, null);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  any$1: function(f) {
    return $.IterableMixinWorkaround_any(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.HashSet_HashSet$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq(this.get$length(), 0);
  },
  firstMatching$2$orElse: function(test, orElse) {
    return $.IterableMixinWorkaround_firstMatching(this, test, orElse);
  },
  singleMatching$1: function(test) {
    return $.IterableMixinWorkaround_singleMatching(this, test);
  },
  elementAt$1: function(index) {
    return this.$index(index);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, this.get$length());
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$first: function() {
    if ($.$$gt(this.get$length(), 0) === true)
      return this.$index(0);
    throw $.$$throw($.StateError$("No elements"));
  },
  get$last: function() {
    if ($.$$gt(this.get$length(), 0) === true)
      return this.$index($.$$sub(this.get$length(), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  insertRange$3: function(start, rangeLength, initialValue) {
    throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("XMLHttpRequestException", {"": "name>",
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("HTMLIFrameElement", {"": "height=,name>,width="});

$.$defineNativeClass("HTMLImageElement", {"": "height=,width=,x>,y>",
  complete$1: function(arg0) {
    return this.complete.call$1(arg0);
  }
});

$.$defineNativeClass("HTMLInputElement", {"": "disabled<,height=,name>,pattern>,value=,width=",
  $isElement: function() {
    return true;
  },
  $isNode: function() {
    return true;
  }
});

$.$defineNativeClass("HTMLKeygenElement", {"": "disabled<,name>"});

$.$defineNativeClass("HTMLLIElement", {"": "value="});

$.$defineNativeClass("HTMLLinkElement", {"": "disabled<"});

$.$defineNativeClass("Location", {
  toString$0: function() {
    return this.toString();
  },
  $isLocation: function() {
    return true;
  }
});

$.$defineNativeClass("HTMLMapElement", {"": "name>"});

$.$defineNativeClass("HTMLMediaElement", {"": "error>"});

$.$defineNativeClass("MessageEvent", {"": "ports>"});

$.$defineNativeClass("HTMLMetaElement", {"": "name>"});

$.$defineNativeClass("HTMLMeterElement", {"": "value="});

$.$defineNativeClass("MouseEvent", {"": "clientX>,clientY>,toElement>,x>,y>",
  get$offsetX: function() {
    if (!!this.offsetX)
      return this.offsetX;
    else {
      var target = this.get$target();
      if (!(typeof target === "object" && target !== null && target.$isElement()))
        throw $.$$throw($.UnsupportedError$("offsetX is only supported on elements"));
      return $.$$sub(this.clientX, this.get$target().getBoundingClientRect$0().get$left());
    }
  },
  get$offsetY: function() {
    if (!!this.offsetY)
      return this.offsetY;
    else {
      var target = this.get$target();
      if (!(typeof target === "object" && target !== null && target.$isElement()))
        throw $.$$throw($.UnsupportedError$("offsetY is only supported on elements"));
      return $.$$sub(this.clientY, this.get$target().getBoundingClientRect$0().get$top());
    }
  }
});

$.$defineNativeClass("NamedNodeMap", {
  get$length: function() {
    return this.length;
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure$1(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  map$1: function(f) {
    return $.MappedListIterable$(this, f, 0, null);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  any$1: function(f) {
    return $.IterableMixinWorkaround_any(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.HashSet_HashSet$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq(this.get$length(), 0);
  },
  firstMatching$2$orElse: function(test, orElse) {
    return $.IterableMixinWorkaround_firstMatching(this, test, orElse);
  },
  singleMatching$1: function(test) {
    return $.IterableMixinWorkaround_singleMatching(this, test);
  },
  elementAt$1: function(index) {
    return this.$index(index);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, this.get$length());
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$first: function() {
    if ($.$$gt(this.get$length(), 0) === true)
      return this.$index(0);
    throw $.$$throw($.StateError$("No elements"));
  },
  get$last: function() {
    if ($.$$gt(this.get$length(), 0) === true)
      return this.$index($.$$sub(this.get$length(), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  insertRange$3: function(start, rangeLength, initialValue) {
    throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("Navigator", {"": "userAgent>"});

$.$defineNativeClass("Node", {"": "$$dom_attributes:attributes~,$$dom_childNodes:childNodes~,$$dom_localName:localName~,$$dom_namespaceUri:namespaceURI~,text:textContent|",
  get$nodes: function() {
    return $._ChildNodeListLazy$(this);
  },
  remove$0: function() {
    var t1 = this.parentNode;
    if (!(t1 == null))
      t1.$$dom_removeChild$1(this);
  },
  replaceWith$1: function(otherNode) {
    var $parent, exception;
    try {
      $parent = this.parentNode;
      $parent.$$dom_replaceChild$2(otherNode, this);
    } catch (exception) {
      $.unwrapException(exception);
    }

    return this;
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_appendChild$1: function(newChild) {
    return this.appendChild(newChild);
  },
  contains$1: function(other) {
    return this.contains(other);
  },
  get$contains: function() {
    return new $.BoundClosure$1(this, "contains$1");
  },
  $$dom_removeChild$1: function(oldChild) {
    return this.removeChild(oldChild);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_replaceChild$2: function(newChild, oldChild) {
    return this.replaceChild(newChild,oldChild);
  },
  $isNode: function() {
    return true;
  }
});

$.$defineNativeClass("NodeList", {
  get$length: function() {
    return this.length;
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure$1(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  map$1: function(f) {
    return $.MappedListIterable$(this, f, 0, null);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  any$1: function(f) {
    return $.IterableMixinWorkaround_any(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.HashSet_HashSet$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq(this.get$length(), 0);
  },
  firstMatching$2$orElse: function(test, orElse) {
    return $.IterableMixinWorkaround_firstMatching(this, test, orElse);
  },
  singleMatching$1: function(test) {
    return $.IterableMixinWorkaround_singleMatching(this, test);
  },
  elementAt$1: function(index) {
    return this.$index(index);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, this.get$length());
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$first: function() {
    if ($.$$gt(this.get$length(), 0) === true)
      return this.$index(0);
    throw $.$$throw($.StateError$("No elements"));
  },
  get$last: function() {
    if ($.$$gt(this.get$length(), 0) === true)
      return this.$index($.$$sub(this.get$length(), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  insertRange$3: function(start, rangeLength, initialValue) {
    throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("HTMLObjectElement", {"": "height=,name>,width="});

$.$defineNativeClass("HTMLOptGroupElement", {"": "disabled<"});

$.$defineNativeClass("HTMLOptionElement", {"": "disabled<,index>,value="});

$.$defineNativeClass("HTMLOutputElement", {"": "name>,value="});

$.$defineNativeClass("HTMLParamElement", {"": "name>,value="});

$.$defineNativeClass("HTMLProgressElement", {"": "value="});

$.$defineNativeClass("RadioNodeList", {"": "value="});

$.$defineNativeClass("RangeException", {"": "name>",
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("RTCIceCandidate", {"": "candidate>"});

$.$defineNativeClass("RTCIceCandidateEvent", {"": "candidate>"});

$.$defineNativeClass("HTMLSelectElement", {"": "disabled<,length>,name>,value="});

$.$defineNativeClass("ShadowRoot", {"": "innerHtml:innerHTML|"});

$.$defineNativeClass("SpeechRecognitionError", {"": "error>"});

$.$defineNativeClass("Storage", {
  containsKey$1: function(key) {
    return !(this.$$dom_getItem$1(key) == null);
  },
  $index: function(key) {
    return this.$$dom_getItem$1(key);
  },
  $indexSet: function(key, value) {
    this.$$dom_setItem$2(key, value);
  },
  putIfAbsent$2: function(key, ifAbsent) {
    if (this.$$dom_getItem$1(key) == null)
      this.$indexSet(key, ifAbsent.call$0());
    return this.$index(key);
  },
  remove$1: function(key) {
    var value = this.$index(key);
    this.$$dom_removeItem$1(key);
    return value;
  },
  clear$0: function() {
    return this.$$dom_clear$0();
  },
  forEach$1: function(f) {
    var i, key;
    for (i = 0; true; ++i) {
      key = this.$$dom_key$1(i);
      if (key == null)
        return;
      f.call$2(key, this.$index(key));
    }
  },
  get$keys: function() {
    var keys = [];
    this.forEach$1(new $.Storage_keys_anon(keys));
    return keys;
  },
  get$values: function() {
    var values = [];
    this.forEach$1(new $.Storage_values_anon(values));
    return values;
  },
  get$length: function() {
    return this.length;
  },
  get$isEmpty: function() {
    return this.$$dom_key$1(0) == null;
  },
  $$dom_clear$0: function() {
    return this.clear();
  },
  $$dom_getItem$1: function(key) {
    return this.getItem(key);
  },
  $$dom_key$1: function(index) {
    return this.key(index);
  },
  $$dom_removeItem$1: function(key) {
    return this.removeItem(key);
  },
  $$dom_setItem$2: function(key, data) {
    return this.setItem(key,data);
  },
  $isMap: function() {
    return true;
  }
});

$.$defineNativeClass("StorageEvent", {"": "key>"});

$.$defineNativeClass("HTMLStyleElement", {"": "disabled<"});

$.$defineNativeClass("HTMLTableCellElement", {"": "colSpan<,rowSpan<"});

$.$defineNativeClass("HTMLTableElement", {
  insertRow$1: function(index) {
    return this.insertRow(index);
  }
});

$.$defineNativeClass("HTMLTableRowElement", {
  insertCell$1: function(index) {
    return this.insertCell(index);
  }
});

$.$defineNativeClass("HTMLTableSectionElement", {
  insertRow$1: function(index) {
    return this.insertRow(index);
  }
});

$.$defineNativeClass("HTMLTextAreaElement", {"": "disabled<,name>,value="});

$.$defineNativeClass("Uint8Array", {
  get$length: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$length")) {
      return this.length;
    } else
      return Object.prototype.get$length.call(this);
  },
  $index: function(index) {
    if (Object.getPrototypeOf(this).hasOwnProperty("$index")) {
      return this[index];
    } else
      return Object.prototype.$index.call(this, index);
  },
  $indexSet: function(index, value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("$indexSet")) {
      this[index] = value;
    } else
      return Object.prototype.$indexSet.call(this, index, value);
  },
  get$iterator: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$iterator")) {
      return $.FixedSizeListIterator$(this);
    } else
      return Object.prototype.get$iterator.call(this);
  },
  contains$1: function(element) {
    if (Object.getPrototypeOf(this).hasOwnProperty("contains$1")) {
      return $.IterableMixinWorkaround_contains(this, element);
    } else
      return Object.prototype.contains$1.call(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure$1(this, "contains$1");
  },
  forEach$1: function(f) {
    if (Object.getPrototypeOf(this).hasOwnProperty("forEach$1")) {
      var t1;
      for (t1 = this.get$iterator(); t1.moveNext$0() === true;)
        f.call$1(t1.get$current());
      return;
    } else
      return Object.prototype.forEach$1.call(this, f);
  },
  join$1: function(separator) {
    if (Object.getPrototypeOf(this).hasOwnProperty("join$1")) {
      return $.IterableMixinWorkaround_joinList(this, separator);
    } else
      return Object.prototype.join$1.call(this, separator);
  },
  map$1: function(f) {
    if (Object.getPrototypeOf(this).hasOwnProperty("map$1")) {
      return $.MappedListIterable$(this, f, 0, null);
    } else
      return Object.prototype.map$1.call(this, f);
  },
  where$1: function(f) {
    if (Object.getPrototypeOf(this).hasOwnProperty("where$1")) {
      return $.WhereIterable$(this, f);
    } else
      return Object.prototype.where$1.call(this, f);
  },
  any$1: function(f) {
    if (Object.getPrototypeOf(this).hasOwnProperty("any$1")) {
      return $.IterableMixinWorkaround_any(this, f);
    } else
      return Object.prototype.any$1.call(this, f);
  },
  toList$0: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("toList$0")) {
      return $.List_List$from(this);
    } else
      return Object.prototype.toList$0.call(this);
  },
  toSet$0: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("toSet$0")) {
      return $.HashSet_HashSet$from(this);
    } else
      return Object.prototype.toSet$0.call(this);
  },
  get$isEmpty: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$isEmpty")) {
      return $.$$eq(this.get$length(), 0);
    } else
      return Object.prototype.get$isEmpty.call(this);
  },
  firstMatching$2$orElse: function(test, orElse) {
    if (Object.getPrototypeOf(this).hasOwnProperty("firstMatching$2$orElse")) {
      return $.IterableMixinWorkaround_firstMatching(this, test, orElse);
    } else
      return Object.prototype.firstMatching$2$orElse.call(this, test, orElse);
  },
  singleMatching$1: function(test) {
    if (Object.getPrototypeOf(this).hasOwnProperty("singleMatching$1")) {
      return $.IterableMixinWorkaround_singleMatching(this, test);
    } else
      return Object.prototype.singleMatching$1.call(this, test);
  },
  elementAt$1: function(index) {
    if (Object.getPrototypeOf(this).hasOwnProperty("elementAt$1")) {
      return this.$index(index);
    } else
      return Object.prototype.elementAt$1.call(this, index);
  },
  add$1: function(value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("add$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
    } else
      return Object.prototype.add$1.call(this, value);
  },
  addLast$1: function(value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("addLast$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
    } else
      return Object.prototype.addLast$1.call(this, value);
  },
  addAll$1: function(iterable) {
    if (Object.getPrototypeOf(this).hasOwnProperty("addAll$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
    } else
      return Object.prototype.addAll$1.call(this, iterable);
  },
  clear$0: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("clear$0")) {
      throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
    } else
      return Object.prototype.clear$0.call(this);
  },
  sort$1: function(compare) {
    if (Object.getPrototypeOf(this).hasOwnProperty("sort$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
    } else
      return Object.prototype.sort$1.call(this, compare);
  },
  indexOf$2: function(element, start) {
    if (Object.getPrototypeOf(this).hasOwnProperty("indexOf$2")) {
      return $.Lists_indexOf(this, element, start, this.get$length());
    } else
      return Object.prototype.indexOf$2.call(this, element, start);
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$first: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$first")) {
      if ($.$$gt(this.get$length(), 0) === true)
        return this.$index(0);
      throw $.$$throw($.StateError$("No elements"));
    } else
      return Object.prototype.get$first.call(this);
  },
  get$last: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$last")) {
      if ($.$$gt(this.get$length(), 0) === true)
        return this.$index($.$$sub(this.get$length(), 1));
      throw $.$$throw($.StateError$("No elements"));
    } else
      return Object.prototype.get$last.call(this);
  },
  removeLast$0: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("removeLast$0")) {
      throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
    } else
      return Object.prototype.removeLast$0.call(this);
  },
  remove$1: function(object) {
    if (Object.getPrototypeOf(this).hasOwnProperty("remove$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
    } else
      return Object.prototype.remove$1.call(this, object);
  },
  removeAll$1: function(elements) {
    if (Object.getPrototypeOf(this).hasOwnProperty("removeAll$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
    } else
      return Object.prototype.removeAll$1.call(this, elements);
  },
  removeMatching$1: function(test) {
    if (Object.getPrototypeOf(this).hasOwnProperty("removeMatching$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
    } else
      return Object.prototype.removeMatching$1.call(this, test);
  },
  removeRange$2: function(start, rangeLength) {
    if (Object.getPrototypeOf(this).hasOwnProperty("removeRange$2")) {
      throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
    } else
      return Object.prototype.removeRange$2.call(this, start, rangeLength);
  },
  insertRange$3: function(start, rangeLength, initialValue) {
    if (Object.getPrototypeOf(this).hasOwnProperty("insertRange$3")) {
      throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
    } else
      return Object.prototype.insertRange$3.call(this, start, rangeLength, initialValue);
  },
  getRange$2: function(start, rangeLength) {
    if (Object.getPrototypeOf(this).hasOwnProperty("getRange$2")) {
      return $.Lists_getRange(this, start, rangeLength, []);
    } else
      return Object.prototype.getRange$2.call(this, start, rangeLength);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("Uint8ClampedArray", {
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure$1(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = this.get$iterator(); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  map$1: function(f) {
    return $.MappedListIterable$(this, f, 0, null);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  any$1: function(f) {
    return $.IterableMixinWorkaround_any(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.HashSet_HashSet$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq(this.get$length(), 0);
  },
  firstMatching$2$orElse: function(test, orElse) {
    return $.IterableMixinWorkaround_firstMatching(this, test, orElse);
  },
  singleMatching$1: function(test) {
    return $.IterableMixinWorkaround_singleMatching(this, test);
  },
  elementAt$1: function(index) {
    return this.$index(index);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  sort$1: function(compare) {
    throw $.$$throw($.UnsupportedError$("Cannot sort immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, this.get$length());
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$first: function() {
    if ($.$$gt(this.get$length(), 0) === true)
      return this.$index(0);
    throw $.$$throw($.StateError$("No elements"));
  },
  get$last: function() {
    if ($.$$gt(this.get$length(), 0) === true)
      return this.$index($.$$sub(this.get$length(), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeRange$2: function(start, rangeLength) {
    throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
  },
  insertRange$3: function(start, rangeLength, initialValue) {
    throw $.$$throw($.UnsupportedError$("Cannot insertRange on immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("HTMLVideoElement", {"": "height=,width="});

$.$defineNativeClass("WebGLRenderingContext", {
  clear$1: function(mask) {
    return this.clear(mask);
  }
});

$.$defineNativeClass("DOMWindow", {"": "name>,navigator>",
  get$location: function() {
    var result = this.get$_location();
    if ($.Window__isDartLocation(result) === true)
      return result;
    if (null == this._location_wrapper)
      this._location_wrapper = $._LocationWrapper$(result);
    return this._location_wrapper;
  },
  set$location: function(value) {
    if (typeof value === "object" && value !== null && !!value.$is_LocationWrapper)
      this.set$_location(value._ptr);
    else
      this.set$_location(value);
  },
  get$_location: function() {
    return this.location;
  },
  set$_location: function(value) {
    this.location = value;
  },
  requestAnimationFrame$1: function(callback) {
    this._ensureRequestAnimationFrame$0();
    return this._requestAnimationFrame$1(callback);
  },
  _requestAnimationFrame$1: function(callback) {
    return this.requestAnimationFrame($.convertDartClosureToJS(callback, 1));
  },
  _ensureRequestAnimationFrame$0: function() {
    if (!!(this.requestAnimationFrame && this.cancelAnimationFrame))
      return;
      (function($this) {
   var vendors = ['ms', 'moz', 'webkit', 'o'];
   for (var i = 0; i < vendors.length && !$this.requestAnimationFrame; ++i) {
     $this.requestAnimationFrame = $this[vendors[i] + 'RequestAnimationFrame'];
     $this.cancelAnimationFrame =
         $this[vendors[i]+'CancelAnimationFrame'] ||
         $this[vendors[i]+'CancelRequestAnimationFrame'];
   }
   if ($this.requestAnimationFrame && $this.cancelAnimationFrame) return;
   $this.requestAnimationFrame = function(callback) {
      return window.setTimeout(function() {
        callback(Date.now());
      }, 16 /* 16ms ~= 60fps */);
   };
   $this.cancelAnimationFrame = function(id) { clearTimeout(id); }
  })(this);
  },
  get$top: function() {
    return $._convertNativeToDart_Window(this.top);
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  close$0: function() {
    return this.close();
  },
  moveTo$2: function(x, y) {
    return this.moveTo(x,y);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  get$onBlur: function() {
    return $.CONSTANT16.forTarget$1(this);
  },
  get$onClick: function() {
    return $.CONSTANT11.forTarget$1(this);
  },
  get$onMouseDown: function() {
    return $.CONSTANT17.forTarget$1(this);
  },
  get$onMouseMove: function() {
    return $.CONSTANT10.forTarget$1(this);
  },
  get$onMouseOut: function() {
    return $.CONSTANT9.forTarget$1(this);
  },
  get$onMouseUp: function() {
    return $.CONSTANT18.forTarget$1(this);
  }
});

$.$defineNativeClass("XPathException", {"": "name>",
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("SVGAElement", {
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGCircleElement", {"": "r>",
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGClipPathElement", {
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGDefsElement", {
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGEllipseElement", {
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGFEBlendElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEColorMatrixElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEComponentTransferElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFECompositeElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEConvolveMatrixElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEDiffuseLightingElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEDisplacementMapElement", {"": "height>,width>,x>,y>",
  scale$1: function(arg0) {
    return this.scale.call$1(arg0);
  }
});

$.$defineNativeClass("SVGFEFloodElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEGaussianBlurElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEImageElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEMergeElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEMorphologyElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEOffsetElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFEPointLightElement", {"": "x>,y>"});

$.$defineNativeClass("SVGFESpecularLightingElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFESpotLightElement", {"": "x>,y>"});

$.$defineNativeClass("SVGFETileElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFETurbulenceElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGFilterElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGForeignObjectElement", {"": "height>,width>,x>,y>",
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGGElement", {
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGImageElement", {"": "height>,width>,x>,y>",
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGLineElement", {
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGMaskElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGPathElement", {
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGPatternElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGPolygonElement", {
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGPolylineElement", {
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGRadialGradientElement", {"": "r>"});

$.$defineNativeClass("SVGRectElement", {"": "height>,width>,x>,y>",
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGStyleElement", {"": "disabled<"});

$.$defineNativeClass("SVGElement", {
  get$classes: function() {
    if (this._cssClassSet == null)
      this._cssClassSet = $._AttributeClassSet$(this);
    return this._cssClassSet;
  },
  get$children: function() {
    return $.FilteredElementList$(this);
  },
  set$children: function(value) {
    var children, t1;
    children = this.get$children();
    t1 = $.getInterceptor$JSArray(children);
    t1.clear$0(children);
    t1.addAll$1(children, value);
  },
  set$innerHtml: function(svg) {
    var container, t1;
    container = $.Element_Element$tag("div");
    container.set$innerHtml("<svg version=\"1.1\">" + $.S(svg) + "</svg>");
    t1 = container.get$children();
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.set$innerHtml$bailout1(1, t1);
    if (0 >= t1.length)
      throw $.ioore(0);
    this.set$children(t1[0].get$children());
  },
  set$innerHtml$bailout1: function(state0, t1) {
    this.set$children($.$$index(t1, 0).get$children());
  },
  get$$$dom_children: function() {
    throw $.$$throw($.UnsupportedError$("Cannot get dom_children on SVG."));
  },
  get$id: function() {
    return this.id;
  }
});

$.$defineNativeClass("SVGException", {"": "name>",
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("SVGSVGElement", {"": "height>,width>,x>,y>",
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGSwitchElement", {
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGTextElement", {
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGTextPositioningElement", {"": "x>,y>"});

$.$defineNativeClass("SVGUseElement", {"": "height>,width>,x>,y>",
  transform$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
    return this.transform.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
  }
});

$.$defineNativeClass("SVGCursorElement", {"": "x>,y>"});

$.$defineNativeClass("SVGFEDropShadowElement", {"": "height>,width>,x>,y>"});

$.$defineNativeClass("SVGGlyphRefElement", {"": "x>,y>"});

// 113 dynamic classes.
// 240 classes
// 22 !leaf
(function() {
  var v0_TextPositioningElement = "SVGTextPositioningElement|SVGAltGlyphElement|SVGTSpanElement|SVGTextElement|SVGTRefElement", v1_MediaElement = "HTMLMediaElement|HTMLVideoElement|HTMLAudioElement", v2_SvgElement = [v0_TextPositioningElement, "SVGElement|SVGStyledElement|SVGAElement|SVGTextContentElement|SVGTextPathElement|SVGCircleElement|SVGClipPathElement|SVGDefsElement|SVGDescElement|SVGEllipseElement|SVGFEBlendElement|SVGFEColorMatrixElement|SVGFEComponentTransferElement|SVGFECompositeElement|SVGFEDiffuseLightingElement|SVGFEConvolveMatrixElement|SVGFEDisplacementMapElement|SVGFEMorphologyElement|SVGFEOffsetElement|SVGFEMergeElement|SVGFilterElement|SVGFEGaussianBlurElement|SVGFESpecularLightingElement|SVGGElement|SVGFETileElement|SVGFETurbulenceElement|SVGFEImageElement|SVGFEFloodElement|SVGMarkerElement|SVGMaskElement|SVGImageElement|SVGGradientElement|SVGLinearGradientElement|SVGRadialGradientElement|SVGForeignObjectElement|SVGLineElement|SVGPathElement|SVGPatternElement|SVGPolylineElement|SVGRectElement|SVGPolygonElement|SVGStopElement|SVGSVGElement|SVGSymbolElement|SVGSwitchElement|SVGTitleElement|SVGUseElement|SVGFEDropShadowElement|SVGGlyphRefElement|SVGMissingGlyphElement|SVGAnimationElement|SVGAnimateElement|SVGAnimateMotionElement|SVGAnimateTransformElement|SVGSetElement|SVGAnimateColorElement|SVGComponentTransferFunctionElement|SVGFEFuncBElement|SVGFEFuncRElement|SVGFEFuncAElement|SVGFEFuncGElement|SVGFEMergeNodeElement|SVGFEDistantLightElement|SVGFEPointLightElement|SVGMetadataElement|SVGFESpotLightElement|SVGScriptElement|SVGStyleElement|SVGViewElement|SVGAltGlyphDefElement|SVGAltGlyphItemElement|SVGCursorElement|SVGFontFaceElement|SVGFontElement|SVGFontFaceNameElement|SVGGlyphElement|SVGFontFaceFormatElement|SVGFontFaceUriElement|SVGHKernElement|SVGMPathElement|SVGVKernElement|SVGFontFaceSrcElement"].join("|"), v3_MouseEvent = "MouseEvent|WheelEvent", v4_Element = [v1_MediaElement, v2_SvgElement, "Element|HTMLPreElement|HTMLProgressElement|HTMLQuoteElement|HTMLScriptElement|HTMLSelectElement|HTMLShadowElement|HTMLSourceElement|HTMLSpanElement|HTMLStyleElement|HTMLTableCaptionElement|HTMLTableCellElement|HTMLTableColElement|HTMLTableElement|HTMLTableRowElement|HTMLTableSectionElement|HTMLTextAreaElement|HTMLTitleElement|HTMLTrackElement|HTMLUListElement|HTMLUnknownElement|HTMLAppletElement|HTMLBaseFontElement|HTMLDirectoryElement|HTMLFontElement|HTMLFrameElement|HTMLFrameSetElement|HTMLMarqueeElement|HTMLElement|HTMLAnchorElement|HTMLAreaElement|HTMLBRElement|HTMLBaseElement|HTMLBodyElement|HTMLButtonElement|HTMLCanvasElement|HTMLContentElement|HTMLDListElement|HTMLDataListElement|HTMLDetailsElement|HTMLDivElement|HTMLEmbedElement|HTMLFieldSetElement|HTMLFormElement|HTMLHRElement|HTMLHeadElement|HTMLHeadingElement|HTMLHtmlElement|HTMLIFrameElement|HTMLImageElement|HTMLInputElement|HTMLKeygenElement|HTMLLIElement|HTMLLabelElement|HTMLLegendElement|HTMLLinkElement|HTMLMapElement|HTMLMenuElement|HTMLMetaElement|HTMLMeterElement|HTMLModElement|HTMLOListElement|HTMLObjectElement|HTMLOptGroupElement|HTMLOptionElement|HTMLOutputElement|HTMLParagraphElement|HTMLParamElement"].join("|"), v5_DocumentFragment = "DocumentFragment|ShadowRoot", v6_CharacterData = "CharacterData|Text|CDATASection|Comment", v7_Document = "Document|SVGDocument|HTMLDocument", v8_Node = [v4_Element, v5_DocumentFragment, v6_CharacterData, v7_Document, "Node|ProcessingInstruction|Attr|DocumentType|EntityReference|Notation"].join("|");
  $.dynamicSetMetadata([["CharacterData", v6_CharacterData], ["Document", v7_Document], ["DocumentFragment", v5_DocumentFragment], ["Uint8Array", "Uint8Array|Uint8ClampedArray"], ["SVGTextPositioningElement", v0_TextPositioningElement], ["SVGElement", v2_SvgElement], ["HTMLMediaElement", v1_MediaElement], ["Element", v4_Element], ["MouseEvent", v3_MouseEvent], ["Event", [v3_MouseEvent, "Event|PopStateEvent|ProgressEvent|XMLHttpRequestProgressEvent|RTCDataChannelEvent|RTCIceCandidateEvent|SpeechInputEvent|SpeechRecognitionError|SpeechRecognitionEvent|StorageEvent|UIEvent|TextEvent|TouchEvent|CompositionEvent|SVGZoomEvent|KeyboardEvent|TrackEvent|TransitionEvent|WebGLContextEvent|WebKitTransitionEvent|IDBVersionChangeEvent|CloseEvent|BeforeLoadEvent|CustomEvent|WebKitAnimationEvent|DeviceMotionEvent|DeviceOrientationEvent|ErrorEvent|HashChangeEvent|AudioProcessingEvent|OfflineAudioCompletionEvent|MediaKeyEvent|MediaStreamEvent|MediaStreamTrackEvent|MessageEvent|MutationEvent|OverflowEvent|PageTransitionEvent"].join("|")], ["Node", v8_Node], ["EventTarget", [v8_Node, "EventTarget|DOMWindow"].join("|")], ["HTMLCollection", "HTMLCollection|HTMLFormControlsCollection|HTMLOptionsCollection"], ["NodeList", "NodeList|RadioNodeList"]]);
})();

$.main.call$0 = $.main;

//
// BEGIN invoke [main].
//
if (typeof document !== 'undefined' && document.readyState !== 'complete') {
  document.addEventListener('readystatechange', function () {
    if (document.readyState == 'complete') {
      if (typeof dartMainRunner === 'function') {
        dartMainRunner(function() { $.startRootIsolate($.main); });
      } else {
        $.startRootIsolate($.main);
      }
    }
  }, false);
} else {
  if (typeof dartMainRunner === 'function') {
    dartMainRunner(function() { $.startRootIsolate($.main); });
  } else {
    $.startRootIsolate($.main);
  }
}
//
// END invoke [main].
//

function init() {
Isolate.$isolateProperties = {};
function generateAccessor(field, prototype) {
  var len = field.length;
  var lastCharCode = field.charCodeAt(len - 1);
  var needsAccessor = (lastCharCode & 63) >= 60;
  if (needsAccessor) {
    var needsGetter = (lastCharCode & 3) > 0;
    var needsSetter = (lastCharCode & 2) == 0;
    var renaming = (lastCharCode & 64) != 0;
    var accessorName = field = field.substring(0, len - 1);
    if (renaming) {
      var divider = field.indexOf(":");
      accessorName = field.substring(0, divider);
      field = field.substring(divider + 1);
    }
    if (needsGetter) {
      var getterString = "return this." + field + ";";
      prototype["get$" + accessorName] = new Function(getterString);
    }
    if (needsSetter) {
      var setterString = "this." + field + " = v;";
      prototype["set$" + accessorName] = new Function("v", setterString);
    }
  }
  return field;
};
Isolate.$isolateProperties.$generateAccessor = generateAccessor;
Isolate.$defineClass = function(cls, fields, prototype) {
  var constructor;
  if (typeof fields == 'function') {
    constructor = fields;
  } else {
    var str = "function " + cls + "(";
    var body = "";
    for (var i = 0; i < fields.length; i++) {
      if (i != 0) str += ", ";
      var field = fields[i];
      field = generateAccessor(field, prototype);
      str += field;
      body += "this." + field + " = " + field + ";\n";
    }
    str += ") {" + body + "}\n";
    str += "return " + cls + ";";
    constructor = new Function(str)();
  }
  constructor.prototype = prototype;
  constructor.builtin$cls = cls;
  return constructor;
};
var supportsProto = false;
var tmp = Isolate.$defineClass('c', ['f?'], {}).prototype;
if (tmp.__proto__) {
  tmp.__proto__ = {};
  if (typeof tmp.get$f !== 'undefined') supportsProto = true;
}
Isolate.$pendingClasses = {};
Isolate.$finishClasses = function(collectedClasses) {
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var cls in collectedClasses) {
    if (hasOwnProperty.call(collectedClasses, cls)) {
      var desc = collectedClasses[cls];
      var fields = desc[''], supr;
      if (typeof fields == 'string') {
        var s = fields.split(';'); supr = s[0];
        fields = s[1] == '' ? [] : s[1].split(',');
      } else {
        supr = desc['super'];
      }
      Isolate.$isolateProperties[cls] = Isolate.$defineClass(cls, fields, desc);
      if (supr) Isolate.$pendingClasses[cls] = supr;
    }
  }
  var pendingClasses = Isolate.$pendingClasses;
  Isolate.$pendingClasses = {};
  var finishedClasses = {};
  function finishClass(cls) {
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    if (hasOwnProperty.call(finishedClasses, cls)) return;
    finishedClasses[cls] = true;
    var superclass = pendingClasses[cls];
    if (!superclass) return;
    finishClass(superclass);
    var constructor = Isolate.$isolateProperties[cls];
    var superConstructor = Isolate.$isolateProperties[superclass];
    var prototype = constructor.prototype;
    if (supportsProto) {
      prototype.__proto__ = superConstructor.prototype;
      prototype.constructor = constructor;
    } else {
      function tmp() {};
      tmp.prototype = superConstructor.prototype;
      var newPrototype = new tmp();
      constructor.prototype = newPrototype;
      newPrototype.constructor = constructor;
      for (var member in prototype) {
        if (!member) continue;          if (hasOwnProperty.call(prototype, member)) {
          newPrototype[member] = prototype[member];
        }
      }
    }
  }
  for (var cls in pendingClasses) finishClass(cls);
};
Isolate.$lazy = function(prototype, staticName, fieldName, getterName, lazyValue) {
  var getter = new Function("{ return $." + fieldName + ";}");
  var sentinelUndefined = {};
  var sentinelInProgress = {};
  prototype[fieldName] = sentinelUndefined;
  prototype[getterName] = function() {
    var result = $[fieldName];
    try {
      if (result === sentinelUndefined) {
        $[fieldName] = sentinelInProgress;
        try {
          result = $[fieldName] = lazyValue();
        } finally {
          if (result === sentinelUndefined) {
            if ($[fieldName] === sentinelInProgress) {
              $[fieldName] = null;
            }
          }
        }
      } else if (result === sentinelInProgress) {
        $.throwCyclicInit(staticName);
      }
      return result;
    } finally {
      $[getterName] = getter;
    }
  };
};
Isolate.$finishIsolateConstructor = function(oldIsolate) {
  var isolateProperties = oldIsolate.$isolateProperties;
  var isolatePrototype = oldIsolate.prototype;
  var str = "{\n";
  str += "var properties = Isolate.$isolateProperties;\n";
  for (var staticName in isolateProperties) {
    if (Object.prototype.hasOwnProperty.call(isolateProperties, staticName)) {
      str += "this." + staticName + "= properties." + staticName + ";\n";
    }
  }
  str += "}\n";
  var newIsolate = new Function(str);
  newIsolate.prototype = isolatePrototype;
  isolatePrototype.constructor = newIsolate;
  newIsolate.$isolateProperties = isolateProperties;
  return newIsolate;
};
}
//@ sourceMappingURL=vote_demo.dart.js.map
